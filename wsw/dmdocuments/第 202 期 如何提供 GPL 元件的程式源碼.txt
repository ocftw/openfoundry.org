________________________________________________________________

□■□ 自由軟體鑄造場電子報第 202 期 | 2012/08/28 □■□
________________________________________________________________

◎ 本期主題︰如何提供 GPL 元件的程式源碼
◎ 訂閱網址︰http://www.openfoundry.org/tw/news/
◎ 下次發報時間︰2012/09/11

□ 本期標題 □__________________________________________________

■ [法律專欄] 如何提供 GPL 元件的程式源碼

■ [技術專欄] Cancan 實作角色權限設計的最佳實踐 (2)

■ [源碼秘技] JACo Watermark － 給圖片加上文字浮水印

﻿■ [自由專欄] 就業市場的長尾現象

■ [源碼新聞] 「開放讓我們更有力量」COSCUP 2012

﻿■ [源碼新聞] 獲益於 LLVMpipe ， Unity 2D 將功成身退

﻿■ [源碼新聞] 美國白宮將官方請願系統的程式源碼向外釋出

﻿■ [源碼新聞] Ubuntu One 推出邀請計劃，贈送免費空間

﻿■ [源碼新聞] Khan Academy 採用 Open Source 回饋模式推動電腦教學課程

﻿■ [源碼新聞] Ubuntu 12.10 將為 Unity 帶來新功能：Previews

﻿■ [源碼新聞] Hadoop in Taiwan 2012 熱烈報名中！

﻿■ [源碼新聞] 2012 年 9 月份社群活動列表

□ 本期內容 □__________________________________________________

■ [法律專欄] 如何提供 GPL 元件的程式源碼

葛冬梅／文

GPL 授權條款制定的目的，是希望人人都可以研究、修改與散佈程式，為了要達到這個目的，取得程式源碼 (Source Code) 是不可或缺的前提要件。因為雖然一位有能力的開發者在拿到目的碼的狀況下，也有可能透過逆向工程來將程式還原到源碼的形式，但這畢竟非常不便，也不是常態，很多情形下也有違法侵權之虞。因此在 GPL 授權條款的規定中，提供程式源碼是一項非常重要的義務，針對程式的研究與修改，透過源碼形式來進行是最為便捷的。而為了讓任何一位拿到程式的後手使用者，都可以順利取得相對應的程式源碼，GPL 設有一套規定散佈者如何提供程式源碼的規定，來保障這些源碼可以持續地被後手取得。

綜合 GPL 二版與三版的規定（註一），筆者歸納出五種散佈者提供程式源碼的方式，這是因為 GPL 規定，「散佈」程式目的碼的人，有同時或是嗣後「提供」程式源碼的義務。此篇文章將給予每一種方式簡短的名稱，用以方便記憶與即時運用。這五種方式在二版與三版有些細部的差異，不過基本上非常相近，因此筆者將以 GPL-2.0 為基礎，來說明兩個版本在提供程式源碼的共通之處，而針對相異之處，將會擇其要者加以解說（註二）。

 
一、燒出去
原則上，任何一位 GPL 元件目的碼的散佈者，若是可以同時散佈相對應程式源碼的話，是自由軟體基金會 (Free Software Foundation) 建議的最佳狀況。在這種情況之下，後手同時取得程式源碼，自然可以直接瀏覽與修改程式，接著進行後續的編譯、執行等等動作。因此 GPL 所規定第一種提供 GPL 元件源碼的方式，是指將程式源碼儲存在常用的軟體交換媒介與載體 (customarily used for software interchange) 上，然後與目的碼一併散佈。目前常見的實踐方式，就是將程式源碼燒錄在同一張實體光碟上，然後在散佈目的碼的同時提供這張光碟。因為將程式源碼「燒在光碟中」來提供，是這種方式的典型代表，因此這種方式簡稱之為「燒出去」。

舉例來說：公司甲在開發多媒體機上盒 A 的時候，有利用到 GPL 元件作為其中韌體的一部份，在販賣產品 A 的時候，就可以將 A 中所有 GPL 元件的程式源碼都燒在光碟上，讓購買產品 A 的使用者，在獲得機上盒的同時，也就一併取得了 GPL 元件的程式源碼。

不過，在現在這個資訊硬體技術發達的年代，光碟並不是唯一的儲存媒介，因此隨身碟、記憶卡等也是可以作為提供程式源碼的儲存媒介與載體。

此外，要特別提醒的是，這裡所謂的儲存媒介必須是交換軟體「常用」的儲存媒介，例如若是散佈者將 GPL 元件的程式源碼印在紙張上提供給後手，這樣的方式並非一般習見的常態，因此這種提供方式很有可能會被認定為是違反 GPL 規定的。


二、寫下來
除了隨目的碼提供之外，GPL 元件的散佈者，還可以在散佈目的碼的同時，附隨提供一份書面文件 (written offer)，這份文件的主要內容，便是向取得程式目的碼的後手，說明可以透過什麼樣的方式來取得程式源碼。由於是將如何取得的方式「寫成文字」，因此這個方式稱之為「寫下來」。GPL 規定這份文件必須滿足以下兩個主要條件：

此份文件的內容必須保持三年有效；
散佈者可以向依文件要求程式源碼的後手酌收提供費用，但是這個額外提供程式源碼的費用，不可以超過合理的工本費標準。
 
這邊所謂的「三年」是指，從後手拿到目的碼開始起算持續三年。不過這個三年期間在 GPL-3.0 的規定中，只是一個最低的義務期間，若是 GPL-3.0 元件的散佈者，持續針對該元件的相關產品來提供服務或者配件，此時，這個散佈者還是必須要維持書面文件內容的有效，直到此一產品不再提供這些服務或配件為止。

舉例來說，若是一間公司乙將 GPL-3.0 元件應用到產品 B 中，而在販賣 B 的同時附隨一份書面文件，向消費者說明可以寫信到 service@ru83.com ，來索取 B 中所有 GPL-3.0 元件程式源碼的光碟一張，消費者丙於 2005 年 1 月，購買了產品 B，那麼乙對於丙這個消費者，便在 2008 年 1 月之前，都有提供該產品程式源碼的義務，然而若是丙在產品購買四年後的 2009 年 1 月，才寫信到 service@ru83.com 索取 GPL-3.0 元件的程式源碼，此時乙還有沒有提供的義務，則端視該產品是否還在販售中，若該產品仍在販售，則雖已逾三年期間，則乙還是有持續提供的義務，反之，若該產品已不再販售，則乙便可以該產品已不再維護且文件約定效期已過三年的理由，而不再提供該 GPL-3.0 元件的程式源碼。

由以上的說明內容，可以瞭解到，「寫下來」這個方式比較是針對透過商業產品散佈 GPL 元件的狀況，因為在商業習慣上，隨著產品大多會有紙本說明文字，讓消費者可以瞭解產品特性、使用方法與保固範圍等等資訊，順著這樣的商業習慣，商業散佈者只需要在原有的產品說明中，加上消費者如何取得程式源碼的說明，就可以符合 GPL 提供程式源碼的義務性規定。

 
三、傳出去
這個方式是承襲第二種而來，然而僅能運用在非商業性的散佈行為上！若是 GPL 元件的使用者在取得 GPL 元件目的碼的同時，也獲得了一份向後手說明如何取得 GPL 元件源碼的書面文件，此後該使用者要將這個 GPL 元件再散佈給其他人的時候，只要後續的散佈行為不是商業目的也沒有價金的交換，那麼散佈者原則上只需要將這份書面文件交付給後手即可，讓後手可以遵照此份書面文件內容的指示，來自行取得程式源碼。而由於此時散佈者只需要將書面文件內容傳遞給後手就可以，所以這個方式稱之為「傳出去」。

這樣的方式主要是針對一般的商品消費者所做的規定，因為一般消費者有可能購買到包含有 GPL 元件的產品，但是產品公司有時並不會一併提供產品中的程式源碼，所以不是所有的消費者都會同時持有該 GPL 產品的程式目的碼與程式源碼，不過這樣的一般消費者卻非常有可能會將產品與其中包含的程式碼再轉讓給其他人，為了配合這樣的社會常態，所以 GPL 規定當使用者是在非商業利用的前提下，來進行 GPL 程式目的碼的散佈行為，便只需要轉交後手其本來持有的書面文件即可。


四、放下來
第四種方式是指，若散佈者將程式目的碼儲放在一個特定的位置 (a designated place)，那麼也應該在相同的位置上儲放相對應的程式源碼，並讓後手可以進入這個特定位置來下載原始碼。這種方式的典型，就是將程式目的碼與程式源碼均儲放在網站同一網址的頁面上，然後供後手自行下載。而因為這個方法是將程式源碼儲放在特定位置，因此稱之為「放下來」。

不過採用這種方式的散佈者，並不需要勒令後手在下載目的碼的同時，也非得一併下載程式源碼，散佈者原則上僅需要提供一個選項，讓後手在下載目的碼的時候，瞭解到如果他需要的話，亦可以一併下載相對應的程式源碼。然而，需要特別注意的是， GPL-3.0 規定若採用這種網際網路的散佈方式，散佈者是不能再收取散佈工本費用的。

此外，考量到許多網站內容可能過於龐雜，為了避免後手進入網站後有如進入五里霧中，不容易找到正確的程式源碼下載連結，因此 GPL-3.0 還進一步要求，此種方式的散佈者必須在目的碼旁邊加上簡要說明，讓下載者可以依循說明便捷地下載到對應的程式源碼。而若是一個網頁上散佈了多個 GPL-3.0 元件的話，則建議可以製作表格來進行呈現，將目的碼與說明分別清楚地列在表上，如此將可避免後手下載到錯誤的程式源碼。


五、丟出去
由於現在點對點 (peer-to-peer, p2p) 的傳輸方式很普遍，各種製作種子 (torrent) 的軟體也相當普及，因此 GPL-3.0 特別補充說明，若是透過點對點的方式散佈目的碼的話，亦可採將程式源碼傳輸資訊一併寫入 torrent 的方式為之，讓使用者透過 p2p 下載該 GPL 授權元件時，可以自行透過圖形介面勾選的方式，決定是要單獨進行程式目的碼的下載，亦或是一併勾選程式源碼，讓目的碼與源碼一起透過 p2p 的互流機制下載到自己的儲存裝置裡。而由於利用點對點散佈方式，必須要將程式元件的 torrent 先「丟」出去，放置到網路論壇或其他平台上讓他人取得，所以這個方式稱為「丟出去」。

這個方式跟上述第四個方式，都是拜近年網路科技發達所賜，而成為提供程式源碼的可行散佈方式，因此 GPL-3.0 也規定散佈者透過此一方式提供程式源碼的話，不可以收取任何額外的費用。

以上這五個方式，原則上散佈者只需要選擇其中一項來實行就可以了，但若是同時採用二種以上的方式來併行散佈，當然更是沒有問題，例如：承接上面產品 B 的例子，公司乙除了透過書面文件提供程式源碼光碟之外，還可以同時提供下載程式源碼的 torrent，以及將程式源碼放到網站頁面上，供後手與他人自由下載。因此，GPL 元件的散佈者可衡量自身的狀況，從以上所介紹的方式中，選出最適合的方法來提供 GPL 授權元件的程式源碼，以在享受 GPL 程式自由修改便利性的同時，也能夠善盡提供程式源碼的重要義務，將上述的必須資訊回饋給 GPL 專案開發社群，以維持使用者與開發者良性互動的循環。


註一：GPL-2.0 的相關規定在第 3 條，GPL-3.0 的相關規定則是在第 6 條。

註二：GPL-2.0 的內容完成於 1991 年，在經過十多年的應用，這中間產生不少問題，為瞭解決這些問題，自由軟體基金會於是啟動了改版程序，於 2007 年中正式公佈新一版的 GPL-3.0 內容。因此整體來說，GPL-3.0 是 GPL-2.0 的補充與再細緻化版本，許多 GPL-2.0 漏未規定或用語不清之處，在 GPL-3.0 裡面均有強化與較為清楚的規定，也因為這樣的歷史脈絡，所以在規定散佈者提供程式源碼的部份，兩個版本基本的內容是一樣的，雖有若干不同之處，但大多是 GPL-3.0 補充或更為清楚說明前一個版本不足的內容。因此本文便以 GPL-2.0 為基礎、GPL-3.0 為輔，來說明 GPL 授權條款整體關於提供程式源碼這一項義務的內容。
_______________________________________________________________

■ [技術專欄] Cancan 實作角色權限設計的最佳實踐 (2)

XDite／文

◎ 本文原載 XDite 網站，原文章連結 (http://blog.xdite.net/posts/2012/07/30/cancan-rule-engine-authorization-based-library-2/)

使用 Cancan 的限制：RESTful controller (resource)

一般新進開發者會被 cancan 這兩個 API 搞得七葷八素：load_and_authorize_resource、authorize_resource。

這是因為 cancan 並沒有明顯的在 README 上做出說明：cancan 在使用上是有架構的限制：

* 必須為 RESTful resource

（cancan 直接假設了你一定使用 RESTful，畢竟這年頭誰還在寫 non-RESTful …?）

* resource 必須與 Controller 同名

（@article 與 ArticlesController）

使用過 cancan 的人，大概都「猜到」規則好像是這樣？

其實不必猜，source code (https://github.com/ryanb/cancan/blob/master/lib/cancan/controller_resource.rb) 裡面就寫的很清楚。


load_and_authorize_resource

load_and_authorized_resource 做了兩件事：

   def load_and_authorize_resource
      load_resource
      authorize_resource
    end

* load_resource
* authorize_resource

load_resource 作什麼呢？: loard_resource => load_resource_instance

def load_resource_instance
  if !parent? && new_actions.include?(@params[:action].to_sym)
    build_resource
  elsif id_param || @options[:singleton]
    find_resource
  end
end

okay，這段的作用等於如果你在 Controller 裡面下了 load_resource，cancan 會自作聰明的幫你 自動 在每一個 action 塞一個 instance 下去

lass ArticlesController < ApplicationController
  load_resource

  def new
  end

  def show
    # @article is already loaded
  end
end

如果是 new 這個 action，效果會等於

   def new
     @article = Article.new
   end

如果是 show 這個 action，效果會等於

   def show
     @article = Article.find(params[:id])
   end

有好處也有壞處，好處是…你不需要自己打一行 code，壞處就是不熟 cancan 的人，找不到 @article 在哪裡會驚慌失措…

load_resource 還有一些其他進階用法，在 controller_additions.rb (https://github.com/ryanb/cancan/blob/master/lib/cancan/controller_additions.rb) 裡面有不少說明…


authorize_resource

authorize_resource 就是對 resource 判斷權限（根據 CanCan::Ability 裡的權限表）。

而這個 resource 必定是與同名的 instance。

如果是 ArticlesController 對應的必然是 @article。

但是你會想說這樣慘了？萬一我在 ArticlesController 裡面要用 @post 怎麼辦呢？

你可以在 controller 裡面指定 resource instance 的 name 要用什麼名字: authorize_resource :post

lass ArticlesController < ApplicationController
  authorize_resource :post

  def new
    @post = Article.new
  end

  def show
    @post = Article.find(params[:id])
  end
end

Ability 裡面要這樣下

  can :read, Post
  can :create, Post
  can :update, Post


resource 規則小結

所以 cancan 裡面的 resource 第一個會去吃 controller 的名稱當成 resource name，如果是 ArticlesController，instance 就會是 @article，而在 ability 裡面就會是 can :read, Article。這是在假設你已經使用同名設計 resource & controller 的情況下。

如果非同名。你可以做出指定：authorize_resource :post，雖然是 ArticlesController，但是這一組的 resource 名稱為 post，所以 instance 就會是 @post，而在 ability 裡面就會是 can :read, Post。

一般開發者常會誤會的是

* ability 會綁到 model，實際上不是
* controller 名稱要與 @instance 名稱相同，實際上不一定
* @instance 要與 model 同名，實際上不用
* ability 吃的應該是 controller name，實際上不一定（吃的是 resource name，且可以被指定）。

Cancan 吃的是 resource，而且自作聰明的假設了大家「應該」都同名，而且 README example 也是使用「同名」，才會造成了這麼多的誤解…

如果你有更多疑問，可以直接看 source code 裡面的 這一支controller_resource.rb (https://github.com/ryanb/cancan/blob/master/lib/cancan/controller_resource.rb)，相信會讓你對整個架構更加的清楚…


小結

這一節解釋了開發者認為最難懂的 load_and_authorize_resource、authorize_resource。下一節我們要來講 ability 要如何設計…
_______________________________________________________________

■ [源碼秘技] JACo Watermark － 給圖片加上文字浮水印

林雪凡／文

軟體名稱：JACo Watermark
介紹版本：0.2.0
官網：http://jaco-watermark.sourceforge.net/
授權：LGPL-3.0+


簡介

JACo Watermark 是款介面簡單優雅，功能最小化的「文字浮水印」嵌入軟體。本軟體與其他大雜燴軟體不同，僅提供了這一項功能，但產生的效果相當不錯。

程式目前不支援其他作業系統，只能在 Windows 平台下使用。


安裝說明

請到 JACo Watermark 的官網 (http://jaco-watermark.sourceforge.net/?page=2_download) 下載程式。

JACo Watermark 是綠色軟體，免安裝就可執行。但因為是用 JAVA 寫的，系統上需要預裝 JAVE 運行環境 (JRE) 才能執行。如果因為缺乏 JRE 無法執行程式，可以前往 JAVA 官網 (http://java.com/zh_TW/download/manual.jsp) 下載並安裝 JRE。


介面與操作

想啟動 JACo Watermark，只要將從官網處下載的壓縮檔解壓縮，並在程式資料夾中找到 JACo Watermark.bat 檔案，在上面雙擊就可以了。

(http://www.openfoundry.org/images/120807/JACo/01.jpg)

▲ 圖1：JACo Watermark 啟動時的截圖

使用方法非常簡單。

請拿起滑鼠，點擊右邊的【Open】按鈕，接著選擇想加上浮水印的圖片（可多選）。JACo Watermark 支援 gif、jpg、jpeg、png 這幾種輸入格式。

選妥後按下確定，螢幕就會變成圖2 的樣子。

(http://www.openfoundry.org/images/120807/JACo/02.jpg)

▲ 圖2：匯入圖片後，JACo Watermark 會變成以上這樣。

請在最上面的長條空欄中，輸入打算插入的浮水印文字，接著在下方選擇水印字型、字體大小、粗斜體、字體顏色與字體陰影等格式。

注意有些字型不支持中文字，如要輸入中文字請避開他們。（別擔心，您能透過最下方的預覽視窗確認）

最下面的 Anti-aliasing 選項，可以讓文字顯得平滑，建議打勾。Alpha 代表水印的透明程度，數值介於 0 到 100 之間，0 意味著完全透明；若想讓文字呈現透明感，請調整此值。

右方的 Anchor 可設定水印要嵌在圖片的哪個角落，預設是嵌入到左上角。H Padding 與 Y Padding 則可指定水印與圖片邊緣的距離。

Format 欄位可讓您選擇要用 jpg 還是 png 格式進行輸出。如果選擇用 jpg 輸出，下面還會提供輸出品質供人選取；數字愈大品質愈好，但當然也愈佔空間啦。

面板最下面有許多標籤頁。您可以選擇不同的標籤頁，來預覽圖片被嵌入水印後的樣子。

將上述項目全數設置妥當後，就可以使用【Open】旁邊的【Save】按鈕來產生圖片。【Save】會讓使用者選擇一個資料夾，將所有東西全數儲存到指定的資料夾裡面去。


後記

JACo Watermark 非常簡單，全部功能就只有上述這些。但添加浮水印的效果確實很不錯，方便易用之餘，也不容易出現操作錯誤。

如果這就是您所需要的功能，儘管把這東西抓來用吧！
_______________________________________________________________

﻿■ [自由專欄] 就業市場的長尾現象

ckhung／文

◎ 本文原載 資訊人權貴ㄓ疑 網站，原文章連結 (http://ckhung0.blogspot.tw/2012/08/job-market-long-tail.html)

長尾理論是否也適用於就業市場？如果答案是肯定的，那麼對於年輕的求職者及短頭市場內（例如竹科工程師與教授等等令人稱羨的職業）已就業的人士而言，這又意謂著什麼？如果雨林的雨量減少，沙漠開始降雨，生態系會發生什麼變化？你想當什麼樣的物種？

找一個市場 － 不論是書籍也好、影片也好、音樂也好 － 把市場上的商品按照熱門程度排名。畫一張圖，橫軸是熱門排名，縱軸是熱門程度。那麼當然最左邊最高，越右邊越矮。Chris Anderson 在 2004 年提出「長尾理論」( The Long Tail )，指出創作、派送、宣傳三大門檻的降低，讓尾部作品量大增並受到關注，許多市場的重心因而從頭部移向尾部。廿世紀「只看短頭」的想法，在廿一世紀已經不再適用。詳見維基百科 (https://zh.wikipedia.org/zh-hant/%E9%95%BF%E5%B0%BE)、我的摘要 (http://people.ofset.org/~ckhung/sr/long-tail.php)、或是買書來看。（很值得）

那麼，就業市場會不會也是如此呢？過去熱門的工作，他們各種優渥的條件現在會不會越變越差；而過去不被認為是工作的工作，現在會不會反而越來越像是工作，甚至越來越值得投入呢？個人的觀察與感受告訴我：網路的力量也正在促成就業市場類似的變化。以下的分析，只針對我最熟悉的資訊產業；而且並沒有統計數據支持，可能不太科學。不過我猜其他產業也類似。（另一個我所熟悉的產業 － 教育「產業」 (http://ckhung0.blogspot.tw/2012/04/union.html) 的短頭崩壞也很明顯。）

首先是「熱門」的定義。傳統上，資訊人最期待進入的，就是 IBM、Intel、微軟等等大型資訊公司（現在當然還有蘋果和 google）。當資訊教授也不錯，賺得也許少一些；但日子相對輕鬆許多。從國際資訊大廠一路到國內資訊大廠再到小型科技公司，這都是資訊人一直以來所看到的就業市場。再來才是非資訊產業的大公司裡面的資訊職缺 － 例如我的學生若能在 Seven 或全家當網管，我也會與有榮焉。但是到了這裡，已經是一般資訊科系所忽略的就業市場了 － 這些「非資訊產業」所需要的，是如何善用合法且低成本的軟體、盡量減少軟體採購或開發投資的人力；但是從今日輕使用、重開發的資訊科系 (http://blog.ofset.org/ckhung/index.php?post/113c) 的課程設計（程式設計必修；自由軟體是一個極不重要的配角）卻可以看出來：資訊科系對於這個就業市場其實並沒有興趣。至於非資訊產業的小公司裡面的資訊人員兼打雜，在過去恐怕很難有機會回母校跟資訊科系的學弟妹分享自己「成功」的經驗。（抱歉，我講得比較直一點。）更不用提進入利潤微薄的社會企業 (https://zh.wikipedia.org/zh-hant/%E7%A4%BE%E4%BC%9A%E4%BC%81%E4%B8%9A) 或非營利組織管電腦。

但是網路的力量正在改變這一切。

就業市場不是商品，所以長尾理論的三大驅力並不直接適用。不過更追根究底，長尾理論的三大驅力，其實都來自網路。以下列出一些可能促成就業市場長尾化的網路現象，並且列出相關案例、文章、搜尋關鍵詞。整體而言，其中許多項觀察只是重述我去年的文章網路現象地圖 (http://ckhung0.blogspot.tw/2011/08/network-phenomenon-map.html) 及推廣自由軟體多年下來的心得。

1. 稀奇古怪各種小眾市場的提供者，在過去受限於地域限制，經常無法匯聚夠多的客源；網路打破地域限制，提供創業者「全球尋覓潛在客戶」的機會。
2. 網路也提供了許多民主化的創業工具 － 例如「分享創意、激發認同、博取贊助」的 Kickstarter (http://www.kickstarter.com/)。
3. 自由軟體及相關產品為其他產業帶來價值；但卻破壞了資訊產業本身的產值 (http://people.ofset.org/~ckhung/s/ict-jobs.php) 。例：OLPC、android 遊戲機、救命碟 ...
4. 低取得門檻的軟體工具進入低採購力的事業：過去只有大企業才有能力購買的昂貴專屬軟體（各種資訊系統、CRM ...）現在小型企業及非營利組織可以取得自由軟體版的替代品。（於是開始需要資訊人力）
5. 大企業侵犯消費者隱私及權益，惡行曝光，銷售業績下滑。案例：微軟潰堤 (http://ckhung0.blogspot.tw/search/label/%E5%BE%AE%E8%BB%9F%E6%BD%B0%E5%A0%A4) 、蘋果 (http://ckhung0.blogspot.tw/search/label/%E8%98%8B%E6%9E%9C) 、DRM 遙控數位枷鎖 (http://people.ofset.org/~ckhung/s/drm.php) 。
6. 非營利組織及社會企業受惠於網路宣傳行銷，比過去有較多的機會獲得社會資源挹注 － 因為「情緒決定資訊傳導度」意謂著這些組織及企業所從事的活動較能引起感動，也因而較容易受惠於社交媒體。（請見「如何讓你的噗浪受歡迎？」 (http://ckhung0.blogspot.tw/2011/11/popular-plurk.html) 「論述類社運：部落格重於臉書」 (http://ckhung0.blogspot.tw/2011/07/blog-post_31.html) ）於是尾部這些機構開始有一點經濟能力聘用更多各類型的（短期）人力。
7.搜尋引擎、社交媒體、網路論譠等等資訊流通管道加速上述資訊的擴散、資訊人力的需求量從短頭移向長尾。案例：BSA 抓盜版打著搜尋「用正版」、「全部換正版」的廣告，卻被某人（奸笑）趁勢拿來宣傳自由軟體。

如果就業市場確實也正在長尾化，那麼我們應何理解並因應這個現象呢？讓我用一個比喻來幫助思考。就業市場的頭部，就像是亞馬遜雨林：資源超豐沛，但競爭也超激烈。就業市場的尾部，就像是沙漠，資源少到僅能讓少數最堅強的物種勉強生存下去。當降雨量開始從短頭移向長尾，雨林的整體資源會減少，逐漸變得更像普通的森林；而沙漠的整體資源則開始增加，緩緩變成草原。雨林的競爭會更加激烈，生活品質會變差，到最後總有某些物種必須萎縮甚至被淘汰。至於正在逐漸轉為草原的沙漠，則變得可以供養較多的動物。在資源被新移入的物種充份利用之前，它會提供一個較佳的生活環境 － 各種養份當然還是遠遠不如雨林；但是可能幾乎沒什麼同質競爭的壓力。（例如草食動物與草食動物之間的競爭。）對於絕大多數在雨林長大的動物（以及牠們的後代）而言，第一，牠並不知道或並不相信雨量分佈正在長尾化；第二，就算牠知道變化正在發生，根深蒂固的習性也讓牠極不願意移居草原。於是這種「雨林廝殺、草原低度競爭」的狀況，可能會持續好一陣子。

一方面請想想富士康的跳樓事件、爆肝過勞低薪的工程師、「證照　滷味」、微軟改行專利勒索 (http://ckhung0.blogspot.tw/2011/05/android-windows-mobile.html)、蘋果發動專利聖戰 (http://ckhung0.blogspot.tw/2012/06/apple-patent-troll.html)、微軟虧損 (http://0rz.tw/Bl3V6)、Sony 續賠 (http://0rz.tw/qyvXE)、Sharp 股價暴跌 (http://0rz.tw/ORpGN) ...另一方面再看看 arduino 銷量持續增加 (http://creativecommons.org.tw/blog/20120530)、raspberry pi (http://www.openfoundry.org/foss-news/8637) 供不應求。（沒關係，有六款替代品 (https://www.pcworld.com/article/256349/six_piping_hot_raspberry_pi_alternatives.html)，其中包含臺灣威盛推出的香蕉大小的 apc (http://www.techbang.com/posts/9506-thousands-of-yuan-class-mini-computer-apc-8750-smaller-than-banana)。）雨林裡的競爭有沒有越來越激烈；沙漠裡有沒有出現各式各樣的花草呢？

事實上 raspberry pi 和 arduino 這兩個例子還不夠長尾；他們比較像是硬體世界版的 google，因為善用網路與自由軟體力量而興起，但是相對於他們所處的 niche market（"善用自由軟體的僱主／店家"）而言，他們都是各自小眾市場的龍頭。而且它們訴諸「開發者」的特性，也限制了市場範圍。（在新世界裡，每位 consumer 其實也都被邀請成為 prosumer；不過接受邀請的，畢竟是較小的百分比。）真正的資訊就業長尾市場在於「使用」的能力。我拿不出明確的統計數據來作為佐證，只是感受到身邊越來越多短期專案或非營利組織對於自由軟體架站管站 (drupal、joomla、moodle ...) 的人力需求逐漸浮現。（所以開始學 drupal (http://people.ofset.org/~ckhung/b/dp/)，打算開課。）至於「善用自由軟體、在非資訊產業裡開發新商機」的更多其他長尾就業可能性 － 也就是上圖藍線不知名的高峰 － 則還有待充滿想像力的年輕人跳進來開發。我來拋磚引玉一下：除了母語網咖 (http://blog.ofset.org/ckhung/index.php?post/095c) 之外，我也一直想開一個[畫畫玩數學／畫畫玩物理的數理] (http://people.ofset.org/~ckhung/b/dg/) 才藝班，用 ezgo 上面的數／理 (http://people.ofset.org/~ckhung/b/dg/)／化 (http://blog.ofset.org/ckhung/index.php?post/08aa)／天文 (http://people.ofset.org/~ckhung/b/mi/stellarium.php)／電子 ...等等工具幫國中生上課。不過請別被一位中年大叔所舉的例子限制了你的想像力。

[採用舊思維在追求頂尖卓越的大學] (http://ckhung0.blogspot.com/2012/01/excellence-killing-education.html) ，顯然並沒有把「就業市場長尾化」視為一個需要面對的可能性。他們所吹噓的「證照卓越」、「大學　智財　競爭力」等等價值（請搜尋），恐怕只適用於日益萎縮的短頭，並不適用於成長中的長尾就業市場。長尾就業市場對自由軟體及創用 cc 分享素材較感到興趣；但這看在資訊科系的眼裡，是一塊貧脊的就業市場。「大家用自由軟體，我的麵包在那裡？」(http://people.ofset.org/~ckhung/a/c_92.php)

身處這樣的變化當中，年輕人的首要任務是找到熱情所在 － 因為情緒決定資訊傳導度；能夠激發你熱情的事物，可能比較有機會也激發其他同好的熱情，讓他們樂於透過社交媒體替你所提供的服務或產品進行免費宣傳。換個方式說，在這個年代，「認真是拼不過迷戀的」 (http://tw.myblog.yahoo.com/av8dkbala/article?mid=3039)。（但迷戀「賺大錢」並不算是第一手的直接熱情，也很難有上述的效果。）特別提醒非資訊科系的年輕人，或是愛玩電腦但並不擅長寫程式（因而幾乎被放棄）的資訊科系學生：如果你對某項自由軟體相關技術產生熱情的話，其實很有機會在長尾找到資訊相關的工作機會 － 因為今日的資訊科系普遍放棄這一塊市場。在長尾市場裡，你的資源/薪水可能很微薄（再怎麼長尾化，草原永遠就是比森林貧脊，所以位於長尾好嗎？）；但是賺錢機會出現的次數可能很頻繁、競爭對手較少。你可能比較有機會過著受尊重、合作愉快、感覺生命有意義的生活 － 舉凡一切難以量化、因而被今日主流價值所忽略的生活品質面向，都是長尾就業市場較有機會提供的誘因。總之，網路時代的就業市場 (http://people.ofset.org/~ckhung/s/net-age-jobs.php) 跟來自廿世紀的長輩們所想像的可能很不一樣；要能夠跳脫既有思考框架、有點「不乖」、勇於嘗試「不服從的創新」，才有機會成為「未來在等待的人才」。（大力推薦這三本書）
_______________________________________________________________

■ [源碼新聞] 「開放讓我們更有力量」COSCUP 2012

editorial／文

◎ 本文原載 linuxpilot 網站，原文章連結 (http://www.linuxpilot.com/industry/news/20120822COSCUP2012)

每年一度的亞洲開源界盛事 COSCUP 2012 在 8 月 18-19 日舉行。今年已是第七年，共吸引超過一千位軟體開發人員、數十家科技大廠贊助，展現台灣軟體開發界的熱情與實力。今年活動主題為「Open Device, Seamless Apps Experience」邀請廣達電腦技術長暨研究院院長張嘉淵博士在內，來自台灣、英國、中國大陸、香港等地共數十位講者，分享各項開放原始碼最新技術與資源。

▲ 圖 (http://www.openfoundry.org/images/120823/COSCUP/COSCUP01.jpg)

今年活動總召－趙柏強表示「COSCUP 經過七年的成長，已成為台灣開放原始碼社群一年一度的盛會。本著『開放讓我們更有力量』的信念，參與 COSCUP 最主要的目的，40%是聽演講，60%則為了交朋友；透過活動讓軟體開發者 (Coders) 軟體使用者 (Users) 與推廣者 (Promoters) 廣泛交流，相信能激盪出更多創新火花。從社群自發性舉辦的 COSCUP 活動，我們看到台灣軟體開發界的熱情與實力，期待未來台灣能有更多類似的活動與交流，建立一個更加友善與健全的開放原始碼生態系統 (Open source ecosystem)。」

廣達電腦技術長暨研究院院長張嘉淵博士以「Open Up the Cloud」進行主題演講，張嘉淵在演講中引述廣達電腦創辦人林百里對於雲端的看法是「雲端運算科技創新關鍵不在於科技，真正的關鍵在於科技須以人為本，廣達希望可以透過科技的創新，創造符合人性與文化的最高價值。」

與每年的 COSCUP 開源人年會一樣，除了數十場主題演講，還有兩場特別活動：分別為「各開發社群的 BOF (Birds of a Feather) 聚會」及讓會眾自由發揮的「Unconference」。這些活動都是希望透過與社群同好的分享，不設主題限制的票選演講，讓所有參與者可以敞開心胸瞭解最新的科技趨勢，也提供予軟體人群更好的交流平台與舞台。
_______________________________________________________________

﻿■ [源碼新聞] 獲益於 LLVMpipe ， Unity 2D 將功成身退

蕭惟杰 (RJ) ／編譯

Unity 2D, Ubuntu Unity 介面的輕量化版本，是為了讓電腦的圖形支援不足以跑「Unity 3D」（相對於 Unity 2D 的非正式稱呼）的使用者也能有與 Unity 一致的使用體驗而準備的預備介面。不過在仍在開發中的 Ubuntu 12.10 「量子的長尾鳥」 (Quantal Quetzal) 在近期 (2012/ 08/ 15) 的更新中將 Unity 2D 移除，Unity 2D 使用者將被自動轉成登入到正規的 Unity 介面。

Unity 2D 的任務，本來是為了讓不具備硬體圖形加速的較低階電腦也能體驗到 Unity 的大部份功能而從 Unity 分離出來獨立開發，因此，Unity 與 Unity 2D 的使用者體驗並不完全一致。不過這次 Ubuntu 將 Unity 2D 移除，並不是要拋棄那些使用較低階電腦的使用者，而是因為 LLVMpipe (http://www.mesa3d.org/llvmpipe.html) 的功勞。LLVMpipe 是用來解決硬體不支援圖形加速的方案，其原理簡單來說就是透過虛擬出硬體加速介面的方法把原本由硬體處理圖形運算的部份，感用軟體處理。也因此，Unity 可以直接在沒有硬體圖形加速的電腦上運行，而不需要避開需要硬體圖形加速的部份，也就是說，開發團隊可以不需要分出人力與時間去額外的維護 Unity 2D，而使用者體驗也終於可以統一。Unity 2D 可以說是達成階段性任務，功成身退了。

至於在較低階電腦上 Unity 是否能運行的像 Unity 2D 那樣流暢？就讓我們拭目以待。


相關網址
1. Port compiz to gsettings and consequently remove unity-2d
https://bugs.launchpad.net/ubuntu/+source/gnome-control-center/+bug/1035261

2. Unity 2D Removed from Ubuntu 12.10
http://www.omgubuntu.co.uk/2012/08/unity-2d-removed-from-ubuntu-12-10

3. Unity 2D no longer installed by default, removed from the Ubuntu 12.10 quantal quetzal repositories
http://www.webupd8.org/2012/08/unity-2d-no-longer-installed-by-default.html
_______________________________________________________________

﻿■ [源碼新聞] 美國白宮將官方請願系統的程式源碼向外釋出

黃郁文／編譯

美國政府將白宮官方線上請願系統「We the People」的程式源碼 (Source Code) 給向外釋出了！

該請願系統近期曾被用於匯集意見，成功阻止了在公民隱私權益維護上存有嚴重疑慮的 Stop Online Piracy Act (SOPA) 與 Protect IP Act (PIPA) 強渡關山，並在這些抗阻的過程中獲得廣大迴響，而引起美國歐巴馬政府的關切與回應。這個回應就是美國白宮現已正式將這個請願系統以 Open Source 開放源碼的方式進行釋出！原因之一是該平台本來就是使用自由開源的內容管理系統 Drupal 來進行架設的；原因之二，則是美國政府希望經由分享請願平台源碼的手段，能讓該系統發展出行動裝置介面，並與 Facebook 或 Twitter 等重要社交平台做操作整合，如此一來，使用者將可以直接在慣用的社交平台進行請願活動的意見交換，讓民眾心聲與政府行政體系能夠進行更充份的溝通以弭平不必要的隔閡與爭議。

從分析面來說，We the People 網站源碼的釋出，可說是美國歐巴馬政府在年底大選之前，宣示其落實競選政見「開放政府資訊－Open Government」的具體表現。We the People 網站的數位政策統籌者 Macon Philips 表示：「不論是個人軟體工程師或是其他國家的官方機構，都歡迎自由取用這些釋出的程式源碼，並就其個別的需求進行量身訂做，因為他們希望透過源碼分享的方式，讓 We the People 網站獲得更多與第三方開發者合作的機會，最後達到促進請願資訊分享、流通，與彙整的目的。」此一部份的相關資訊可參考 We the people 在 GitHub 上的相關說明文件 (https://github.com/WhiteHouse/petition/blob/7.x-1.x/readme.md)，使用者若有進一步的興趣，亦可於其專案頁面下載到 We the People 的程式源碼 (https://github.com/WhiteHouse/petition)。最後值得一提的是，雖然美國聯邦政府的自行創作，依法不受到美國著作權法的保護，而必須歸屬到公眾領域 (Public Domain) 裡，但因為 We the people 相關元件本就是依 GPL-2.0 授權條款來讓人使用，故美國聯邦政府轄下單位改寫過之後的專案程式碼，依舊是採用 GPL-2.0 的方式對外授權，而並非直接歸屬於公眾領域而完全不受到法律的保護。


相關網址

1. 美國白宮將請願系統給 Open Source
http://www.h-online.com/open/news/item/The-White-House-open-sources-its-petition-platform-1674393.html

2. We the People 網站開源釋出了！
http://news.cnet.com/8301-1023_3-57499628-93/we-the-people-goes-open-source/

3. 美國著作權法關於聯邦政府產出文件權利適格性的規範條文
http://www.copyright.gov/title17/92chap1.html#105
_______________________________________________________________

﻿■ [源碼新聞] Ubuntu One 推出邀請計劃，贈送免費空間

黃湘婷／編譯

對於有在使用 Ubuntu One 的使用者有福了，由於雲端儲存服務越來越普遍，許多的雲端空間急起直追，Ubuntu One 也推出了新的宣傳手法，希望能藉此吸引更多人體驗 Ubuntu One。

活動主要針對已經成為 Ubuntu One 會員的使用者，在登入後能夠找到一個屬於自己的連結，並可透過 email、Facebook、Twitter 或是其他任何社群網站分享該連結，除了能拉攏其他尚未使用 Ubuntu One 的使用者前來體驗外，同時也可以增加使用者個人的儲存空間。

根據官網顯示，若有新會員是藉由自己的連結成功加入 Ubuntu One，每一位新會員將可令該使用者獲得 500MB 的免費空間，而最多可介紹 40 人，換句話說，將有 20GB 的免費空間可以透過這樣的方式來增加。

雖然同樣的方法曾經出現在 Dropbox 上，但 Dropbox 的邀請上限為 16GB，Ubuntu One 足足多出了 4GB。勢必又將掀起一場雲端硬碟市場大戰。


相關網址

1. Ubuntu One 邀請計劃推出，提供 20GB 的額外空間
http://www.omgubuntu.co.uk/2012/08/ubuntu-one-referral-scheme-launched-offers-20gb-extra-space

2. 藉由邀請朋友使用 Unbuntu One 來獲得 20GB 的雲端儲存空間
http://www.webupd8.org/2012/08/get-up-to-20gb-of-extra-free-ubuntuone.html

3. 邀請您的朋友獲得更多的 Ubuntu One 免費空間
http://www.muktware.com/4169/now-invite-your-friends-and-get-more-free-ubuntu-one-storage
_______________________________________________________________

﻿■ [源碼新聞] Khan Academy 採用 Open Source 回饋模式推動電腦教學課程

黃郁文／編譯

您有從無到有學習電腦程式開發的需求嗎？Khan Academy（可汗網路學院）現在提供免費、優質，互動式與循序漸進的相關課程供您自行研讀！

Khan Academy 是由美國麻省理工學院校友 Salman Khan 先生於 2006 年創建的非營利教育機構。該機構透過網際網路提供一系列免費的錄影教材，內容包括數學、歷史、醫療、金融、天文、物理、化學、電腦科學等等重要領域，多數課程影片的長度約各十分鐘，從最基礎的內容循序到進階課程，讓使用者可以彈性依照自己的需求進行快樂的學習。Khan Academy 這樣的作為在經年累月的努力下，已幫助了全球不少愛好知識的學習者，並且獲致了各領域不小的迴響，其在 2009 受頒微軟教育獎，並於 2010 年獲得 Google 約 200 萬美元的資金協助。

除了過往的成就之外，Khan Academy 近期最大的創舉，可說就是將自由開源軟體 (Free and Open Source Software) 的開發模式，內嵌到電腦科學領域的教材來引導實作！新推出的電腦課程，雖然並沒有在標題直接打上自由開源軟體的名號，但其教學引導的流程，採取開放式互動留言的方式，使用者可以抄寫教學範例提供的基礎程式碼，然後再加以自行改作之後測試運作的狀況，若碰到疑問還可以直接透過網站介面提出疑問，讓其他更有經驗的參與者，可以提供他們的解決方式與相關建議。這種從做中學，分享、共工的學習模式，可說本質上徹頭徹尾便與 Open Source 的群體回饋模式相同！此一新規劃的電腦教學課程的主要設定對象為中學生，因為中學生正處在求知若渴的階段，若能透過活潑且具互動性的課程內容，將能讓他們在學習電腦開發知識的過程中，一併學習到自由開源軟體群體共工的開發模式，所以 Khan Academy 這樣的教學創舉，也吸引到不少自由開源軟體社群成員的熱情支援。Khan Academy 在電腦課程方面的負責人 John Eesig 表示：「這個新設的電腦教學計畫非常具有創新性，參與者將可以透過圖畫作互動式教學，並可自行調整學習速度，而在做中學與不斷解決問題的過程中，學習者將了解到能處理問題的方式不只有一種，並且可以從嚐試與錯誤、討論與回饋之中得到更紮實的知識，這就是我們認為目前電腦教學領域裡，最好且最具學習效果的方式！」

想到循序增強您的軟體開發能力嗎？現在機會來了，您將可以透過 Khan Academy 免費瀏覽到這些優質的課程，只要即刻點擊右列網址：http://www.khanacademy.org/cs。


相關網址

1. Khan Academy 新的電腦教學計畫本質上就是 Open Source
http://opensource.com/education/12/8/khan-academy-computer-science-program-open-source/

2. Khan Academy 啟動電腦教學未來式！
http://techcrunch.com/2012/08/14/khan-academy-launches-the-future-of-computer-science-education/

3. 讓我們重新定義電腦科學
http://ejohn.org/blog/introducing-khan-cs/
_______________________________________________________________

﻿■ [源碼新聞] Ubuntu 12.10 將為 Unity 帶來新功能：Previews

黃湘婷／編譯

Ubuntu 12.10 目前最新的版本為 Alpha 3 版，距離正式版發佈剩下不到兩個月，而日前也證實了 12.10 將捨棄 Unity 2D，以 Unity 3D 做為預設的桌面環境，若電腦不支援 3D 加速的使用者也不用擔心，Ubuntu 12.10 仍然會保留 2D 的環境，提供給沒有圖形加速卡的電腦使用。

除了以 Unity 3D 做為預設桌面環境外，也帶來了新的功能：Previews。在先前的版本中，利用 Launcher 最上方的 Ubuntu 圖示可開啟 Dash，在 Dash 上會列出較常使用的應用程式與檔案，並提供搜尋以及開啟應用程式的功能。而新的 Previews 則是為 Dash 帶來了能夠點擊右鍵的動作。

以音樂檔為例，若是在檔案上點擊右鍵，便會顯示專輯封面的預覽，甚至能在這個介面中控制開始播放的按鈕；點選 Ubuntu One 的音樂商店，則能夠在下載前看到該專輯的全部曲目。

當然 Previews 並非只設計為提供媒體檔案的預覽而已，利用右鍵點擊已安裝的應用程式，還能顯示該程式的螢幕截圖、描述、用戶評分、移除，以及開啟程式的按鈕。對於使用者尚未安裝的程式，在 Dash 上也能直接安裝，不用再透過 Ubuntu 軟體中心執行。

目前 Previews 仍在開發中，若想搶先體驗 Previews 的使用者可於 Unity Staging PPA (https://launchpad.net/~unity-team/+archive/staging) 下載於虛擬機上測試，雖然還有些錯誤有待修正，但相信在發佈前這些錯誤將持續的被改進，令 Previews 帶給使用者更特別的體驗。


相關網址

1. Unity 的新功能：Previews
http://www.omgubuntu.co.uk/2012/08/say-hello-to-unitys-newest-feature-previews

2. Unity：Dash 的新功能 Previews
http://www.webupd8.org/2012/08/unity-dash-gets-cool-new-previews.html#more

3. 令人驚訝的 Previews 功能
http://www.muktware.com/4182/here-comes-amazing-wikipedia-lens-previews
_______________________________________________________________

﻿■ [源碼新聞] Hadoop in Taiwan 2012 熱烈報名中！

OSSF 電子報團隊／整理

Hadoop 是一個開放源碼的分散式運算平台，主要源自 Google 的分散式檔案系統技術，2006 年由 Doug Cutting 撰寫成開源系統 Hadoop 專案，後來由 Yahoo 的開源開發團隊發展成商業營運模式。在現今雲端產業和行動裝置盛行的時代，Hadoop 的成功帶來 BigData 的浪潮，Hadoop 可以說是處理巨量資料的頭號救星，各大資料庫、資料倉儲、軟硬體廠商（諸如微軟、Dell、EMC、NetApp、IBM...等），看到 Hadoop 帶來的效益，也都紛紛投入，有些廠商甚至直接推出內建 Hadoop 的硬體設備。

以下為幾個 Hadoop 較為有名的應用範例：

＊ Wal-Mart：分析顧客商品搜尋行為，利用關鍵詞來分析顧客的需求，從中尋找商機。
＊ eBay：拆解非結構性巨量資料，加快分析速度、也降低資料倉儲負載。
＊ Visa：快速發現可疑交易，分析時間從一個月縮短成 13 分鐘。
＊ 台積電：為了要深入分析龐大的製程資訊，找出提高生產良率的關鍵。
＊ 中華電信：將非結構化的資料，拆解成一段段長度相同，具有資料結構的小型資料，以便放入資料庫中進行結構化分析。

趨勢科技、國家高速網路與計算中心、自由軟體鑄造場將在 10/2 舉辦 Hadoop in Taiwan 2012 活動，即日起開始報名，歡迎各界共襄盛舉！

＊ 日期：2012/ 10/ 02（二）
＊ 時間：08:30 ~ 17:00（08:30 開始報到）
＊ 地點：中央研究院 人文社會科學館 4F國際會議廳（台北市南港區研究院路二段128號） 
＊ 活動諮詢：02-2782-5255#14 周小姐
＊ 活動連結：http://www.hadoopintaiwan.com/
_______________________________________________________________

﻿■ [源碼新聞] 2012 年 9 月份社群活動列表

OSSF 電子報團隊／整理

九月份的活動列表出爐囉！有興趣的朋友們不妨邀請一同前往看看！另外，由於活動列表比較早編列，若後續有活動希望也能一起宣傳的社群朋友們，歡迎來信： ossfepaper@openfoundry.org 。

Taipei Wikipedian Weekly Meetup: Community Operation 維基台北定期聚—社群經營工作雙週聚（9/3） 
地點：台北市松山區民生東路三段 140 巷 11 號（果子咖啡） 
時間：18:00~20:00 
活動資訊：http://zh.wikipedia.org/wiki/Wikipedia:WPTP-Social

TOSSUG 社群聚會（9/4） 
地點：台北市中正區南昌路二段 200 號（Mix Coffee & Tea）
時間：18:00~22:00
活動資訊：http://www.tossug.org/

RGBA 網路設計師聚會（9/5）
地點：台北市中正區晉江街 10 號（早秋咖啡）
時間：19:30~22:00
活動資訊：http://rgba.tw/about

Hacking Thursday（9/6）
地點：台北市重慶南路一段 1 號 2 樓（MarketPlace）
時間：19:30~22:30
活動資訊：http://www.hackingthursday.org/

KaLUG 9月聚會（9/6）
地點：台灣高雄市左營區富民路 391 號（彩色巴黎）
時間：19:00~21:30
活動資訊：http://kalug.linux.org.tw/pmwiki/pmwiki.php?n=KaLUG.Meeting

KSDG - 使用 SpringData 實作資料存取抽象層（9/6）
地點：高雄軟體園區A棟301室（高雄市前鎮區復興四路12號 A301）
時間：19:30~21:00
活動資訊：http://registrano.com/events/ksdgroup1010906

MozTW Lab @ TP（9/7）
地點：台北市中山區民生東路二段 114 號 （咖啡．銅號）
時間：19:30~23:00
活動資訊：https://groups.google.com/group/moztw-general

Taipei Wikipedia Moonthly Meetup: Writing Day 維基台北定期聚—假日寫作月聚（9/8）
地點：台北市大安區泰順街 60 巷 11 號
時間：14:00~16:00
活動資訊：https://zh.wikipedia.org/wiki/Wikipedia:聚会/台灣維基人臺北定期聚會/假日寫作月聚

TOSSUG 社群聚會（9/11） 
地點：台北市中正區南昌路二段 200 號（Mix Coffee & Tea）
時間：18:00~22:00
活動資訊：http://www.tossug.org/

RGBA 網路設計師聚會（9/12）
地點：台北市中正區晉江街 10 號（早秋咖啡）
時間：19:30~22:00
活動資訊：http://rgba.tw/about

Hacking Thursday（9/13）
地點：台北市重慶南路一段 1 號 2 樓（MarketPlace）
時間：19:30~22:30
活動資訊：http://www.hackingthursday.org/

MozTW Lab @ TP（9/14）
地點：台北市中山區民生東路二段 114 號 （咖啡．銅號）
時間：19:30~23:00
活動資訊：https://groups.google.com/group/moztw-general

MozTW 軟體自由日《Code Rush》放映會（9/15）
地點：台北市萬華區漢中街116號7樓（真善美劇院，捷運西門站 6 號出口）
時間：12:30~14:30
活動資訊：http://registrano.com/events/code-rush

Taipei Wikipedian Weekly Meetup: Community Operation 維基台北定期聚—社群經營工作雙週聚（9/17） 
地點：台北市松山區民生東路三段 140 巷 11 號（果子咖啡） 
時間：18:00~20:00 
活動資訊：http://zh.wikipedia.org/wiki/Wikipedia:WPTP-Social

TOSSUG 社群聚會（9/18） 
地點：台北市中正區南昌路二段 200 號（Mix Coffee & Tea）
時間：18:00~22:00
活動資訊：http://www.tossug.org/

RGBA 網路設計師聚會（9/19）
地點：台北市中正區晉江街 10 號（早秋咖啡）
時間：19:30~22:00
活動資訊：http://rgba.tw/about

WoFOSS 好自由小組聚會（9/19）
地點：伯朗咖啡-北科大店（台北市忠孝東路三段 52 號 1 樓）
時間：19:30~22:00
活動資訊：http://wofoss.blogspot.tw/

Hacking Thursday（9/20）
地點：台北市重慶南路一段 1 號 2 樓（MarketPlace）
時間：19:30~22:30
活動資訊：http://www.hackingthursday.org/

MozTW Lab @ TP（9/21）
地點：台北市中山區民生東路二段 114 號 （咖啡．銅號）
時間：19:30~23:00
活動資訊：https://groups.google.com/group/moztw-general

TOSSUG 社群聚會（9/25） 
地點：台北市中正區南昌路二段 200 號（Mix Coffee & Tea）
時間：18:00~22:00
活動資訊：http://www.tossug.org/

RGBA 網路設計師聚會（9/26）
地點：台北市中正區晉江街 10 號（早秋咖啡）
時間：19:30~22:00
活動資訊：http://rgba.tw/about

Hacking Thursday（9/27）
地點：台北市重慶南路一段 1 號 2 樓（MarketPlace）
時間：19:30~22:30
活動資訊：http://www.hackingthursday.org/

MozTW Lab @ TP（9/28）
地點：台北市中山區民生東路二段 114 號 （咖啡．銅號）
時間：19:30~23:00
活動資訊：https://groups.google.com/group/moztw-general
_______________________________________________________________


□ 關於本報 □__________________________________________________

◎ 主編︰洪華超
◎ 法律專欄編輯︰葛冬梅
◎ 技術編輯︰曾義峰
◎ 執行編輯︰林珈宏、王怡凱、彭冠雯、嚴心妤
◎ 外稿編譯︰謝良奇、黃湘婷、蕭惟杰

本電子報自行採訪、報導、編譯、撰寫文章之智慧財產權屬於中央研究院，採用創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版授權散布，歡迎在不變更內容的前提下，以任何形式重製與散布本報，但必須遵守下列義務︰（1）不得為商業目的之利用；（2）必須標明本電子報智慧財產權屬於中央研究院；（3）完整引用本著作權說明。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用上述文章，請與自由軟體鑄造場編輯群（ossfepaper at openfoundry.org）聯絡。

非自由軟體鑄造場自行撰寫的單篇文章，其智慧財產權利屬於原作者所有，其以非專屬的方式授權予自由軟體鑄造場運用，而與本電子報其他文章併以創用 CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版的方式進行散布。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用個別作者的文章，請自行與該作者聯繫，或透過自由軟體鑄造場編輯群（ossfepaper at openfoundry.org）來轉發聯絡訊息。

授權條款全文請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/legalcode
授權條款簡介請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/deed.zh_TW

若欲訂閱本電子報，請至以下網址︰
http://www.openfoundry.org/tw/news

如欲取消訂閱這份電子報，可透過自由軟體鑄造場新聞首頁左上方之自動退訂機制︰
http://www.openfoundry.org/tw/news

或寄發電子郵件至︰ossfepaper@openfoundry.org，以進行人工退訂。
