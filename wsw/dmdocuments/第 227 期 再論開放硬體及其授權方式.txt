________________________________________________________________

□■□ 自由軟體鑄造場電子報第 227 期 | 2013/09/24 □■□
________________________________________________________________

◎ 本期主題︰再論開放硬體及其授權方式
◎ 訂閱網址︰http://www.openfoundry.org/tw/news/
◎ 下次發報時間︰2013/10/15

□ 本期標題 □__________________________________________________

■ [法律專欄] 再論開放硬體及其授權方式

■ [源碼秘技] AppServ 懶人包的資安問題與檢測

■ [源碼專案] 有關 Salt 雲端管理要知道的 5 件事

■ [自由專欄] 美國聯邦法院仍散佈有關 RECAP 和可怕開源軟體的謠言

■ [自由專欄] 社群的力量 - Rails Girls Taipei 舉辦心得

■ [源碼新聞] 現在進行式 - Google 棄 MySQL 轉向 MariaDB

■ [源碼新聞] TPM 晶片搭載 Windows 8 讓公務與個人隱私防護蒙上陰影

■ [源碼新聞] 德國政府稱 Windows 8 有「重大危險性」

■ [源碼新聞] 開源飛行器 HEX

■ [源碼新聞] Thingiverse — 開放數位設計、發揮 3D 列印機的無限潛力

■ [源碼新聞] 「HackGen 駭客世代」黑客松，熱烈報名中！

■ [源碼新聞] 2013 年十月份社群活動列表

□ 本期內容 □__________________________________________________

■ [法律專欄] 再論開放硬體及其授權方式

林誠夏／文

「開放硬體 (Open Hardware)」的概念與推動，奠基於自由開源軟體 (Free and Open Source Software, FOSS) 過去三十年間的成功發展，可以說，分享創意、群體共工的開發模式，已經由軟體程式創作的領域，進展到硬體裝置的設計與實作上！這樣的進展趨勢，主要是民智已開，讓過往多是閉鎖在大型企業的硬體設計，也能轉化以群聚創意的共工模式來進行。從歷史面來分析，過往的硬體設計與產銷販售，必須由企業家先群集大量的金融資本，以建立市場供應鏈並贏得競爭，然而當前全球通曉硬體設計的通才漸多，而有時業餘的愛好者，在既定硬體開發板釋出電路圖的基礎上，反而能夠在熱情的投注與巧思的浥注下，激盪出更令人驚豔的應用方式；而再從現實面來觀察，開放硬體領域近年來確實在開放風潮的推波助瀾下，產出了不少頗具影響力的成績，例如 Facebook 在本年度初，便將其資料中心主機板設計的共同插槽架構，貢獻給開放電腦平台 (Open Compute Platform, OCP) 這個與開放硬體推動有關的團隊（註一）。而其他的顯著成果，例如 OpenCores 專案，其建置目標在提供開源且可重覆利用的開放晶片設計，並比附援引近似的自由開源軟體授權條款來釋出相關成果，以吸納開發社群與中小型硬體設計廠商加入，目前已發展出近千餘個設計專案；此外，Arduino 更是一個集自由開源軟體專案與開放硬體設計為一身的出色專案，其以一塊 Simple i/o 介面板為基礎，建立起一個由使用者、開發者、廠商三者構成的擴充生態系，該專案主體的程式碼以 GPL-2.0 釋出，相關函式庫則以較寬鬆的 LGPL-2.1 釋出，多數的硬體設計圖，則普遍採用創用CC 姓名標示-相同方式分享，或創作者認可的其他創用CC 授權條款來提供；此外，國內重要的科技公司威盛電子 (VIA)，近年來亦推出一個名為 APC 的客製化電腦方案（註二），亦是以開放硬體的授權框架為其基礎的運作模式。

【「開放硬體」或「開源硬體」？】

本篇專文是要在過往對開放硬體的了解與基礎上（註三），繼續延伸討論一些與開放硬體授權運用相關的議題，並透過這個機會，將筆者於「2013 開源人年會 (Conference for Open Source Coders, Users and Promoters, COSCUP 2013)」提供的講題「關於開放硬體授權你應該知道的 A & B」，進行文摘式的解說（註四）。而首要探討的問題，就是一般初接觸開放硬體領域的朋友，常會透過論壇發問並經反覆思索的問題：「究竟是『開放硬體』還是『開源硬體』？這兩個名詞指的是否為同一個對象？或是各有不同的定義與分別？」其實，大要分析這個問題，我們可以粗略地將「開放硬體 (Open Hardware)」與「開源硬體 (Open Source Hardware)」這兩個名詞，分為三個階段來理解。

1、「開放 (Open)」：以主動且允許近用 (access) 的方式，供人閱覽相關資訊，以讓參與者吸收所需知識，提升未來從事群體創作的可能性，這樣的條件是開放的基本定義；

2、「開放硬體 (Open Hardware)」：以提供開放規格與設計資訊為前提，讓參與者能夠依此規格，自製與既定硬體裝置互動的輔助器材或延伸器具；

3、「開源硬體 (Open Source Hardware)」：設計藍圖除了以開放規格的形式來提供，得到設計藍圖的參與者，還能一併自行研究、重製、修改該設計，並依原設計或修改後的藍圖，製成物品，並加以商業利用。

所以簡要的說，第一、第二在「開放」與「開放硬體」的階段，其傳達的是一種原始設計資訊盡量與人交流的「態度」，以致於確實有部份自稱「開放硬體」的專案，僅允許參與者查閱原始裝置的設計藍圖，以自行製造其他與原裝置配合的延伸輔具；而到了第三階段「開源硬體」，才是從「授權」規則面，正式肯定參與者能自行研究、重製、修改該硬體裝置的原始設計，並自行加值製成產品進行商業販售。上述條列式開源硬體定義的維護與補充，目前主要是由「開源硬體協會 (Open Source Hardware Association, OSHWA)」來進行編撰與說明（註五）。然而，就現實狀態來說，現時多數人其實頗為慣用「開放硬體」這個較為簡易的名詞，來統一涵蓋「開放硬體」與「開源硬體」這兩個在授權定義上略有差異的範疇，可以說，單就字面意義來看「開放硬體」，該專案的原始設計，未必能夠被參與者加以修改與重製利用，而「開源硬體」，才是真正顧名思義賦予參與者對硬體原始設計藍圖，能自由加工修改、重製商用的授權方式，然而因「開放硬體」一詞較為言簡義賅、淺顯易讀，以致為參與者朗朗上口，所以欲接觸開放硬體議題的參與者必須了解到，若某專案被稱之以「開源硬體」，那此專案原則上便能夠容許參與者，對其硬體設計自由地研究、重製、修改，以及製成商品，而若某專案雖被稱之為「開放硬體」，但參與者對專案設計自由研究、重製、修改，以及製成商品的各個地位一項都不少，則該專案仍可說是一個被簡稱為「開放硬體」的「開源硬體」專案，但若某專案僅出具設計資訊讓參與者參考，但對此原始設計藍圖，參與者卻無法自由地進行修改或製成商品，則此專案便只能說是提供設計參考資訊的閉鎖裝置，而不能被稱為「開源硬體」或多數人認定的「開放硬體」。本篇文章為了避免讓讀者產生閱讀上的違和感，故以下行文統一以「開放硬體 (Open Hardware)」這個慣用名詞，來統稱在使用上能被參與者自由修改與製成商品的「開源硬體」與「開放硬體」。

【開放硬體與其他開放授權領域的相互比較】

目前在「開放、開源」領域裡，依觀察可大致分出四類開放的共工領域，依發展時序來分，第一為聚焦讓電腦程式碼能夠自由被修改與再散布 (modify & redistribute) 的自由開源軟體，其在授權的面向上，反應在諸多的自由開源軟體授權條款上，例如常見的 GPL、MIT、BSD、MPL、以及 Apache-2.0 即為著例；第二是著眼協助著作權利人，能自主授權使用者，以容許散布、使用、與重混 (redistribute, reuse and remix) 的方式，利用其詩詞書畫及音樂、攝影、多媒體創作等客體的開放內容素材 (Open Content material)，此間授權面的代表主要是創用CC 授權條款 (Creative Commons License)；第三為強調讓使用者能對硬體裝置設計藍圖，自由進行實施與重新設計 (implement & re-design) 的開放硬體 (Open Hardware & Open Source Hardware)；第四則是近來被許多政府機關與跨國組織提出倡議，允許使用者對資料能夠自由近用與使用 (access & use) 的開放資料政策 (Open Data policy)。而以開放硬體與其他開放共工領域來相互比較，可以發現有一個極大的差異與不同點，在於其他共工領域的授權「載體」，多半是以無體財產權為主，例如軟體程式，或是數位化之後的文章、音樂、影片，與相關資料集和資料庫 (database)，然而在開放硬體的領域裡，其最終目的是要讓使用者可以依據開放規格的硬體設計藍圖，來據以衍生出相應的應用模組，或是讓參與者直接修改原始設計，並據以產生出功能性、穩定性、或適用性更為出色的改良裝置，也就是說，在虛實之間，開放硬體領域的發展，是直接從不具實體的設計藍圖，一躍而至實體商品的領域來，這樣的變革與發展，是其他三大領域所沒有直接著手與處理的問題。

【開放硬體的運作爭議】

確實，在開放硬體逐漸發展並擴大規模的同時，其背後卻存在著亟待解決的運作爭議。此一運作爭議的核心點，便是之前約略述及的，在現有開放共工四大領域裡，開放硬體明顯一舉跨越了無體財產權、以及有體財產權的既定法律範疇，而如何讓相關法定權利由無體設計轉輸至有體產品，這在過往的法律架構是沒有被充份討論到的，以至現階段若是發生了開放硬體授權上的糾紛與爭議，各國現有的法條內容與司法判決，皆仍未有具權威準據力的判定與標準！

所謂無體財產權，包括著作權、著作鄰接權、資料庫權（註六）、專利權、積體電路布局權等等，這些法定權利並無法直接透過人類的五體感官去觸知，但其雖然抽象，卻無礙於財產上的保護地位與價值，故稱之為無體財產權，而就開放硬體這個領域來說，主要參與者會觸及的，可能有立體圖形創作相關的著作權，以及電路設計上相關的積體電路布局權，還有在產品生產與應用上各環節都可能存在的專利權；而除卻這些無體財產的部份，開放硬體最終的推展目的，是要讓得到設計藍圖的參與者，都可以依照原設計或修改後的設計藍圖製成物品，並加以商業利用，然而一旦依設計藍圖製作出成品，是不是該成品的應用與散布模式，仍會百分之百受到該開放硬體設計藍圖的授權規劃，這在當前法律體系的解讀下，是存有許多爭議的，因為設計藍圖一旦製成產品，此時該產品在法體系裡是受到物權法 (Right In Rem) 的保護與限制，而有法制史以來，早期成文的物權法規直可追溯至西元五世紀，或是更早時期的羅馬帝國即有其蹤跡，這是因為物權法，是規範人類對於自然物體，所有、占有，以及處分、收益上的各項規則，而這些規則，可說是人類群體社會生活下，必然且自然而然的份際與需求，故物權法建置在先，無體財產權相關法制建立在後，以致在施行上，當有體財產權與無體財產權的運作產生衝突時，往往無體財產權在必要條件下，必須要有適度的退讓，雖然當前許多的資料交流、金融交換，皆可以透過虛擬網路平台來進行，然而人類畢竟是生活在實體世界裡，日常生活實際發生的食衣住行，並沒有辦法純以虛擬的方式來滿足需求，而在法律規範上，物權的相關規則是較近乎於自然律，故運作上，當無體財產權與物權相關的規則產生衝突時，該無體財產權利，原則上是會被調整與修正的。

我國著作權法第 59-1 規定，於司法管轄區域裡取得著作原件或其合法重製物所有權之人，得以移轉所有權的方式來散布該著作原件或其取得的重製物。此正所謂著作權法上的「權利耗盡原則」，或稱為「第一次銷售原則 (First Sale Doctrine)」，此一法則的建立，其實正是呼應多數人們的既成習慣與具體生活。舉例來說，一本言情小說其上必然有相對應的著作財產權，故出版社在書籍出版之前，必須要先洽該書的作者取得授權，才能合法重製該書籍內容並進行販售。然而消費者在購書之後，原作者依附在書籍上的著作權利，便在此第一次銷售／購買之後耗盡，故其後書籍的合法持有者，便可自由地將這本書再接續轉售出去；而再參酌著作權法第 60 條，也規定經營書籍出租業的店家，也可以直接拿這本合法購得的書籍，來做為向顧客出租牟利之用。再者，附含、內嵌於貨物、機器或設備的電腦程式著作，依法亦可隨同貨物、機器或設備之出租行為，而被一併合法出租出去，這也是電腦程式等無體財產權，在高度附著於實體物之後，便被彈性調整與進行修正的著例。且進一步來看，依照我國「內政部台 (75) 內著字第 406476 號函」的解釋，圖形著作，就平面或立體轉變為立體或平面者屬於重製，但對於依科技或工程設計圖形製成實用物品，這在傳統上會被認定為實施行為 (implementation) 而非重製行為，而既非重製、則便不在著作權法保護的範圍之內。那依照內政部這般的函釋態度，會對開放硬體設計造成什麼實質影響呢？其實影響的範圍與效果不能算小，因為依此論點進一步推衍，現時以創用CC 授權條款釋出的 Arduino 設計藍圖，在經過使用者以實施行為製作出產品之後，其原始創用CC 授權條款對於設計藍圖的拘束效力，便已不及於製作完成的實體裝置，也就是說，該產品後續散布與販售的模式，悉不受到設計藍圖創作者以創用CC 條款預先安排的授權限制，此種一經實施，便讓著作授權設計藍圖與產品物權脫勾的現況，即為目前開放硬體授權領域裡，最受到廣泛注目與密集討論的重要爭議（註七）。

【現有開放硬體授權的授權模式】

現時開放硬體領域的推動組織與愛好者，其實已經就上述爭議，提出了發展中的「開放硬體授權條款 (Open Hardware License)」來進行解套。此類的開放硬體授權條款，秉持著從自由開源軟體授權條款一脈相承「以私濟公」的精神，也就是說，透過私人與私人之間契約的訂立與謀合，來共同形塑並建立開放硬體專案參與者之間的共識與互動模式，而雖然現階段，開放硬體設計藍圖的著作權利人，是否依法具有地位與權利，能夠拘束設計成品的運用方式，目前法體系的解釋態度是存疑的，然而透過開放硬體授權契約條款，在細項規劃上的補足，硬體設計藍圖的提供者與收受者雙方，彼此間仍具有契約效力的民事與商務協議存在。所以創作者若是能夠善用此種開放硬體授權條款，來釋出其所創作的硬體設計藍圖，在其後收受設計圖者沒有按照授權條款的義務性要求來利用藍圖，而形成違約之時，此時原始設計藍圖的創作者，雖然也許無法以法定權利人的立場，向各國法院申請權利受損時的假處分、禁制令，或其他定暫時狀況之急速救濟，但仍然可以循審級制度進行違約性質的司法訴訟，一旦勝訴的判決確定之後，仍然得以依契約規劃的授權方式，來向違約的敗訴者，要求改正其對設計藍圖的利用方式，並索取合理數額的損害補償。以下即以重點整理的方式，介紹三款目前正在發展中，然各具有使用特色與相當支持者的開放硬體授權條款：

1、TAPR Open Hardware License：TAPR 為 Tucson Amateur Packet Radio System 首字的縮寫，顧名思義，TAPR 專案是由一群業餘愛好者，所使用並自行研究改造的無線電系統。TAPR Open Hardware License (TAPR OHL) 這份授權條款，是由 TAPR 專案成員兼顧問律師 John Ackermann 所起草撰寫，John Ackermann 認同 GPL 在自由開源軟體授權領域裡，對於理念性成員的吸引力，而恰巧 TAPR 的主要成員也都認同這樣的想法，故 TAPR OHL 可說便是 GPL-2.0 授權條款，在硬體領域的衍生版本，TAPR OHL 所描繪出來的基礎授權框架，更與 GPL-2.0 在運作上幾無兩致；但值得一提的是，TAPR OHL 內設一個與 GPL-2.0 頗為不同的貢獻者通報機制，質言之、此機制是要求，若是前手設計圖的貢獻者留下了他的電子郵件連絡信箱，則當後手參與者改作了這份以 TAPR OHL 授權的設計藍圖或是製作成品之後，便必須要將改作過後的設計文件，寄送到前手貢獻者留下的電子郵件信箱，或是透過此一電子郵件資訊，聯繫前手進行改作通報，此種義務性規定在自由開源軟體領域裡是幾無所見，但推估是因為開放硬體的範疇裡，前手貢獻者現實上，確實較難察知後手對設計圖已進行了改作，因此一改作成品不似自由開源軟體領域的程式源碼，多會透過自由開源軟體的網路倉儲平台 (repository) 來進行分享，故 TAPR OHL 才刻意在授權條款的內容裡，對後手參與者預設下此一電子郵件主動通報的義務性規定。

2、CERN Open Hardware License：CERN 為法文 "Conseil Européen pour la Recherche Nucléaire" 首字的縮寫，全稱意指歐洲核子研究組織 (European Organization for Nuclear Research)，該機構是世界上最大型的粒子物理學實驗室，近年改變全世界人類生活方式的全球資訊網 (World Wide Web)，便曾經是 Tim Berners-Lee 與 Robert Cailliau 於 1989 至 1990 年間，在 CERN 發起舊名 ENQUIRE 的研究專案。而 CERN Open Hardware License (CERN OHL) 這份授權條款，主要是由 CERN 光束實驗室的工程師 Javier Serrano，與知識傳遞組的法律諮詢顧問 Myriam Ayass 所共同編撰的成果，其近期亦於本年度 (2013) 的 6 月 9 日，推出了最新 1.2 版的授權條款（註八）。與 TAPR OHL 極度相似的是，CERN OHL 的主要授權框架，亦是要將 GPL-2.0 與 Copyleft（註九）相關的理念與作法，移轉至開放硬體的領域裡來進行實踐，其在條款內容上，亦設有類同 TAPR OHL 後手參與者對前手貢獻者的主動通報義務，但 CERN OHL 規劃的通報方式，可以任何前手貢獻者建議的方式為之，並沒有限制後手參與者，必然得以電子郵件進行通報，而與 TAPR OHL 較有差異的是，CERN OHL 在授權細節與技術名詞上的描述較為全面與細緻，大體來說這是因為 TAPR OHL 是主要聚焦於無線電裝置設計的開放應用，而 CERN OHL 則較為全面地，將關注層面投視到，未來有機會採用共工模式發展的多數硬體裝置上。

3、Solderpad Hardware License：Solderpad Hardware License (Solderpad HL) 是由長期關注自由開源軟體授權議題，並定期發表專文的英國律師 Andrew Katz 所編撰。之所以取名為 Solderpad，是因為該授權文件，目前是託管於 solderpad.com 這個群聚開放硬體專案文件的網路平台，故直接襲用平台 SolderPad 之名為授權條款的識別資訊。Solderpad HL 與前述介紹的 TAPR OHL 與 CERN OHL，在授權特性上有著極大的不同，因為它可以說是目前檯面上少見，完全不帶有 Copyleft 性質的開放硬體授權條款，所以如果說 TAPR OHL 與 CERN OHL 是 GPL-2.0 授權條款，從軟體領域移植至硬體領域的衍生版本，那麼 Solderpad HL 便可說是在同樣的作法之下，Apache-2.0 授權條款在硬體領域的改作文件。甚至，Solderpad HL 在條款內容的一開始便明言，Solderpad HL 直接參酌 Apache-2.0 授權條款的條款架構來進行編撰，此條款與 Apache-2.0 授權條款之間，更直接具有等價的轉換關係，簡單來說，當創作者以 Solderpad HL 釋出其硬體設計藍圖之後，得到此一藍圖的參與者，除了依循 Solderpad HL 的授權規則來使用這份設計文件之外，更可以在需要時，將設計文件的全部或部份內容，改以 Apache-2.0 的授權方式來進行利用。Solderpad HL 嚴格來說當前仍為一測試版本，最新的版本號為 0.51，至於為何會在開放硬體領域裡，特意推出與其他 Copyleft 性質截然不同的 Solderpad HL，條款的編撰作者 Andrew Katz 曾在「國際自由開源軟體法學評論 (International Free and Open Source Software Law Review, IFOSS L. Rev.)」中專文進行探討（註十），Andrew Katz 指出開放硬體領域與自由開源軟體領域，在開發成本上，有著本質上的差異，在硬體領域裡，並非設計藍圖不具任何價值，但有時實體硬體裝置在製作過程中所需的資材成本亦所費不貲，故若是在授權面向上過於強調 Copyleft 的拘束特性，則依評估，並非所有的產業公司，都會願意投注心力在開源硬體的發展趨勢上，故其推出一個與 Apache-2.0 本質相合的開放硬體授權文件，便是就此議題，拋出一個測試性的解決方案，來觀察產業市場的接受程度與發展風向。

【如何選擇合用的開放硬體授權條款】

綜合上述三款開放硬體授權條款的內容，可以觀察出目前在開放硬體授權領域，有三個值得注意的要點：

1、重要內容皆改作衍生於自由開源軟體授權條款：TAPR OHL、CERN OHL 參考自具 Copyleft 性質的 GPL-2.0 授權條款，就 GPL-2.0 授權條款而言，其最重要的二大義務性要點為：(1) 散布了 GPL-2.0 授權的程式目的碼 (binary code)，則散布者便有責任進一步提供該軟體元件的程式源碼 (Source Code)；(2) 就 GPL-2.0 授權程式進行改作所產生的衍生程式，後續散布上也必須採用相同的 GPL-2.0 授權條款，作為唯一可選擇的授權模式。而就此二大要點來說，TAPR OHL、CERN OHL 與 GPL-2.0 幾無兩致，TAPR OHL、CERN OHL 授權條款要求：(1) 依原硬體設計藍圖製作商品之後，後續散布、販售此一商品，必須要能夠提供該產品的設計藍圖或衍生藍圖予消費者；(2) 依原硬體設計藍圖改作的設計藍圖，未來一併要採用原 TAPR OHL、CERN OHL 的授權方式來進行運用；而以 Apache-2.0 為編撰範本的 Solderpad HL，其運作方式也是恰與 Apache-2.0 幾無分別，甚至可以在必要時，讓設計藍圖的後續使用者與參與者，改以 Apache-2.0 的授權方式來利用此份設計藍圖。

2、版本號碼表彰開放硬體確為新興領域：TAPR OHL 當前僅有 1.0 版，CERN OHL 則是在近兩年間，由 1.1 版推新到了內容微調的 1.2 版，再看到 Solderpad HL，更僅停留在測試意涵的 0.51 版，可以說，開放硬體領域目前的發展，確實還處在一個「做中學、實作中測試以驗證」的階段，其雖著眼於未來資通訊硬體領域裡新型態知識分享的模式與市場重構的契機，但整體的授權布局，到目前為止可說尚不明朗。

3、授權條款涵攝權利範圍包山包海：以 Solderpad HL 為例，硬體設計藍圖的創作者授權給後手的相關權利包括：創作該設計藍圖相關的著作權、著作鄰接權、設計權、積體電路布局權、資料庫權，以及依此設計藍圖實作與販售產品的專利權。如同之前所說的，開放硬體是一個跨越無體財產權與有體財產權的嶄新共工模式，故在設計上必然是要將所涉及的權利盡可能做最大範圍的描述，以避免日後設計方與生產方、貢獻者與參與者之間，在權利授予範圍上會產生不必要的重大爭議與困擾。

故實務上，如果您是硬體設計藍圖的創作方，且願意將藍圖以開放硬體的授權方式進行公眾散布，首要考量的，是該專案主要參與者認同的授權模式究竟為何，一般來說，若是可辨識出來的參與者，皆較偏重共工成果循環開放共享的理念，則 CERN OHL 所運作的 Copyleft 機制，會是一個能夠群聚參與者向心力與信任感的授權模式，而之所以暫捨 TAPR OHL 而就 CERN OHL，是考量到 TAPR OHL 於 2007 年推出第一版本之後，至今仍未見其後更新，但 CERN OHL 近年則是在歐洲核子研究組織的支持推動下，漸漸受到更多開放硬體研究專案的採行與應用；但倘若該開放硬體專案的參與者，多為中小型的商務公司，則參照 Apache Software Foundation 為例，或許 Solderpad HL 會是策略經營上更好的選擇；而如果您是硬體設計藍圖的使用方與生產方，則建議在評選適合參與的開放硬體專案時，可就技術文件的詳實度、與授權條款涵攝權利的完整性，先作第一步與第二步的考量，因為若是技術文件的詳實度不佳，那產品實作上要付出的時間成本與相關的技術門檻都會較為嚴峻，而倘若該開放硬體專案，在授權權利方面有說明不清或是範圍模糊的問題，則可能在相應成品量產之後，生產方便會持續存有授權妥適性不足的隱憂，尤其專利權與積體電路布局權，皆為抽象且不易被查察到的技術方法，如授權條款可就此議題先行進行預先處理，則生產方日後運轉以開放硬體設計為中心的商用模式，才可進行的更為安心與穩固。



註一：關於 Facebook 與 OCP 之間互動的進一步資訊，可參閱黃郁文編譯新聞，Facebook 貢獻主機板設計架構予開放硬體推動團隊：http://www.openfoundry.org/tw/foss-news/8924-facebook-。

註二：威盛電子 APC 專案頁面如右：http://apc.io/about/。

註三：關於開放硬體在授權面的基礎描述，可參閱葛冬梅，淺談開放硬體及其授權方式：http://www.openfoundry.org/tw/legal-column-list/2183-2010-07-15-10-16-01。

註四：「Open Hardware or Open Source Hardware? - 關於開放硬體授權你應該知道的 A & B」，演講簡報檔採創用CC「姓名標示-相同方式分享」授權條款台灣 3.0 版進行公眾釋出，OpenOffice 編輯檔案請見右列連結：http://www.openfoundry.org/of/download_path/openlegal/Essential_things_you_should_know_about_licenses_for_OPEN_HARDWARE_and_OPEN_SOURCE_HARDWARE/20130803.odp、PDF 閱覽格式請見右列連結：http://www.openfoundry.org/of/download_path/openlegal/a_convenient_subsidiary_mechanism_for_project_management_contributor_agreement/20130803.pdf。

註五：OSHWA 維護的開源硬體條列定義，可參照右列連結：http://www.oshwa.org/definition/；此份開源硬體的定義，主要是在開放源碼促進會 (Open Source Initiative, OSI) 對開源軟體的定義上進行改作與解釋，而 OSHWA 與 OSI 之間，也具有書面簽署的合作與競爭關係，相關資訊可參閱黃郁文編譯新聞，OSI 與 OSHWA 在認證標章相似性一事達成合作協議：http://www.openfoundry.org/tw/foss-news/8837-osi-oshwa-。

註六：歐盟對於電子資料庫，特別透過第 96-9-EC 號指令，以獨自成規的方式來保護；但在美國與我國，並沒有與資料庫權利相關的特別法令，然而在實際司法判決中，不乏法官將編輯完善的資料庫，視為著作權法中具「編輯著作」保護地位的客體，而直接以著作權法來對其加以保護，例如「智慧財產權法院 97 年度刑智上訴字第 41 號刑事判決」即為著例。

註七：此外、亦有不少論者提出疑問，當前日漸風行的 3D 列印技術 (3D printing)，是以數位模型資訊為基礎，再透過粘合材料逐層堆疊累積來構造物體或產品，由「模型設計圖」至列印出「成品」之間的流程與作為屬於完全自動化，那麼這究竟會被各國的法律體系，解讀為偏近著作設計的「重製行為」，抑或是維持傳統見解為「實施行為」。當前已有不少立體圖形著作在設計上，是採用創用CC 授權條款來進行公眾散布，相關資訊可參照李佩璇，開放設計的全新樣貌 由我們共同想像：http://creativecommons.tw/blog/20130806，然而這些設計藍圖在實作之後，創用CC 條款是否對於實作成品仍然具有拘束效力，目前在法律見解上還未見穩定的通說。

註八：CERN Open Hardware Licence v1.2 經 CERN 發布的正式新聞稿可見右列連結：http://home.web.cern.ch/about/updates/2013/09/cern-releases-new-version-open-hardware-licence，其授權條款純文字版本全文：http://www.ohwr.org/attachments/2388/cern_ohl_v_1_2.txt。

註九：Copyleft 意指授權人要求，使用者重製原作或就原作產出衍生作品後，亦必須採用相同容許後手使用、修改的授權方式，來進行該作品日後的使用與散布，且此授權拘束特性在作品被改作與再散布之後，並不會隨之消失。關於 Copyleft 的歷史脈絡與進一步的解釋，請參見葛冬梅，泛談 Copyleft 機制與創用CC 的「相同方式分享」授權要素：http://www.openfoundry.org/tw/legal-column-list/2051--copyleft-cc-。

註十：Towards a Functional Licence for Open Hardware: http://www.ifosslr.org/ifosslr/article/view/69/131
_______________________________________________________________

■ [源碼秘技] AppServ 懶人包的資安問題與檢測

mtchang／文

AppServ (http://www.appservnetwork.com/) 是一個 Windows 下很成功的懶人包專案，它把 Apache 、PHP、MySQL 以及 phpMyAdmin 整合打包成為一個安裝檔案，對於入門的程式開發人員很方便。也因為它在 2006 年就推出所以到現在仍是下載率很高的專案，每個月約有 10 萬次下載。

(http://www.openfoundry.org/images/130924/appserv/APPSERV_01.jpg)
▲ 圖 1：AppServ 每月下載次數

但是問題就在這裡，它目前的版本為 2008.5.10 的版本 (http://sourceforge.net/projects/appserv/files/?source=navbar)，作者已經有 5年多沒有更新了，但是還是有那麼多人下載使用。

在 2009 , 2010 有很多 phpMyAdmin 的漏洞陸續被公開，以 CVE-2009-1151 (http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-1151) 為例，它說明在 phpMyAdmin 的 setup.php 程式中有個程式碼可以寫入檔案的漏洞存在。如果找一下還會發現已經有人將它寫成自動化入侵的工具程式。

(http://www.openfoundry.org/images/130924/appserv/APPSERV_02.jpg)
▲ 圖 2：CVE-2009-1151自動化入侵工具

如果知道漏洞存在並補強其實不會造成什麼問題，但問題在於使用 AppServ 的大多為初學者或對於系統程式不熟悉的使用者，只求網站能工作不會注意這些細節的問題。如果你用 google 的 inurl + site + intext 搭配搜尋你會發現真的很多人不在意，且甚至把這個網站它放到公開的網路上工作。關鍵字：「phpmyadmin  scripts  setup.php win32」

(http://www.openfoundry.org/images/130924/appserv/APPSERV_03.jpg)
▲ 圖 3：google「inurl:phpmyadmin/scripts/ site:edu.tw」

(http://www.openfoundry.org/images/130924/appserv/APPSERV_04.jpg)
▲ 圖 4：沒有保護的 scripts 目錄，透過 google 就可找到

在 2013 年 5 月的時候 TACERT 已經針對這部份的入侵細節做了一份攻擊行為的分析報告 (http://cert.tanet.edu.tw/pdf/phpmyadmin.pdf)，攻擊者針對這部份的目的性是對於安裝 AppServ 的主機植入 IRC BOT 並控制該主機成為殭屍網路 (http://zh.wikipedia.org/wiki/%E6%AE%AD%E5%B1%8D%E7%B6%B2%E7%B5%A1) 的一部分。

如果稍微有些概念的話你會發現，每月 AppServ 懶人包 10 萬的下載量轉換為殭屍網路主機如果有 1%  轉換成功的話那就是 1000 台主機，所以只要夠過 AppServ 的漏洞幾個月內就可入侵控制數萬台以上的主機，屆時如需要發動網路攻擊也就非常的容易。

(http://www.openfoundry.org/images/130924/appserv/APPSERV_05.jpg)
▲ 圖 5：robot 掃描主機的漏洞紀錄

所以你也可以寫個程式掃描你所在的網路，看是否有人在使用 AppServ 。底下是我寫的小工具檢測 phpmyadmin/scripts 網址是否存在、setup.php 是否存在以及是否為 Win32 主機，用來檢測我的網路有沒有這種「肥羊」主機的存在。程式碼可以由 github (https://github.com/mtchang/test/blob/master/test_appserv.sh) 取得，使用說明在這裡 (https://github.com/mtchang/test/blob/master/test_appserv.README)。

(http://www.openfoundry.org/images/130924/appserv/APPSERV_06.jpg)
▲ 圖 6：AppServ 檢測程式

所以這裡要請大家幫忙的是不要在教學上使用 AppServ 了，目前國內的資管、資工科系在網站教學課程上面很多是使用 AppServ 當作教學練習的工具，且根據我的經驗發現研究生、博士生也很多是用 AppServ 架設網站收集研究資料，顯示該套件已經被很多人接受不易改變。

(http://www.openfoundry.org/images/130924/appserv/APPSERV_07.jpg)
▲ 圖 7：網路上的 AppServ 教學文件

另外對於初學者 AppServ 的替代方案可以使用 WampServer (http://www.wampserver.com) 或是 XAMPP (http://www.apachefriends.org/zh_tw/xampp-windows.html) ，這些活躍的懶人包套件專案，如果網站是放到公開網路上更是需要注意安全性的細節。

當然，最好的方法是請官方網站的維護者更新修正，我想它可能有聽到所以在 2013 年 5 月 7 日進行專案更新，但我看了之後發現有點怪怪的這個檔案是 2007 年 7 月 25 日就已經發佈的檔案且沒有更新任何新的內容，但是 sourceforge 的時間看起來是最新版了。詳細案情就有請各位鍵盤柯南幫忙找找原因了。

(http://www.openfoundry.org/images/130924/appserv/APPSERV_08.jpg)
▲ 圖 8：目前 sourceforge 上面的 AppServ 專案 Summary 頁面

以上是因為在今年 5 月後我管理的網路內的使用者因為 AppServ 所造成的電腦問題及網路問題十分的頻繁，有表現出來的外顯症狀為網路開機速度很慢，因為被入侵的主機在開機的時候不斷的重製 IRC 程式並寫入 Windows 註冊表，當然各種入侵的方式不一樣，但都是由 AppServ 懶人包漏洞延伸而來的。另一種是當成網路 Server 不常登入，使用一點都不感覺他有異狀只是成為 DDOS 攻擊別人的一份子，較糟糕的狀況是引發起另外一團殭屍網路的攻擊，造成整個組織的網路湧入大量的垃圾封包影響所有的網路服務。


參考網址：

1. TACERT (http://cert.tanet.edu.tw/pdf/phpmyadmin.pdf)
2. EXPLOIT (http://www.exploit-db.com/exploits/16913/)


◎作者簡介：mtchang，快要只剩一張嘴的資訊人員，因為已經沒有 18 歲青春的肉體及新鮮的肝，正努力的進入中年大叔的轉型期。
技能：Linux、網路管理、自由軟體解決方案。
BLOG：八克里 (http://jangmt.com/)
_______________________________________________________________

■ [源碼專案] 有關 Salt 雲端管理要知道的 5 件事

謝良奇／編譯

如果你沒聽過 Salt 專案，算是情有可原，因為該專案背後的 Salt Stack 公司，一年前才剛剛成立，不過 Salt 現在已經是一套成長迅速的開放源碼系統與組態管理工具。雖然在組態管理工具這個領域，Salt Stack 算是新手，但該公司已經引發不小的迴響。Salt Stack 曾獲得 Black Duck Software 的 2011 年開放源碼軟體新秀，也名列 Gartner 在 2013 年 4 月發表的 4 家 DevOps 酷廠商之一，GigaOM 則在 6 月舉辦的 Structure 2013 活動上，選出 Salt Stack 為 LaunchPad 競賽的優勝者。

在 YouTube 的 Salt Air 插曲 1 上，Salt 專案技術長與創辦人 Tom Hatch 說，直到出現在 2011 年 11 月的 FLOSS Weekly 之前，Salt 都還是一項車庫專案。Hatch 將該專案的辨識度大開，歸功知名的 FLOSS Weekly 播客 (podcast)。

如果你已經很熟悉 Salt，你可能知道 Salt 的核心功能之一，就是它的遠端執行。在其 Linux Journal 的 Salt Stack 教學文章中，Ben Hosmer 解釋了 Salt Stack 的運作方式。Hosmer 表示，Salt、Puppet、Chef 等工具讓你可以一次對許多機器下達指令，並安裝與設定軟體。Salt 有兩個主要部分，組態管理與遠端執行。

Salt 貢獻者 Corey Quinn 在部落格中提到，當然也有其他系統以此為目標，但是它們在若干地方卻都不盡完善。Quinn 表示，Salt 的做法更為簡單，它利用了 ZeroMQ 訊息匯流排。它會在 Salt master 與許多用戶端間，建立持續性的 TCP 連線，並以此進行溝通。訊息會透過 msgpack 加以序列化，獲得比傳統傳輸層更快的速度，也更節省頻寬。

Salt 也以易於安裝與使用、具高度可延展性與速度而聞名。Quinn 表示，比起其他組態管理系統，啓動並執行 Salt 幾乎到了令人尷尬的簡單地步。

關於 Salt 要知道的 5 件事

＊Salt 不只是組態管理。Salt Stack 技術長 Tom Hatch 表示，它是雲端管理、整合、Salt reactor 等等。reactor 系統是從 Salt 0.11.0 開始納入的，其想法是，透過 Salt 事件與執行指令的能力，應該設置一個能允許事件觸發行動的邏輯引擎。
＊Salt 可作為輕量級雲端控制器使用。從 0.14.0 釋出開始納入的 Salt Virt 功能，提供了在 Salt 中簡易迅速管理私有雲的能力。
＊ZeroMQ socket 程式庫在 0.17.0 釋出中並非唯一選項。Hatch 表示，他們正朝更加模組化的網路通訊系統邁進。新的 salt-ssh 系統會出現在 0.17 中，而且不要求在目標系統上執行 salt 代理程式。
＊新的 Salt Web 使用者介面 Halite 將隨 Salt 0.17.0 一起釋出。Hatch 指出，Halite 和 Salt 其他部分一樣是 100% 開放源碼。
＊在 0.17.0 中，Salt 會納入新的預設工具，用以整理組態管理系統中的狀態，讓這些狀態按照其定義的順序加以評估。

Hatch 表示在 Salt Stack 的發展中，開放源碼扮演了重要角色，該公司並且拒絕了那些不支持開放源碼的投資者。Hatch 體認到開放合作為該專案帶來許多益處，學習不同的需要和觀點，有助於該專案的發展。

Hatch 說，他鼓勵其他專案盡可能地保持開放，與貢獻者共事並接受貢獻，這麼做真的有助建構社群，並為專案和公司帶來新的想法。


◎本文翻譯自 Linux.com，原作者為 Rikki Endsley：http://www.linux.com/news/enterprise/cloud-computing/735742-5-things-to-know-about-salt-cloud-management/
_______________________________________________________________

■ [自由專欄] 美國聯邦法院仍散佈有關 RECAP 和可怕開源軟體的謠言

謝良奇／編譯

我們應該害怕開放源碼軟體嗎？當然不。但這並未阻擾美國聯邦法院繼續發佈這樣的滑稽警告：

本院希望案例管理/電子案例檔案 (CM/ECF) 申請人，留意某個稱為 RECAP 的軟體應用程式或插件的相關安全疑慮。請注意 RECAP 是開放源碼軟體，任何有網際網路存取的人都能自由取得該軟體，並基於善意或惡意目的加以修改。(The court would like to make CM/ECF filers aware of certain security concerns relating to a software application or .plug-in. called RECAP ...Please be aware that RECAP is “open-source” software, which can be freely obtained by anyone with Internet access and modified for benign or malicious purposes ...)

為了瞭解這份古怪的公告，我們有必要檢視 RECAP 的歷史，以及為何它不受法院官員的歡迎。

開放法院必須是一個負有責任的民主法制系統。除了某些著名的例外，美國的法院訴訟是公開的。但如果你想線上存取這些公開紀錄，你得被敲一大筆錢。官方的 PACER 系統幾乎每個功能（例如搜尋、觀看案卷）都要收費，每頁收取 10 美分。這些費用遠遠超過提供電子存取的實際成本。儘管每頁 10 美分聽起來不多，但很快地就會累積為可觀費用。PACER 昂貴的費用對訴訟當事人、非營利媒體、公民監督機構等，都是一大負擔。

2008 年 Aaron Swartz 與其他人率先發起，將公共文件從 PACER 付費牆 (paywall) 後加以解放的運動。一開始，Swartz 使用免費的圖書館存取來收集文件。當法院關閉該程式後，該活動轉向群眾外包 (crowdsourcing)，讓個別的 PACER 用戶將文件提交到公開的檔案庫。為了推動這項工作，普林斯頓大學資訊科技中心為 Firefox 與 Chrome 開發了名為 RECAP 的瀏覽器擴充套件。使用該套件的用戶會自動把從 PACER 上傳的文件，發送到網際網路典藏 (Internet Archive) 代管的存儲庫。RECAP 對於保障私有資訊非常謹慎，因此僅收藏公開文件，並且會迅速刪除法院錯誤發佈的所有私有資訊。從 2009 開始，RECAP 專案已經解放超過 2 百萬份公開文件。

政府對此舉的回應頗具敵意。首先，Aaron Swartz 後來因為下載 JSTOR 文件遭到起訴之前，FBI 以據稱侵犯那過於廣泛且嚴苛的 CFAA 為由，對其進行調查。在 FBI 終止該調查後，法院開始以 RECAP 是開放源碼軟體，可能會導致密封文件散佈為由，警告律師不要使用 RECAP。這些訊息被廣為批評有誤導之嫌。然而，數年之後，許多法院仍然堅持發佈同樣的誤導謠言。

當然，毫無理由的、只是因為它公開源碼而害怕開放源碼軟體。法院可能誤以為 RECAP 的開發運作和 Wikipedia 一樣，任何貢獻者的改動都會立即生效。反之，RECAP 和其他開放源碼軟體一樣，有一名維護者負責協調其開發，主動地檢視所有提出的改動，決定何者要接受何者該拒絕。在 RECAP 的例子中，Firefox 版本的維護者是 Harlan Yu、Timothy B. Lee、Stephen Schultze、Dhruv Kapadia。Chrome 版本則交由 Ka-Ping Yee 維護。這些個人開發者直接負責 RECAP 軟體的內容與功能，他們只是不想讓軟體運作方式變成秘密。

對於各種軟體，不論是開放源碼或私有軟體，具體的軟體下載出處是極為重要的，因為任何人都能用偽造假的下載網站提供惡意版本。因此用戶對於軟體下載來自何處以及可靠性，都應該格外小心。對於 RECAP，法院官員能夠協助保護用戶安全的最好方式，是讓用戶導向正確的 RECAP 網站。

不幸的是，聯邦法院的 RECAP 警告，並非司法系統表現出科技恐慌與危言聳聽的唯一案例。政府經常把電腦專業知識，當成是惡意目的的獨立證據。檢察官並且會在電腦相關案件中，求處過分的刑期，例如像最後導致 Aaron Swartz 自殺悲劇的報復性起訴（看到這份荒謬的 RECAP 警示出自麻塞諸塞區聯邦法院，也就是此一起訴發生之處，格外令人感傷）。不論這些動作是出自於深刻的無知或犬儒，我們理應有更好的對待。

Aaron Swartz 開放法院文件存取的活動，只是其簡短而不平凡生命中的一章。9 月 19 日，我們會用 EFF 先鋒獎 (EFF Pioneer Award) 來向他致敬。另一個對他的工作致敬的簡單方法，是安裝 RECAP 延伸套件，並用一次次的 PACER 下載為開放政府作出貢獻。


◎本文翻譯自 Electronic Frontier Foundation，原作者為 Daniel Nazer 和 Seth Schoen：https://www.eff.org/deeplinks/2013/09/federal-courts-still-scaremongering-about-recap-and-spooky-open-source-software
_______________________________________________________________

■ [自由專欄] 社群的力量 - Rails Girls Taipei 舉辦心得

慕凡 (ryudoawaru) ／文

以下是我和高見龍 (http://blog.eddie.com.tw/) 以及泰安 (http://blog.taian.su/) 共同主辦第一屆 Rails Girls Taipei (http://railsgirls.tw/) 活動的心得。


Rails Girls 社群


有關於 Rails Girls 社群的介紹，請參考 Open Foundry (http://www.openfoundry.org/index.php?option=com_content&task=view&id=9044&Itemid=4) 或 Inside (http://www.inside.com.tw/2013/08/12/rails-girls-taipei-workshop) 的介紹文章，在此就不再儹述。


緣起


女性，在台灣的程式設計相關的社群活動裡，算是屬於「稀有動物」的範疇。

一般來說、各大程式設計相關的研討會中，女性會眾的比例通常在百分之三或以下，所以一開始知道有 Rails Girls (http://railsgirls.com/) 活動（或著也可以說是一個社群）時並不是特別感興趣；轉捩點是四月和高見龍一起開有心人課程 (http://blog.eddie.com.tw/2013/04/22/1st-ruby-and-rails-training-course/) 時，發現女性學員的參與是超出意外的多（約佔全部學員的四分之一），讓我們重新考慮舉辦這個活動的可能性。我研究了一下之後，發現 Rails Girls 這樣的國際活動是可以自由申請主辦的，因此在五月初準備 Rubykaigi 2013 的行程與演講時，就試著填寫了 Rails Girls 主網站上的申請表單，Rails Girls 的創辦人 Linda Liukas 也很快的就回應我，讓我加入了世界各地 Rails Girls 活動的主辦群中。

加入「世界各地的Rails Girls主辦群」之後，便會被加入 Railsgilrs.com 網站的 Github Repository，具有使用 Repository 內的圖片、素材相關資源、修改或新增網站的內容的權限；除此之外，還會被加入 Rails Girls 的 maillist，隨時可以和世界各地的 Rails Girls 主辦人討論交流。除了上述的資源之外，其它活動所需的物資都必須由當地的主辦人自行張羅。


在日本的見聞

我在五月底至六月初和高見龍一同前往日本參加 Rubykaigi 2013 (http://ryudo.tw/blog/2013/06/07/rubykaigi2013-lt) 時，有幸和日本 Rails Girls 的主辦人柴田博志 (http://www.hsbt.org/) 先生討論了如何教不會程式的女性朋友上手 Rails 的方式，他講到了一個重點：「藉由 copy & paste，讓學員獲得成就感」。

在 Rubykaigi 三天的議程中，我們觀察到女性會眾的比例不只 3%，而是遠超過 5% 的，我們也在 Rubykaigi 會場和許多女性會眾交流，發現其中不乏原本不具程式經驗，卻因為參加過 Rails Girls 活動後，主動來參加 RubyKaigi 的女性會眾；而在 Rubykaigi 後一天舉辦的 Ruby Hiroba (http://rubyhiroba.org/) 的主題活動 Rails Girls, more extended (https://www.facebook.com/RailsGirlsMoreExtended) 中，同行的高見龍也現場觀察了日本這邊的活動情形，如同其名「more extended」所示，這場活動可說是 Rails Girls 活動的進階版，進行方式是採取由學員選擇自己有興趣的主題，布論前端或後端技術，和熟練這些主題的教練們進行一對二、或一對三的教學。我們在現場就近直接觀察 Rails Girls, more extended 活動教學的情形，對於我們這次在台北舉辦 Rails Girls Taipei 也很有幫助，而整個 Rubykaigi 3 + 1 天的活動之中的所見所聞，也更增加了我們的信心和決心！

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls01.jpg)
▲圖一：在 RubyKaigi 會場和 Rails Girls 的學員中澤（中）以及知名的 rubyist Yamane（右）合照。


開始籌辦


從日本回來之後我們都一直很忙碌，直到七月才有空開始規劃籌辦 Rails Girls Taipei。除了本來就決定要一起主辦的高見龍之外，剛好社群的朋友泰安對於這個活動也很有興趣，因此也加入了主辦的行列。

泰安的夫人本身也是一位業餘的畫家，很熱心地幫 Rails Girls 網站畫了 Logo！

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls02.jpg)
▲圖二：Rails Girls Taiwan Logo。


尋找贊助廠商

由於這個活動的創辦人規定此活動不能向學員收取參加費用，所以最重要的是尋找肯支持的贊助廠商。我們想到之前參與 Rails 課程的學生阿姿，是國內以女性為主要服務對象的網站中非常知名且歷史悠久的非常婚禮 verywed (http://verywed.com/) 的員工，由於該公司是台灣極少數以女性員工為主的網路公司，程式開發都是以女性員工佔多數，於是請她幫忙介紹引薦該公司的老闆與技術主管，闡明 Rails Girls 的宗旨後，verywed 也欣然同意贊助本次活動。非常感謝支持！


場地選擇

一開始由於並不知道會有多少人報名，決定以不用太大、小而精巧的場地為主要的考量，就選擇了在各大程式語言社群聚會場地中頗負盛名的 CLBC 創意無極限商業社群 (http://clbc.tw/) 為第一順位的場地選擇；在洽談之後預約到了場地，並也獲得老闆 Tyler 的同意讓我們用公益團體的優惠格計費，也感謝 CLBC 的支持！

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls03.jpg)
▲圖三：場地是一個活動的根本！先動手佈置吧！


報名狀況

先前的活動籌備討論，讓大家最擔心的就是會沒有學員報名，畢竟台灣的現狀就如前面所提，參與程式設計社群的女性成員是非常稀少的。但是報名狀況超出我們想像，8/13 中午開放報名後，不到 2 小時就超過了 150 人，在第二天下午時更超過 320 人報名，因此只好提前關閉註冊，接下來篩選學員的工作反而是最花時間的，大概花了將近十天在 review 報名資料上，由於場地限制的因素，最後只能選出 31 位的學員。

參與的學員都有著臥虎藏龍的資歷，除了有各界 UI、UX 或是網頁設計師之外，有位學員甚至曾經在百度 (http://www.baidu.com/) 這種超巨型網路公司工作過，也有學員為了參加活動，特地從台中搭高鐵參加。更值得一提的是，一位來自花蓮數位機會中心的老師，為了將數位知識傳承到偏遠鄉區，特地不辭勞苦地從東部北上來參加活動。


參與學員審查標準

參與學員的審查標準也是我們在籌辦活動中非常重視的部分。除了去了解 Rails Girls 創立的宗旨、原意之外，也參考了日本的審查標準。我們希望來參與 Rails Girls 的是比較沒有其它程式經驗的人，也請參與學員在自我介紹中說明以下兩件事，做為我們的審查標準：

1. 為什麼妳想參加這個活動？
2. 讓我們了解妳是一個怎樣的人？


事前準備

雖然我已經有幾次 Ruby 的教學經驗，不過要教會一個完全的新手，可不是沒準備就能夠完成的任務。這次我們決定由一位教練負責 2 位學員，便從社群徵求了 15 位朋友來擔任教練的工作，並在 Ruby Tuesday #25 的會後進行了第一次的討論。

決定了教學方向後，教材的部份就由泰安負責主編，其他教練協助編輯，成果可以在 Github (https://github.com/railsgirls-taiwan) 上看到；並請了一位曾公費留學歐洲、英文非常流利的教練 @JuanitoFatas (https://twitter.com/JuanitoFatas) 幫忙翻譯了 Rails Girls Guides (http://guides.railsgirls.tw/) 為主的很多教學文件。透過社群朋友的力量，讓 Rails Girls Taipei 雖然是首次主辦，但在各方面的規模與完整性並不會輸給國外。

現場狀況
雖然我已經主辦過如 RubyConf Taiwan (http://ryudo.tw/blog/2013/04/23/rubyconftw-2012-memories-1) 這樣的年度國際研討會，但第一次主辦完全以女性學員為主的活動，不免還是會擔心出席率等等的問題。不過最後活動是一切順利，教練和學員的互動也出乎意外的良好，可能是因為女生之間一起學習的關係，一般程式設計的社群中，第一次參與的女性會眾通常會集體沉默的現象，在這邊完全沒出現！學員們也都很珍惜這次機會，全程參與，也沒有遲到早退的問題，活動非常順利圓滿，真是可喜可賀！

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls04.jpg)
▲圖四：Rails Girls Taipei 活動照片。

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls05.jpg)
▲圖五：Rails Girls Taipei 活動照片。


Absoutely After Party!


類似這樣的社群聚會，除了教學之外，活動的目的之一便是促進學員和教練之間的互動，讓學習的熱忱能夠在活動結束之後保持不間斷。於是在活動之後所舉辦的 After Party，也列在官方的 Guides 內，因此事先就宣布並徵詢學員的參與意願。

After Party 場地的選擇，因為想要維持品質以及營造互動的氛圍，決定要以 Lounge Bar 為主，經友人推薦之下，選擇了費用上不算便宜的 TRIBECA (https://www.facebook.com/Tribeca.TPE)，由於價格布便宜、學員需要自費，原本以為會變成教練與 Staff 為主的聚會，最後也是令人意外地有超過一半的學員參加！大家也都相談甚歡，到了十點才散會。

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls06.jpg)
▲圖六：Rails Girls Taipei After Party。

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls07.jpg)
▲圖七：Rails Girls Taipei After Party。

(http://www.openfoundry.org/images/130924/railsgirls/railsgirls08.jpg)
▲圖八：Rails Girls Taipei After Party。


會後感想


Ruby 真的是一門神奇的語言啊，原本只是基於想要改變社群活動參與者的性別分布不均的心情，從國外引進並舉辦了 Rails Girls Taipei，卻得到了遠遠出乎意料的反應與成果，看來 21 世紀的程式設計學習之路仍然是一個熱門且不變的趨勢！今後我們也會繼續舉辦並支持這個活動，非常感謝活動過程中一路相挺的社群朋友們，謝謝大家！
_______________________________________________________________

■ [源碼新聞] 現在進行式 - Google 棄 MySQL 轉向 MariaDB

黃郁文／編譯

商用 Linux 作業系統中的佼佼者 Red Hat、SUSE，以及全球最大的無廣告網站 Wikipedia，目前皆已採用 MariaDB 取代 Oracle MySQL，成為預設的網站資料庫系統。而消息傳出，目前 Google 也已著手將 MySQL 相關的資料庫系統，轉換至系出 MySQL 的開源分支 MariaDB！

根據 Google 資深系統工程師 Jeremy Cole 表示，Google 原本使用的是 MySQL 5.1 版本，但因該版本功能已過時且不合需求，故決定與 MariaDB Foundation 合作修補與更新 MariaDB 10.0，好讓 Google 順利地將資料庫系統，能從 MySQL 轉換至 MariaDB。此一資料庫系統的轉換方案，其實從本年初 (2013) 便已開展，目前 Google 原利用 MySQL 的資料庫團隊，正與 SkySQL MariaDB 團隊合作，以提升 MariaDB 的功能延展性與運作穩定性。而 SkySQL 的執行長 Patrik Sallner 也公開證實：Google 已將許多原本利用 MySQL 系統開發的應用程式，轉換到 MariaDB 的環境下來運作，而雙方共同合作改良 MariaDB 作為後續 Google 資料庫需求的使用方案，也已經是拍版定案的策略。
 
雖然 Google 對於棄 MySQL 轉向 MariaDB 一事，目前發言相關的內容皆多以技術需求為導向。但網路上不少的評論與猜測，認為此舉或許也是肇因於 Oracle 與 Google 近年在 Java 相關議題的訴訟案，從商業競爭的觀點來看，Google 可透過壯大 MariaDB 的手段，來維持 MySQL 這個開源專案的多樣性，而不致於未來在商用策略上受到 Oracle 獨家的拑制；而也有部份論者認為，Google 此舉也是一併要將社群對 MySQL 原生版本的忠誠度，轉移至衍生的分支專案 MariaDB 上，好減低 Oracle 未來在網站資料庫領域的實質影響力。而從自由開源軟體社群參與的觀點來看，自從 Oracle 在 2010 年購入昇陽 (Sun Microsystems)，取得 MySQL 資料庫相關的智慧財產權利之後，過往 MySQL 資料庫的軟體社群，就處於一個無法任意參與 MySQL 專案後續開發的情況了，這是因為 Oracle 雖然大力推展 MySQL 在商業環境下的使用，但卻僅允許少數的社群開發成員，能繼續參與該資料庫系統的維護與貢獻。Jeremy Cole 對於 Oracle MySQL 的上述作為表示：Oracle 主導下的 MySQL，雖然仍持續以開源的授權方式釋出資料庫，但開發過程卻欠缺客觀公開性，甚至忽略來自開源軟體社群成員的回饋與貢獻。而後，此一社群參與度不足的爭議，亦正是 MySQL 原生專案的創始人 Monty Widenius 建立 MariaDB 成為 MySQL 衍生分流專案的主要原因之一。

Jeremy Cole 進一步表示，Google 目前致力於將現正使用的 MySQL 版本，轉換至 MariaDB 10.0，新撰的 MariaDB 版本在功能與穩定性上，將媲美 MySQL 5.6，且 Google 亦會額外增加些許 Google 資訊環境下特有的功能，以強化此一 Google 分流版本的 MariaDB，能最適切 Google 資訊系統的應用環境，而此一版本部份微調過後的程式碼與功能，將僅限於 Google 相關的服務系統上產生作用，但在技術發展上，仍會繼續與 MariaDB 的主流版本維持良好的程式碼分享關係。

儘管有人認為 Google 此一捨 MySQL 原生版本，轉換至 MariaDB 的規劃，是對 Oracle 展開策略性的報復行動，但不可諱言的是，至今 Oracle 對於 MySQL 社群的冷淡態度，也是導致當下局面的共同推手。此次的轉換效應在未來可想而知，將造成更多現有 MySQL 的老客戶與使用者，轉而考慮採納 MariaDB 為未來可能的替代方案，更有評論者提出大膽的預測，若 Oracle 依舊不能改變外部對現有 MySQL 開發過程的負面評價與看法，則未來 Linux、Apache、MySQL、PHP/Python/Perl 這個慣用的 LAMP 架站組合，恐怕將會重新配對為 Linux、Apache、MariaDB、PHP/Python/Perl 的一天！


相關網址：

1、Google 棄 Oracle MySQL 轉向 MariaDB 
http://www.zdnet.com/google-quietly-dumps-oracle-mysql-for-mariadb-7000020670/

2、Google 向 MySQL 說 Goodbye
http://readwrite.com/2013/09/14/google-waves-goodbye-to-mysql-in-favor-of-mariadb#awesm=~ohwlMo6xLQtqKZ

3、Google 以 MariaDB 取代 MySQL
http://www.theregister.co.uk/2013/09/12/google_mariadb_mysql_migration/

4、Android 侵害 Java 專利？ Oracle 控告 Google
http://www.openfoundry.org/foss-news/8120

5、Oracle 僅能收到 Google 15 萬的賠償金
http://www.openfoundry.org/tw/foss-news/8703-oracle--google-15-

6、Wikipedia 漸採 MariaDB 來代換 MySQL
http://www.openfoundry.org/tw/foss-news/8900-wikipedia--mariadb--mysql
_______________________________________________________________

■ [源碼新聞] TPM 晶片搭載 Windows 8 讓公務與個人隱私防護蒙上陰影

黃郁文／編譯

您以為個人電腦上的資訊只限於您個人才能夠接觸到嗎？想像上似乎是如此，但實際上 TPM 晶片 搭載 Windows 8 作業系統，運作下就可以讓這個想像狀況直接破局！

可信任平台模組 (Trusted Platform Module, TPM) 通常以電腦主機板上單獨晶片的型態存在，它可以被整合到電腦硬體的網路控制系統或是南橋晶片裡，這是一個由 IBM 初始設計，後來透過信任運算集團 (Trusted Computing Group) 這個商業聯盟的力量來推動，該聯盟成員均為美國科技大廠，包括 AMD、Cisco、Hewlett-Packard、IBM、Intel、Microsoft，以及 Wave Systems。TPM 晶片的主要功能在於為電腦系統的加密功能產生簽章及配對金鑰，簡要來說，TPM 技術主要是用在數位權利管理 (Digital Rights Management, DRM) 以及電腦安全管控方面，也就是說，用來監視使用者安裝合法授權及阻絕侵權使用的商業軟體。也正是透過 TPM 機制，Microsoft 可以遠端透過連上網路的個人電腦，分析該電腦上的 Windows 作業系統是否已得到合法授權。與舊版 TPM 1.0 技術不同的是，當前最新版本的 TPM 2.0 並不容許使用者自行解除 TPM 機制，所以一旦開機，TPM 機制就會預設啟動，而一旦啟動，使用者就無法停止該項功能。

而更讓人憂心的是，近來美國一份國防機密文件的曝光，讓世人驚訝於跨國的大型資訊公司，竟不約而同在政治壓力下，選擇與美國情治單位合作，進一步於電子產品中置入後門 (backdoor)，以便政府機關能在必要時監視個人電腦的使用狀況。根據一份來自德國聯邦辦公室資訊安全部門 (German Federal Office for Information Security, BSI) 的文件，BSI 的安全專家指出 Microsoft 最新的作業系統 Windows 8，便有可能危害使用者的資料保護。這是因為 Windows 8 作業系統，容許 Microsoft 透過內建的 TPM 機制遠端操控電腦，而這樣的建置大有可能讓美國國家安全局 (National Security Agency, NSA)，甚至中國政府的資訊監控部門，以長驅直入的方式，直接監控使用者個人電腦中的各類資訊與檔案。密碼學專家 Rudiger Weis 研究 TPM 機制多年，其表示 TPM 機制下，系統簽章與金鑰的產出過程是先有晶片，然後再將密碼傳輸到晶片上，故由晶片生產端的商業公司著手，取得密碼是一件非常容易的事，而這樣的技術也正是各國情治單位所夢寐以求的快捷便道。

且各國法律往往皆有相關的強行規定，律定私人企業在政府偵查機構向其行文之後，必須將手上可接觸到的使用者資料與資訊移交予調查機構，也就是說，在此種規定之下，Microsoft 或晶片製造商，有可能必須將 TPM 機制下可建立的監控金鑰，轉交給國家安全情報單位，以達到政府監控特定人民活動的目的。因此，在德國不論是 BSI、經濟部 (Ministry of Economic Affairs)，或是聯邦行政機關 (Federal Administration)，都一致反對德國政府與相關組織中重要的電腦作業系統，使用到 Windows 8 搭配 TPM 2.0 晶片的電腦裝置。該份文件中也提到，相關資訊的私密性，在這樣的裝置底下是使用端無可掌控的，而鑑於即使是使用舊版的 Windows 7 作業系統，在安全性相關的確保也只能持續到 2020 年，故該份文件也同時籲請德國政府負責資訊系統採購、建置，與運用的權責單位，必須在期前將現行的 Windows 系統汰換、升級至非受 TPM 2.0 機制控制的其他方案，以確保政府機構所管重要資料的安全。

Apple 在 2009 年就停止 TPM 這項技術的應用，而 Linux 作業系統下更是根本無法使用該項技術。目前 Microsoft 對 TPM 技術的解釋為：只要使用者不接受電腦預設設定，電腦就不會內建該項功能，此外，硬體公司也可以在製造過程中解除 TPM 的設定，而使用者只要自行選購這些已解除設定的相關產品即可。然而，姑且不談 Microsoft 這套說法能否一掃一般個人使用者隱私盡失的疑慮，但商務公司與公務機關，為了保障電腦私密資料的安全，最根本的方案應該是自我有一套因應配套，例如將重要資料處理與儲放裝置，轉換為 Linux 作業系統為主，因為 Linux 作業系統為開放源碼之故，其上的程式源碼皆可被使用者查驗，並且依需求自行建立所需的資訊安全防護機制，以杜絕 TPM 機制的遠端遙控，此正也是德國慕尼黑市 (Munich) 在十年前便啟動市政系統 Linux 轉換計畫 (Das Projekt LiMux) 的主因之一，由此，亦可看出以開放源碼軟體與商用專屬軟體相較，兩者在防護隱私與阻斷不當資訊查察方面難易度的差別。所以，在體認到此點隱憂之後，與其苦惱如何擺脫 TPM，不如從更高的制高點釜底抽薪，逐步將重要的公用伺服器與個人作業系統，轉移至開放源碼管控權限操之在己的 Linux 陣營，方為從根本之處著手的解決之道！


相關網址：

1、德國政府警告重要機構不要使用 Windows 8 以防機密資訊直接導入美國國家安全局的掌控之中
http://investmentwatchblog.com/leaked-german-government-warns-key-entities-not-to-use-windows-8-links-the-nsa/

2、Windows 8 恐怕有為美國國家安全局及中國政府資訊監控部門準備的後門
http://americablog.com/2013/08/leaked-german-government-warns-key-entities-use-windows-8-computers-potential-backdoor-nsa.html

3、美國國家安全局能輕易侵入個人隱私
http://www.theinquirer.net/inquirer/news/2293089/nsa-cracks-encryption-with-ease

4、德國政府採用自由／開放源碼軟體概況
http://www.openfoundry.org/tw/legal-column-list/523-2010-07-15-10-47-04

5、Microsoft 發布德國慕尼黑市 Linux 轉換計畫調查報告與官方分析有明顯落差
http://www.openfoundry.org/foss-news/8926
_______________________________________________________________

■ [源碼新聞] 德國政府稱 Windows 8 有「重大危險性」

Kenneth Mak／文

◎本文原載 Linux Pilot，原文章連結：http://www.linuxpilot.com/industry/news/201309040101Windows8。

Windows 一直以來的程式碼，只有微軟的員工才能看到，究竟當中有沒有潛在的後門，就只有微軟的員工才知道。這問題一直困擾世界各國，特別是視美國為競爭對手的歐洲。最近有人就發現早在 NSA 事件洩密之前，德國政府已經就此提交了報告，結論是 Windows 8 有「重大危險性」。

(http://www.openfoundry.org/images/130924/linuxpilot/201309040101.jpg)

德國最大入門網站之一的 ZEIT ONLINE，近日得到一份德國政府經濟部門在 2012 年初提交的報告，表示難以在聯邦政府和重要的資訊基建中引進 Windows 8，原因是該作業系統使用了新的 Trusted Computing 技術。報告指出藉此技術，NSA 等美國情報部門，將可在 Windows 8 中加入後門，在用戶不知不覺間自出自入，收集用戶的個人資料。

Trusted Computing 技術需要利用 TPM (Trusted Platform Module) 來運作，具體地說 TPM 就是一片決定軟體是否可以在 Windows 上執行的控制晶片。控制晶片既可容許一些微軟認為「優良」的軟體執行，也可以禁止認為是盜版或不適合的影片在 Windows 上播放。現時 TPM 可以容許用戶自行決定是否啟用，但 TPM 自 2.0 起，將會強制在 Windows 8 開機時啟動。

TPM 2.0 會產生的問題有三方面，第一是 TPM 2.0 會預設啟用的，用戶從此將失去是否決定啟用的選擇權。第二是用戶無法對其設定作出任何修改，第三是軟體執行的生殺大權完全在 Windows 8 的手上。如果美國法律容許 NSA 強制從微軟取得 TPM 的金鑰，便意味著 NSA 可以在 Windows 8 下秘密地執行任何程式，從此美國要收集他國的情報便易如反掌。只要在任何政府機構部署一台 Windows 8，不論在何時都可以從眼睛（鏡頭）和耳朵（麥克風）取得情報，而且不留痕跡。不過縱使如此，一般市民大概還是會繼續使用 Windows。畢竟要一改十多年來的習慣並不容易，但最終要擺脫微軟的控制，學習開源的 Linux 才是長遠的解決之道。
_______________________________________________________________

■ [源碼新聞] 開源飛行器 HEX

Kenneth Mak／文

◎本文原載 Linux Pilot，原文章連結：http://www.linuxpilot.com/industry/news/201309030101HEX-kickstarter。

遙控飛行器是很多人的夢想，但體積太大、燃料不環保、價格高昂、難以控制和難找地方，都是令人卻步的障礙。但從現在起這些問題都不再是問題了，開源飛行器 HEX 即將改變這一切。

(http://www.openfoundry.org/images/130924/linuxpilot/201309030101.jpg)

HEX 飛行器 (http://www.kickstarter.com/projects/1387330585/hex-a-copter-that-anyone-can-fly) 是世界第一款用智能手機控制、與 3D 打印結合的四軸飛行器。外殼由 3D 列印實現個性化定製，用戶可以自行下載開發團隊提供的模板，「列印」出自己喜歡的外殼，組裝方式類似模型，非常簡單。HEX 飛行器較早前在集資網站 Kickstarter，在期限前已經籌得超過 18 萬美元，比原來的目標 10 萬美元多出接近一倍，可見它受期待的程度。

HEX 飛行器通過低功耗藍牙 4.0 控制，有效距離 50 米，不需要太複雜的遠程控制就可令它起飛。只要在 iOS 或 Android 設備上下載一個應用程式，便可以將手機變成遙控器。HEX 飛行器更搭載了各種傳感器，這有助於使飛行更加安全和穩定，大量減少墜機的風險。

電子裝置兼容於開源的 Arduino，用戶可自由為它追加裝備，但因為是飛行器的關係，必須留意裝備的重量。官方配件如攝像鏡頭、WIFI 視頻模組等早就考量到這這一點，所有配件都列出了重量。HEX 有兩款飛行器，一款是大型飛行器，近 1 米的直徑，可以搭載 1KG 的裝備，在 Kickstarter 上集資的則是小型版本的四軸飛行器，直徑只有 5.6CM。值得留意的是 HEX 是中國團隊的作品，成員來自世界各地。
_______________________________________________________________

■ [源碼新聞] Thingiverse — 開放數位設計、發揮 3D 列印機的無限潛力

台灣創用CC 計畫／文

◎ 本文原載台灣創用CC 計畫，原文章連結：http://creativecommons.tw/blog/20130815。

科技產品越來越多樣化，也越來越普遍，3D 列印機 (3D printer) (http://zh.wikipedia.org/wiki/%E4%B8%89%E7%BB%B4%E6%89%93%E5%8D%B0) 、自動裁紙機 (Automatic papar cutter)、雷射切割機 (laser cutter) (http://www.zwbk.org/zh-tw/Lemma_Show/265089.aspx)、電腦數位機床 (CNC machine)等都更容易被取得，也就越來越多人開始使用這些設備來自行創造有用而新奇的小物品。

不過，當人們了解 3D 列印機的功能 (http://www.youtube.com/watch?v=Jq0xkPz265Q&feature=youtu.be) 後，最常問的問題就是「為什麼你需要一個這樣的機器？」就算機器再好用、再普及，也需要先有數位設計才能讓這些機器發揮作用，因此就有了 Thingiverse (http://www.thingiverse.com/) 這個解決之道。

(http://www.openfoundry.org/images/130924/CC/shu_wei_she_ji_1.jpg)

Thingiverse 是一個分享平台，匯集各地可以實踐成真實產品的數位設計藍圖。創作者在此提供 3D 列印機讀取的 3D 檔案、供雷射切割機使用的向量檔案、說明製作流程的 PDF 檔案等，其他人要是有興趣，就可以一次打包所有相關檔案，複製或是改造出屬於自己的實體成品。

Thingiverse 附屬於開放資源 3D 列印機 MakerBot (http://www.makerbot.com/%E2%80%8E) 公司，這個公司由 Adam Mayer、Smith aka Hoeken 和 Joris Peels 成立，比起另一個知名的開放資源 3D 列印機 RepRap，他們設計的 MakerBot 能更快速的組裝，但同樣都是開放資源，讓使用者可以協助改進 3D 列印機的效能。

雖然，Joris Peels 預估這樣的東西大概再十年後才會變的普遍，但是他們現在的消費者其實不只有科技玩家、工程師、設計師，也有一些想要自己動手做一些東西、快速解 決生活小問題的一般人，令人驚喜的是，有不少學生藉此發揮創意，年紀輕輕就能做出許多意想不到的成品。

Thingiverse 時常會舉辦競賽，參賽者要根據挑戰主題及規則將設計的作品放在網站上，鼓勵他人使用自己的設計，最後的贏家會有獎品，並在部落格 (http://www.makerbot.com/blog/category/thingiverse/) 上專門介紹，以促使更多人一起來發揮 3D 列印機的潛力。

在這個平台上，創作者要根據創用CC 或 GNU 來授權，但是不同的人可以選擇不同的授權方式，因此在使用不同人的設計時，都要特別留意，有些可能連名字都不需要標注，有些則需要同時遵守創用CC 的四個條件。

為了方便使用者記憶以及增加標示出創作者的意願，最近，Thingiverse 將創作者 whosawhatsis 設計的 Thingitag 發揚光 大，Thingitag 上有授權方式、作品作者名稱、發布日期和連結網址 QR 碼，在 Thingiverse 的網頁上可以很方便而迅速的點擊列印。

(http://www.openfoundry.org/images/130924/CC/shu_wei_she_ji_2.jpg)

Thingiverse 除了在授權標誌上讓創作者很自由、讓使用者很放心之外，值得一提的是，它清楚展現了每個設計的來龍去脈。創作者可以說明自己設計的 點子來自於平台上的哪些設計，使用者則可以表態他喜不喜歡、想不想收藏，以及他做出來的成品或是改造之後的會是什麼樣子。

(http://www.openfoundry.org/images/130924/CC/shu_wei_she_ji_3.jpg)

這個網站背後的夢想是，希望到了人人都有一台 3D 列印機的那一天，他們會來到這個平台，找到對他們而言很有用、很有趣、很酷的東西，下載、列印，只要花個幾分鐘，就能快速拿到實體物品。

ps. 台灣的 makerbot 介紹網站：https://sites.google.com/site/makerbottw/product-1

延伸閱讀：http://opendesignnow.org/index.php/case/thingiverse-zach-smith/ 
_______________________________________________________________

■ [源碼新聞] 「HackGen 駭客世代」黑客松，熱烈報名中！

SITCON 團隊／文

今年 (2013) 三月份的 SITCON 學生計算機年會 (http://sitcon.org/2013/)，是否仍讓你記憶猶新呢？接下來的十月份，由原班團隊發起，SITCON「HackGen 駭客世代」黑客松正式向各界青年學子遞出邀請函！

黑客松主要是透過聚集一群有理想以及技術之人，在特定的時間之內，以各自選擇的方式編寫並完成一支程式或是一套應用服務。秉持著 SITCON 的一貫理念，「HackGen 駭客世代」黑客松以設計與學生切身相關之軟體或應用服務為主軸，無論是架設校園資訊系統、編寫輔助教學軟體、甚至是改善日常工具，都在 HackGen 的範疇裡。參與的朋友可以在這場限時競賽中組隊開發專案，激發創造力、培養團隊默契，更能見識各方好手的神兵利器！Cyberlink、Yahoo!奇摩、叡揚資訊等資訊大廠更慷慨提供多樣獎品，等待身手了得的隊伍前來踢館。

還在等什麼呢？揪齊你的隊友，現在就報名 HackGen 吧！
報名網址 >> http://hackgen.sitcon.org

-----
＊本屆 SITCON HackGen「駭客世代黑客松」由學生計算機年會「HackGen 駭客世代」籌辦團隊、中研院資創中心自由軟體鑄造場、政治大學資訊科學系、教育部資訊軟體人才培育計畫社群網路運算與服務創作領域、大同大學資訊工程學系共同主辦。

＊HackGen 係一學生自行舉辦之黑客松，主題設定為與學生切身相關之軟體或是應用服務，包含但不限於校園資訊系統、輔助教學軟體、日常生活工具等。希望能夠藉由 HackGen 的舉辦，讓參與者發揮自己所學，並且在活動中與同儕認識、交流、及切磋技術。

＊SITCON (Students' Information Technology Conference) 是以學生為主軸的資訊年會，由對資訊抱持熱誠的學生們所組成的同名社群自發籌辦，並持續舉辦黑客松、講座等多項活動，希望能透過技術與知識的激盪，讓更多學生能在資訊領域獲得啓發。
_______________________________________________________________

■ [源碼新聞] 2013 年十月份社群活動列表

作者是 OSSF 電子報團隊／整理

九月份的活動列表出爐囉！有興趣的朋友們請多多邀請您的朋友一同前往參與！另外，由於活動列表出來的時間比較早，若後續有活動希望也能一起做宣傳的朋友們，記得來信告訴我們喔！信箱： ossfepaper@openfoundry.org 。


TOSSUG BoF（每週二，10/1、10/8、10/15、10/22、10/29）
地點：台北市中正區南昌路二段 200 號（Mix Coffee & Tea）
時間：18:00~21:00
活動資訊：http://www.tossug.org/

MozTW Lab @ 基隆（每週三，10/2、10/9、10/16、10/23、10/29）
地點：基隆市仁愛區港西街 4 號 1 樓（1915 海洋咖啡館）
時間：19:00~21:00
活動資訊：https://groups.google.com/group/moztw-general

KSDG 高雄開發者社群 (Kaohsiung Software Developer Group) meetup（10/3）
地點: 高雄軟體園區 B 棟 708 室（高雄市前鎮區復興四路 2 號 7 樓之 5）
時間: 19:00~21:00
社群網址: https://www.facebook.com/groups/KSDGroup

Hacking Thursday（每週四，10/3、10/10、10/17、10/24、10/31）
地點：台北市重慶南路一段 1 號 2 樓（MarketPlace）
時間：19:30~22:30
活動資訊：http://www.hackingthursday.org/

MozTW Lab @ TP（每週五，10/4、10/11、10/18、10/25）
地點：台北市中山區民生東路二段 114 號（咖啡．銅號）
時間：19:00~23:00
活動資訊：https://groups.google.com/group/moztw-general

Wiki 協作聚-FB 線上會 Wiki Cooperation Online Meetup （10/4、10/11、10/18、10/25）
時間：19:00~21:00
活動資訊：https://zh.wikipedia.org/wiki/Wikipedia:WCP

Python Taiwan Sprint #1（10/5）
地點：台北市大安區金華街 187 號 創立方西棟 WB05
時間：9:00~17:00
活動資訊：http://registrano.com/events/9691cb

台中自由軟體愛好者固定聚會（雙週一，10/7、10/21）
地點：台中市中港路二段 60-3 號（默契咖啡）
時間：19:00~21:00
活動資訊：https://groups.google.com/forum/#!forum/taichung-foss-fans-meeting

Cocoaheads - Kaohsiung（10/10）
地點: 高雄軟體園區 B 棟 708 室（高雄市前鎮區復興四路 2 號 7 樓之 5）
時間: 19:00~21:00
社群網址: https://www.facebook.com/groups/cocoaheads.kaohsiung/

Taipei Wikipedia Moonthly Meetup: Writing Day 維基台北定期聚—假日寫作月聚（10/12）
地點：台北市松山區南京東路二段一號 （伯朗咖啡 南京二店二樓）
時間：14:00~16:00
活動資訊：https://zh.wikipedia.org/wiki/Wikipedia:WPTP-W

Taipei Wikipedian Weekly Meetup: Community Operation 維基台北定期聚 — 社群經營工作雙週聚（雙週一，10/14、10/28）
地點：台北市松山區民生東路三段 140 巷 11 號
時間：18:00~20:00
活動資訊：http://zhwp.org/zh-tw/WP:WPTP-S

KSDG web course（10/19）
地點: 高雄軟體園區 B 棟 708 室（高雄市前鎮區復興四路 2 號 7 樓之 5）
社群網址: https://www.facebook.com/groups/KSDGroup
_______________________________________________________________


□ 關於本報 □__________________________________________________

◎ 主編︰洪華超
◎ 法律專欄編輯︰葛冬梅
◎ 技術編輯︰曾義峰
◎ 執行編輯︰王怡凱、陳蕙蓁
◎ 外稿編譯︰林誠夏、黃郁文、謝良奇

本電子報自行採訪、報導、編譯、撰寫文章之智慧財產權屬於中央研究院，採用創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版授權散布，歡迎在不變更內容的前提下，以任何形式重製與散布本報，但必須遵守下列義務︰(1) 不得為商業目的之利用；(2) 必須標明本電子報智慧財產權屬於中央研究院；(3) 完整引用本著作權說明。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用上述文章，請與自由軟體鑄造場編輯群(ossfepaper at openfoundry.org) 聯絡。

非自由軟體鑄造場自行撰寫的單篇文章，其智慧財產權利屬於原作者所有，其以非專屬的方式授權予自由軟體鑄造場運用，而與本電子報其他文章併以創用 CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版的方式進行散布。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用個別作者的文章，請自行與該作者聯繫，或透過自由軟體鑄造場編輯群 (ossfepaper at openfoundry.org) 來轉發聯絡訊息。

授權條款全文請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/legalcode
授權條款簡介請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/deed.zh_TW

若欲訂閱本電子報，請至以下網址︰
http://www.openfoundry.org/tw/news

如欲取消訂閱這份電子報，可透過自由軟體鑄造場新聞首頁左上方之自動退訂機制︰
http://www.openfoundry.org/tw/news

或寄發電子郵件至︰ossfepaper@openfoundry.org，以進行人工退訂。