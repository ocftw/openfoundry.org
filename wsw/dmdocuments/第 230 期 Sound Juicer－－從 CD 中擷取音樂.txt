________________________________________________________________

□■□ 自由軟體鑄造場電子報第 230 期 | 2013/11/12 □■□
________________________________________________________________

◎ 本期主題︰Sound Juicer－－從 CD 中擷取音樂
◎ 訂閱網址︰http://www.openfoundry.org/tw/news/
◎ 下次發報時間︰2013/11/26

□ 本期標題 □__________________________________________________

■ [源碼秘技] Sound Juicer－－從 CD 中擷取音樂

■ [源碼秘技] TripleA－－硬派的回合制策略遊戲

■ [自由專欄] 我不知道他們使用開放源碼！

■ [自由專欄] 自由軟體如今為何比以往更為重要

■ [源碼專案] 微軟開源工具 BrowserSwarm 協助開發者跨越所有主流瀏覽器測試 JavaScript 框架

■ [源碼新聞] 自由出版基金會推出 Aaron Swartz 設計的告密工具 SecureDrop

■ [源碼新聞] Raspberry Pi 產量將達百萬台

■ [源碼新聞] Linux 的精神勝利

■ [源碼新聞] Bitcoin 的危與機

■ [接案 / 工作] 自由軟體鑄造場電子報歡迎熱愛自由開放的您投稿！

□ 本期內容 □__________________________________________________

■ [源碼秘技] Sound Juicer－－從 CD 中擷取音樂

林雪凡／文

軟體名稱: Sound Juicer
介紹版本: 3.5.0
官網: http://burtonini.com/blog/computers/sound-juicer
授權: GPL-2.0+

Sound Juicer 是一款極其簡單易用的 CD 音樂擷取軟體。

它可以擷取 CD 中的音樂將其轉為 mp3、ogg、mp4、flac 等格式，並從線上資料庫 (MusicBrainz) 中取得專輯名、歌曲名、歌手是誰等資料，並藉此自動指定檔名與 metadata－－如果抓不到資料，或是線上資料庫中的資料您不甚滿意，也可以手動指定檔案相關訊息。


安裝

Sound Juicer 是 Linux 專用的。

它是 Gnome 的附屬計劃，發展年份也相當長，因此相當在 Linux 下很好裝。Linux 用戶請直接用各自的包管理系統來安裝它就可以了。


使用方法

Sound Juicer 用法非常簡單，連阿嬤也能學。說明如下：

＊把 CD 塞進光碟機，啟動軟體（沒放 CD 的話軟體是沒法啟動的），接著 Sound Juicer 就會自動抓取網路上的資料，產生檔名列表......到此為止一切都是全自動的。

(http://www.openfoundry.org/images/131112/soundjuicer/SJ_start.jpg)
▲ Sound Juicer 啟動畫面

(http://www.openfoundry.org/images/131112/soundjuicer/SJ_select_disc.jpg)
▲ CD 選擇畫面：因為 MusicBrainz 是採用多人協力製作的方式來收集 Metadata，有時會遇到資料重複的問題，這時就隨便選一個吧。

(http://www.openfoundry.org/images/131112/soundjuicer/SJ_edit.jpg)
▲ 從遠端抓到資料之後，可以進行更動。

＊如果您覺得下載的資料內容不對，這時可以藉機更動它（如上圖所示）。然後按下「擷取」按鈕來擷取。
(http://www.openfoundry.org/images/131112/soundjuicer/SJ_juicing.jpg)
▲ 開始擷取，一張 CD 費時約在 5 分鐘上下。

這樣就完成了。您所擷取的音樂檔案將會被直接放到「音樂資料夾」下。而音樂資料夾的具體位置為何，則可在「編輯」→「偏好設定」中看到。

(http://www.openfoundry.org/images/131112/soundjuicer/SJ_setting.jpg)
▲ 設定畫面。非常地乾淨清爽，可以有效避免使用者的密集恐懼症，有益身心健康......當然對狂熱者來說十分貧乏那也沒錯啦。

設定項目一如上圖所示。就算您會介意 kbps 或採樣率等東西，Sound Juicer 也不會允許您改動這些。簡單易用就是她的特徵。

用預設的 OGG 格式輸出（看起來是 112 kbps，OGG Q3 音質），每個檔案大概都在 3 ~ 4 MB 之間，尺寸算是容易管理的，智慧手機塞個幾百首完全沒問題。音質方面，在下是聽不出有什麼不好啦......不過我是有名的音癡，大概沒什麼發言權吧？各位還是自行試試感覺一下最準了。


抓不到 Metadata 時

MusicBrainz 有時會出現資料找不到的問題，如下：
(http://www.openfoundry.org/images/131112/soundjuicer/SJ_notfound.jpg)
▲ 當抓不到資料時就會出現這樣的畫面......btw，我這張片子是范曉萱 1996 年時《小魔女的魔法書》第一集。真是懷念......

這時唯一的方法就是手動輸入歌名與唱片名。反正唱片一定就在手邊，這就輸入一下。

Sound Juicer 的輸入介面算蠻好用的，沒有什麼需要重複輸入的地方，花幾分鐘就能全部輸入完成。

如果您更有心的話，還可以按上面的「提交專輯」按鈕去幫 MusicBrainz (http://musicbrainz.org/) 更新資料庫。MusicBrainz 相當開放 (http://musicbrainz.org/)，核心資料直接採用 CC0 (http://creativecommons.org/publicdomain/zero/1.0/) （也就是 Public Domain）授權釋出，還允許任何人直接把整個 Metadata 資料庫下載走。和維基百科的發展方向差不多，個人認為相當值得投資。

關於如何幫 MusicBrainz (http://musicbrainz.org/) 更新比較難講，針對不同的更新目標方法也有些差異......反正您按那個按鈕後，就會有訊息逐步引導您完成您想要的工作（說明為英文）。

此處強調一下，在 MusicBrainz (http://musicbrainz.org/) 上輸入專輯訊息時不用怕輸入格式錯誤。當您搞錯時會有其他熱心貢獻者來主動幫忙修正。我早先上傳了十張唱片的資料，結果第二天就收到快二十次修正訊息，有點慚愧但也相當放心！那就輕鬆地進行吧。

註一：Sound Juicer 的官網在 2.28.1 後就沒更新了。要看最新訊息直接到 Gnome wiki 的 Sound Juicer 頁面找還比較快，見：https://wiki.gnome.org/SoundJuicer
_______________________________________________________________

■ [源碼秘技] TripleA－－硬派的回合制策略遊戲

林雪凡／文

軟體名稱: TripleA
介紹版本: 1.7.0.3
官網: http://triplea.sourceforge.net/mywiki/TripleA
授權: GPL

今天就來聊聊自由軟體世界中的遊戲吧。

基於個人偏頗的偏好，本回的主題是《Axis & Allies》，網路上通稱為 TripleA。總地來說，這是一款描寫二次世界大戰的硬派回合制戰略模擬遊戲。

雖然這款遊戲很不錯，偶爾著迷一次就會害我白白浪費好幾天時間，但另一方面，這款遊戲也實在不太好上手......就怕有些人還沒進入遊戲畫面就逃走了，實在可惜。

 
為了增加同好，適度地解說是有必要的。 



下載與安裝

請直接去遊戲的官方下載頁面下載：

http://sourceforge.net/projects/triplea/files/TripleA/

遊戲是用 Java 寫成的，因此只要裝好了 JRE（Open JRE 也行），不管哪個平台都能執行。

windows 與 mac 使用者直接下載對應的安裝檔就好。至於 linux 用戶則要抓 all_platforms 版本。把下載好的 all_platforms 版壓縮檔隨便找個地方解壓縮後，執行資料夾下的 .sh 檔案，就能將遊戲啟動。

(http://www.openfoundry.org/images/131112/triplea/TripleA_start.jpg)
▲ 這就是啟動遊戲後的第一個畫面，姑且叫它「開始面板」好了



開始一局遊戲

長相奇怪的開始面板或許會讓新手玩家感到困惑......以下就稍微解說一下。

首先，開始面板的左半邊有 Choose Game 按鈕，按下去可以選擇不同的「地圖」來玩。預設共有十來種「地圖」。

需注意的是，這些不同的地圖內，單位屬性、規則、圖示都各不相同。與其說那些可選的東西是「地圖」，不如說是各式各樣不同的 Mod (http://zh.wikipedia.org/wiki/%E9%81%8A%E6%88%B2%E6%A8%A1%E7%B5%84) 更正確。不過此處為求方便好懂，還是一律通稱為地圖。

(http://www.openfoundry.org/images/131112/triplea/TripleA_select_game.jpg)
▲ 選擇一張地圖。

新手上路就選 Big World: 1942 或 Big World: 1942 v3 地圖來玩吧。這算是官方的標準版遊戲了，其他遊戲的規則與設定大致也都是衍生自此。雖然個人更喜歡在 v3 版中扮演弱弱的義大利，但 v2 版手邊資料比較完善，故本篇選 Big World: 1942 來做說明。

現在您選好遊戲了，可以按左側下方的 Game Options 按鈕來進行遊戲設定。

(http://www.openfoundry.org/images/131112/triplea/TripleA_game_options.jpg)
▲ 遊戲選項畫面。

您選不同的遊戲，此處列出的遊戲選項都會不一樣，這些選項都是微調遊戲規則用的。此時您毫無經驗一時也不用改，隨便看看後直接採用預設值就可以了。

接著從右邊選擇 start local game 吧。今天的重點是單機部份，連線玩法暫時略過。

(http://www.openfoundry.org/images/131112/triplea/TripleA_AI.jpg)
▲ 按下 start local game 後出現 AI 選擇畫面。

按下 start local game 後，trapleA 會要您設定個別國家的 AI。有幾種 AI 可選。

＊Human: 對您想操作的國家選 Human
＊E.Z. Fodder: 簡單型 AI
＊Moore N. Able: 中等型 AI
＊Dynamix Land-Only: 實驗型的 AI，但不會操作海軍。

如果搞不清楚狀況，儘管選 Moore N. Able AI 就沒錯了（本文假設您選這個），如果真被羞辱得太慘再試試 E.Z. Fodder AI 看看。之後按底部的 Play 開始。


遊戲流程與主畫面介紹

遊戲會依照「固定順序」，依序讓每個國家展開行動，一個國家行動完後就會自動換到下一個國家，而全部國家都輪完後就算結束一個回合 (Round)。至於遊戲的最終目標則是讓您所屬的「聯盟」獲得勝利－－軸心國或同盟國。（所以不要坑盟友，就算他搶了你的地皮也......）

您開始遊戲時，如果選的國家不是第一個輪到的，馬上就會有一堆視窗自動跳出又消失，這就是由電腦操縱的 AI 國家在自行行動的結果了。

您可以試著觀察電腦的行動，但此時看不懂也無所謂，先別理它。如果過程中有跳出視窗叫您按 OK 等按鈕，暫時先照做就行了，到時再來細看。

等到電腦完全安靜停下來，就表示輪您的國家行動了。遊戲就從這裡開始了。

在操作之前，先來介紹一下介面吧。

(http://www.openfoundry.org/images/131112/triplea/TripleA_main_screen.jpg)
▲ 遊戲的主畫面。按住右鍵可以將畫面滑來滑去移動。

(http://www.openfoundry.org/images/131112/triplea/TripleA_main_screen_leftbottom.jpg)
▲ 主畫面左下角：顯示「當前游標所在處」的地名與生產力。本圖顯示西柏林生產力為三。

(http://www.openfoundry.org/images/131112/triplea/TripleA_main_screen_rightbottom.jpg)
▲ 主畫面右下角：顯示當前是哪個國家在行動，這個國家目前處在本回合的哪個階段（Phase，見後介紹）中，以及現在究竟是第幾回合 (Round)。本圖顯示當前由露西亞玩家準備行動，而且其正處在研發階段 (Research Technology Phase) 中，回合為第一回合。

(http://www.openfoundry.org/images/131112/triplea/TripleA_main_screen_rightpanel.jpg)
▲ 主畫面右側面板：有五個標籤頁叫人恐慌，但其中只有 Actions 是必要的；當您忘記現在要做啥好時，這邊總會有按鈕給您按著玩（若想結束當前階段就按 Done）。除了 Actions 面板以外，其他面板都只是提供一些可有可無的訊息，不管也沒差。


各行動階段

當國家操作屬於它的回合時，它必須依照固有的階段 (Phase) 順序，分階段來操作不同類型的行動。

這些階段依照順序為：

＊研發階段 (Research Technology)
＊生產階段 (Purchase Units)
＊戰鬥移動階段 (Combat Move)
＊非戰鬥移動階段 (Non Combat Move)
＊佈署階段 (Place Units)
＊收穫本回合的資源

注意階段之間的順序是很重要的，絕對不會改變。舉例來說，您不能將佈署階段移到戰鬥階段前面，或是將收穫放到回合開始處......您只能照固定的順序進行它們。

在其他地圖中有時還會有一些不同的階段存在，比方說外交階段等等。此處不提。


研發階段

第一個進入的階段就是研發階段。您需要在研發階段中選擇想要研發的科技，然後花費資源點數購買「六面骰子」來進行研發。

當骰子擲出六時就表示投資的研發項目研發成功，而骰出其他的數字一律表示研發失敗。

您可以一次買好幾個骰子一起骰，成功機率當然會增加，不過要是同時骰出好幾個六，其效果和骰一個六是相同，多出來的成功數就會浪費掉。

總之一回合最多只能出一項科技。

一個骰子值五點資源點數，等於一輛坦克或是將近兩個步兵，而且十之八九骰不到。有時在那邊賭運氣，心中會想「還不如省下來去買軍火比較划算」。但真的比較划算嗎？那也未可知......

科技的效果通常是增加某某單位攻擊力或移動力，也有額外增加一些戰術選項或規則等。我找不到遊戲內建的說明，各位若有興趣細查，還請翻看遊戲資料夾下的 pdf 檔案。此處不論。


生產階段

在生產階段中，您可以決定本回合要生產哪些軍火。
(http://www.openfoundry.org/images/131112/triplea/TripleA_produce.jpg)
▲ 生產畫面：您可在本畫面中選擇要生產哪些單位，生產數量又為多少。

每個單位所需的資源數都各不相同，像戰列艦這種東西要花 22 點資源點數......果然得傾全國之力才造的出來......除此之外，每項武器底下也都會從左到右依序標示著 3 個數字，其意思分別是指「攻擊力 / 防禦力 / 移動力」這三種武器基本能力。

數值當然是愈高愈好囉，怎麼計算等到後面再講。

而攻防能力數值都很奇怪的 aaGun 和 factory 則很明顯不是一般性武器，您可以將游標移到武器圖示上面，會跳出簡略的說明文字，看看他們是幹嘛的，以及有什麼特殊功能。如果還是不懂就查資料夾下的 pdf 手冊吧。

視窗最底部標示著您手邊有多少資源點數可以用，用剩的資源點數雖然可以累積，但最好還是每回合把它通通用光。銀子躺在倉庫裡只是會發霉的垃圾而已，只有流動起來才是財富......總之讓武器愈早上戰場愈好。

您在此時決定生產的東西並不能馬上使用，而得等到本回合最後的「佈署階段」才能將它放到地圖上，所以提前考慮戰鬥消耗是有必要的。


戰鬥移動階段

重頭戲來了！

在戰鬥移動階段中，您將能主動挑起侵略行動。

您可以用滑鼠左鍵點選自己的單位，然後放到其他地塊上，如果這個地塊上有敵軍，遊戲介面就會將地塊打亮，提示您此處將會爆發交戰。注意此時還不會真的移動，僅僅只是排程而已，而且也可以隨意取消。

您可以從右側的 Action 標籤頁看到您的行動排程，想取消也是從這裡按。

將所有要移動的部隊都移動好之後，就可以按確認鍵，完成戰鬥移動並進入實戰計算。

(http://www.openfoundry.org/images/131112/triplea/TripleA_battle_rightpanel.jpg)
▲ 確認進行戰鬥移動（在 Action 頁中按下 Done 按鈕）後，您可在 Action 標籤頁中選擇您現在要解決哪一場戰鬥。


戰鬥規則
(http://www.openfoundry.org/images/131112/triplea/TripleA_battle_calc.jpg)
▲ 戰鬥計算畫面－－吹口氣後開始骰骰子吧。

TripleA 的戰鬥規則非常單純，正因為單純所以 AI 也很強（就和韋諾之戰一樣），簡介如下。

＊戰鬥中有戰鬥回合的概念。每個戰鬥回合中，「雙方」所有倖存的單位都會「同時」發動一次攻擊。
＊戰鬥會無限次重複戰鬥回合，直到其中一方被完全殲滅為止。唯一的例外是攻擊方有權在狀況不利時主動選擇撤退。
＊每個單位的 HP 都只有 1。沒被打到就完全沒事，一被打到就會立刻退場。而判定命中與否的方法，是骰一個六面骰子。
＊雙方的「攻防能力點數」，影響的都是「打對方時的命中率」。
＊攻擊方使用攻擊力來攻擊對手，防禦方使用防禦力來攻擊對手。
＊打人的那方骰骰子決定「自己成功打到對方幾次」，而被打的那方則能決定「自己的哪幾個單位被打到（退場）」


這些規則面對某些特殊單位或狀況時會有例外（比方說戰列艦具有 2 HP、潛水艇能潛航逃走等），不過基本上就是這樣沒錯。

以下舉例說明：

假設您是攻擊方，且您有 3 個攻擊力為 1 的單位，以及 2 個攻擊力為 3 的單位；則您就可以分別為這 5 個單位各骰一次六面骰子。攻擊力為 1 的單位必須要骰到 1 才表示成功命中，攻擊力為 3 的單位則骰到 1 ~ 3 都算命中。以此類推。

假設您運氣很好總共命中了三次，則敵人會自行選擇用哪三個單位承受攻擊，讓那些單位退場（所以通常都是最弱的步兵優先退場）。

當您是防禦方時，除了用防禦力取代攻擊力以外，其他也完全一樣。雙方就這樣一直打到其中一方全滅，或攻方覺得喪失兵力優勢而放棄為止。

若戰鬥結束時仍有地面單位存活（空軍不行），則勝者可以佔有那塊土地，並在接下來的回合中得到那塊土地的生產力。用那些生產力來生產更多的單位。

判斷勝率

勝兵先勝而後求戰，敗兵先戰而後求勝。既然要挑起戰鬥，當然要挑起必勝的戰鬥！戰無不勝的秘訣就是專挑弱的打！柿子要挑軟的捏，核桃殼那種東西還是讓核桃鉗去捏就好了。

總之，預判勝率是很重要的。

要判斷勝率，您一定不能忘記戰鬥計算機。使用方法就是用游標指向要開戰的土地，然後按 Ctrl + B 來叫出它。如果您有正確用游標指好土地的話，雙方在這塊土地上的單位就都會被自動輸入進去。

(http://www.openfoundry.org/images/131112/triplea/TripleA_odds_calc.jpg)
▲ 戰鬥計算機

戰鬥計算機上有一些參數可供您調整，不過通常不太需要碰。一切調整好後，您可以按 Calculate Odds 來進行模擬擲骰，預設會自動模擬兩千場戰鬥，看看雙方勝敗率、平均損失單位數等資料。

有時就算能贏也只是慘勝，單位存活率太低的話輪敵人攻擊時又會被簡單地殺光搶回去，挑起戰鬥不見得划算。這些就請各位自行判斷了。


非戰鬥移動階段

當您將戰鬥全部了結之後，就能進入「非戰鬥移動階段」。您可以藉機再一次移動您的單位，差別在於此時不能進入敵人領土來發動攻擊。

非戰鬥移動階段與戰鬥移動階段會共用移動力。假設您有一個移動力四點的單位，在戰鬥移動階段移動了三格，在非戰鬥移動階段就只能移動一格了。

雖然說在此您可以隨意移動單位，不過非戰鬥移動階段主要是讓您做兩件事的：

＊讓先前攻擊過的飛機找地方降落：在 TripleA 中，飛機必須要在回合結束前移動到「上回合就屬於我方的土地上」（剛剛新佔領的不算）才能降落，否則就會墜機損失掉。
＊調整佈防，來應對敵人接下來的攻擊。

另外有某些單位只能在非戰鬥階段移動，比方說 aaGun 等。還請注意一下。

這遊戲的 AI 是很聰明的。如果您在某處重兵把守，讓 AI 覺得沒啥便宜好撿，則它就壓根不會打你這裡，而換去打其他好打的地方。所以必須在某種程度上平均布防。

但另一方面，這款遊戲中藍徹斯特方程的影響又非常鮮明，簡單說來，就是一個地區的戰鬥力量與其單位數量的平方成正比，所以如果真的平均布防，讓單位分散，則整體戰鬥力同樣會很差，對方集中優勢火力就能輕鬆將您分食吞掉。這方面該如何拿捏，還頗需發揮點藝術性才能處理得好。

有時故意引誘敵人搶走土地，逼使敵軍分散也是一種切肉斷骨的技巧。其細節就是遊戲的樂趣所在。講太多就沒意思了，還請自行嘗試琢磨吧。


佈署階段

您可以在此階段佈署您先前生產過的單位。

單位只能佈署在有著「工廠」的地區（陸空軍）或與工廠相鄰的海域中（海軍）。而且每個地區一回合最多只能佈署和「本地區生產力點數」相等數量的部隊。

假設一個有工廠的地區，其地區生產力為 3，則每回合最多只能在此佈署 3 個單位。

雖然工廠很貴，但考慮快速增援的便利性，俄羅斯遠東地區、非洲與印度半島都是蓋工廠的有利地點。請自行斟酌吧。

收穫階段

您可在此一階段依據領土大小收穫生產力點數。然後就輪其他國家行動了。


其他提示

運輸艦可以跨海輸送陸軍。每艘運輸艦具有 5 點負載量。步兵一個單位重量為 2 點，大砲與坦克則是一個單位 3 點。

在攻擊時，每個砲兵都可以讓一個步兵的攻擊力得到強化。因此步兵應儘量與砲兵協同作戰方為上策。

坦克可以在非戰鬥移動階段佔領敵軍無防守的領土，故可在部隊打穿敵防線後，用坦克快速穿透敵陣，直接佔領敵後領土，擴大敵軍損傷並逼迫敵人分散圍剿力量。

戰鬥機可以停在有航空母艦的海域上面，將其當作機場來用。一艘航空母艦可以停兩隊戰鬥機。

轟炸機可對工廠地區進行戰略轟炸，削弱敵軍的生產力。

戰列艦有兩點 HP，故在戰鬥中可優先承受一次攻擊來減少我軍損失，並僅可能長時間保持住己方火力。損失的 HP 會在戰鬥結束後自動恢復。 

最近開源世界的遊戲發展算是相當活躍。說來早先沈寂已久的 freeOrion 計劃前陣子也再啟了，咱身為 4X (https://zh.wikipedia.org/wiki/4X) 迷興趣很大，下次也找個機會來聊聊吧。 
_______________________________________________________________

■ [自由專欄] 我不知道他們使用開放源碼！

謝良奇／編譯

讓我們繼續對開放源碼的實地勘察，這裡有更多你過去未曾想像過的例子。


你口袋裡的開放源碼

許多人把 Linux 和開放源碼，當作是高階、高可用性運算專用的專業技術系統。然而如今四處都有開放源碼的存在，甚至在你的口袋裡。舉例來說，使用 Android 作業系統的智慧型手機，核心所運行的就是開放源碼軟體。Android 已經越來越普及，目前占有 79% 的全球行動作業系統市場。

藉由使用以 Linux 為基礎的開放源碼作業系統，行動手機製造商能夠降低生產成本，而無須在可靠性或安全性上作出妥協。對於希望用更低成本獲得高階智慧型手機所有優點的用戶，一個蓬勃的應用軟體體系也使得 Android 在這些用戶間越加普及。

開放手機聯盟 (The Open Handset Alliance) 指出，開放源碼的 Android，可以加以自由延伸以納入新興的尖端技術，隨著開發者社群在打造創新行動應用程式上共同合作，該平台將持續演進。

許多知名平板電腦上也能發現嵌入式 Linux 的蹤跡。Amazon 的 Kindle Fire 與 Samsung Galaxy Tab 都是以開放源碼架構所打造。藉由降低軟硬體成本，製造商就能把重心放在透過線上應用程式商店或內容協議來創造營收。


有更多開放源碼在你的口袋

令人振奮的新數位筆 Lernstift，可以在使用者書寫時做拼字檢查。由開放源碼軟體打造而成，Lernstift 會掃瞄每一筆畫，並透過震動告知用戶拼字上的錯誤。筆內建的無線連接功能，可以讓用戶把筆記記錄在筆電或智慧型手機裡以供分享或儲存。

Lernstift 也會監看筆畫的清晰度，並且在筆跡變得潦草時告知用戶。在今後幾年內，Lernstift 能夠帶來書寫教學的革命，幫助受到讀寫障礙 (dyslexia) 困擾的 1 至 10 歲孩童學習拼寫，而歸功於對 40 種不同語言的識別支援，甚至在學習新語言上協助用戶。


開放源碼在太空

隨著全球 2000 大企業中有 90% 的公司將開放源碼軟體納入今年的產品組合之中，這類技術如今也被運用在太空中也就不足為奇了。英國氣象局 (Met Office) 最近開始著手實作一套系統，用來協助預測會影響地球天氣的太空事件。

鑒於所收集分析資訊的複雜特性，英國氣象局不再依賴序列式的資料庫軟體。英國氣象局的資料服務組合技術主管 James Tomkins 表示，我們發現我們不再受限，必須尋求特別的開發者，以建立資料表與撰寫複雜軟體。他們改為實作新的 MongoDB 實例以提供所需的超級運算能力和彈性。

Tomkins 說，我們在氣象局裡的資通訊策略，是將開放源碼擺在我們所有技術中的第一位順位。

前 500 最快超級電腦年度調查指出，其中 476 部最快超級電腦跑的是 Linux。

美國新興公司 NanoSatisfi 日前發射了兩顆採用開放源碼平台 Arduino 的低成本衛星。這些被稱之為 CubeSats，每側為 10 公分的微型衛星，能夠在無損功能技術的情況下，削減衛星的發射成本。

最先發射的兩顆衛星 ArduSat-1 與 ArduSat-X，將用來執行若干測試，甚至提供愛好者以 3 天 125 美元的低廉價格，在衛星上執行他們的實驗。預計中專案包括地球磁層的 3D 建模以及隕石追蹤。NanoSatisfi 希望未來 5 年內，能進一步發射 150 個 CubeSats，在此過程中將衛星技術大眾化。

NanoSatisfi 執行長 Peter Patzer 表示，政府沒有錢發射新的衛星，而且老舊的衛星也開始從天空上掉了下來。我們認為像我們這樣的公司能夠彌補這個空缺。


可塑性、強大、無所不在

很顯然地，開放源碼軟體正在逼近傳統解決方案：

＊輕量級的作業系統將開放源碼軟體帶往各種使用情境，包括你的口袋到地球軌道。
＊彈性且具成本效益的解決方案為組織開啓額外的運算能力。
＊開放源碼軟體為創造革命性產品，以及在現有框架上加快開發與部署週期，提供相應的工具。


◎本文翻譯自 Linux IT，原作者為 David Marshall：
http://www.linuxit.com/blog/bid/316537/I-Didn-t-Know-They-Use-Open-Source-Part-3
_______________________________________________________________

■ [自由專欄] 自由軟體如今為何比以往更為重要

作者是 謝良奇／編譯

從我發起計算自由運動，也就是軟體自由以來，已經 30 年。自由軟體運動開始以來已經有許多改變：如今先進國家中大多數人都擁有電腦，或者手機，並且藉此使用網際網路。用戶仍舊因為非自由軟體的緣故，無法掌握其運算的控制權。而現在更有另一種掠奪此控制權的方式：服務替代軟體 (Service as a Software Substitute，SaaSS)，意指把你的電腦運算交給別人的伺服器去做。

非自由軟體與 SaaSS 會窺探、束縛、甚至攻擊用戶。因為服務與私有軟體產品不受用戶控制，惡意軟體的情況時有所聞。這就是問題的根本：非自由軟體與 SaaSS 掌握在他者手上（通常是某某企業或國家），而自由軟體卻由其用戶控制。

這份控制權為何重要？因為自由代表掌握你自己的生活。

如果你用某個程式完成生活中的大小事，你的自由就有賴於你是否能控制這個程式。你所使用軟體的控制權，是你所應得的，當該程式和你生活中重要事項相關時，更是如此。

你對該程式的控制權需要四個基本自由。假如缺少任何一個或有所不足，它就是私有或非自由程式：

＊不論何種目的，依你所願執行該程式的自由。
＊了解並改寫該程式原始程式碼，好讓程式依你所願執行運算的自由。程式是由程式設計者用程式語言寫出來的，那有點像是英語結合代數，而程式的這種形態稱之為原始程式碼。任何懂得程式設計並擁有程式原始程式碼的人，都可以加以閱讀、了解其運作，並加以修改。當你拿到的程式是一連串能讓電腦有效執行，但人類極難以理解的數字，也就是可執行格式時，了解與修改處於該形態的程式將十分艱難。
＊依你所願，製作並散佈完全相同副本的自由。（這並非一項義務，全看你的選擇。自由程式不代表其他人有義務拷貝給你，或者你有義務拷貝給他。）
＊依你所願，製作並散佈經你修改的程式版本的自由。


前兩項自由表示每個用戶對該程式都有個別的控制權。藉由其他兩項自由，任何群體用戶可以一起對程式行使共同控制權。

假如用戶不能控制程式，程式反過來會控制用戶。

對於私有軟體，一定會有某個單位，程式的所有者，控制著該程式，並且透過它對用戶行使權力。非自由程式就像束縛的軛鐵，一個不公正的權力工具。在極端案例中，私有軟體被用來窺探用戶、限制、審查並侵害用戶。舉例而言，Apple i 系列產品的作業系統全都有份。Windows、行動手機韌體、Google Chrome 的 Windows 版包含了一個通用的後門，可以讓某些公司無需許可即能遠端更改程式。Amazon Kindle 也有可以用來刪除電子書的後門。

以終結非自由軟體的不公不義為目標，自由軟體運動發展了用戶能自由使用的自由軟體。我們從 1984 年開始開發自由作業系統 GNU。今天，數百萬台電腦使用 GNU，其中大多數是 GNU / Linux 這樣的組合。

SaaSS 在此扮演什麼角色呢？服務替代軟體並不表示伺服器上的程式是非自由的。應該說，使用 SaaSS 造成的不公不義，和使用非自由程式是一樣的：它們就像通往同樣爛地方的兩條路線。拿 SaaSS 翻譯服務為例：用戶將文字送往伺服器，伺服器加以翻譯（例如從英文到西班牙文），然後把翻譯送回給用戶。如今翻譯工作便以納入伺服器運作者而非用戶的控制之下。

當你使用私有程式或 SaaSS，首先你就是在害你自己，因為它給了某些單位在你之上的不公平權力。為了你自己，你應該跳脫出來。

在許多情況下，使用非自由軟體會直接迫使其他人也這樣做。Skype 就是個清楚的例子：當某人用了非自由的 Skype 用戶端軟體，等於要求對方也使用這套軟體，因此犧牲了雙方的自由（Google Hangouts 也有同樣的問題）。即使是一下子，即使是在其他人的電腦上，我們都不應該使用這樣的程式。

使用非自由程式與 SaaSS 的另項害處是，這麼做會獎勵加害者，鼓勵進一步發展這些程式或服務，轉而讓更多人落入開發公司的控制之下。

當用戶為公共團體或學校時，此一間接傷害會更加嚴重。公共機構的存在是為了大眾，而非他們自己。當他們進行運算，是為了大眾作運算。他們有責任站在大眾的利益上，維持對這些運算的控制權。因此，他們僅能使用自由軟體並拒絕 SaaSS。

國家的計算主權同樣需要自由軟體。根據 Bloomberg 報導，微軟會在修復 Windows 臭蟲前，先讓美國國家安全局得知臭蟲的存在。我們不知道 Apple 是不是也這樣做，但該公司和微軟同樣承受了美國政府的壓力。對於政府來說，使用這樣的軟體無疑會危害國家安全。

學校，以及所有的教育活動，會透過教學內容影響社會的未來。因此學校應該只教自由軟體，傳輸民主價值觀與協助他人的習慣。非自由程式的使用教學，會灌輸對該程式擁有者的依賴，有違學校的社會使命。

私有軟體開發者讓我們懲罰那些出自善意分享軟體，或對加以修改懷有好奇心的學生。他們甚至為學校制訂了反分享的宣傳。相反的，每個教室都該貼有這條規則：

學生們，這個教室是我們分享知識的地方。如果你帶軟體到課堂來，你不能只顧自己用。你必須拷貝給班級裡的其他人，包括原始程式碼在內，好讓其他人可以學習。因此，帶私有軟體到課堂來是不允許的，除非是為了逆向工程之用。

在計算領域中，合作包括了把程式原封不動複製後重新散佈給其他用戶，也包括把你修改過的版本散佈給別人用。自由軟體鼓勵這些形式的合作，私有軟體卻加以禁止。私有軟體禁止重新散佈副本，也不給用戶原始程式碼，不讓他們做修改。SaaSS 也是一樣：如果你的計算是透過網路，在其他人的伺服器上，藉由其他人的程式完成的，因為你無法接觸到執行運算的軟體，因此你不能重新加以修改或重新散佈。

實務活動也會使用到其他作品，包括食譜、教科書之類的教育作品、字典與百科全書之類的參考作品、顯示文字章節的字型、硬體電路圖、用 3-D 印表機製作有用物件所需的模型。由於這些都不是軟體，自由軟體運動嚴格來講並不包括它們，但是基於同樣的理由能得到同樣的結論：這些作品應該包含上述四種自由。

我經常被問到，什麼是自由軟體的優點。但是優點一詞對於自由來說太過薄弱。

沒有自由的生活是種壓迫，這一點也適用於計算以及我們生活中的各種其他活動。

我們必須贏得我們使用軟體的所有控制權。要如何才能贏得？透過在我們擁有或經常使用的電腦上，拒絕 SaaSS 以及非自由軟體，透過開發自由軟體，透過拒絕開發或推廣非自由軟體與 SaaSS，透過散佈這些想法給其他人。一起來讓所有電腦使用者都自由吧。

◎本文翻譯自 WIRED，原作者為 Richard Stallman：
http://www.wired.com/opinion/2013/09/why-free-software-is-more-important-now-than-ever-before/
_______________________________________________________________

■ [源碼專案] 微軟開源工具 BrowserSwarm 協助開發者跨越所有主流瀏覽器測試 JavaScript 框架

謝良奇／編譯

由微軟日前所推出的 BrowserSwarm，是協助 Web 開發者跨裝置與瀏覽器，針對 JavaScript 框架與程式庫進行自動化測試的開放源碼工具。你只要註冊就可以免費享用上述好處。

微軟的論點很簡單，高品質的框架是現代 Web 的基礎，但框架開發者經常缺乏資源進行跨瀏覽器測試。為此，BrowserSwarm 的目標是為他們節省時間與伺服器資源，將這些重擔交給雲端負責，不需要設定眾多瀏覽器與設備測試環境。

微軟並非 BrowserSwarm 背後唯一的推手，還有來自 AppendTo 開放源碼團隊與 Sauce Labs 雲端測試團隊的協助。因此不用感到訝，BrowserSwarm 不僅能夠直接連接你在 GitHub 上的源碼庫，而且還能使用 Sauce Labs 的雲端服務透過 QUnit 自動執行單元測試。

每當你在 GitHub 上發佈最新專案時，BrowserSwarm 會自動使用 Sauce Labs 在雲端上的自動測試平台，在單元測試框架上加以執行。測試將跨越五大主流瀏覽器包括 Internet Explorer、Firefox、Chrome、Safari、Opera，與其近期版本。

個別的工作報告會區別通過與失敗的測試案例，因此開發者可以很快地修復有問題的部分。也可以在 QUnit 中直接檢視完整的測試輸出結果。

微軟認為 BrowserSwarm 對小公司來說會是非常有用的工具。微軟 Internet Explorer 團隊資深產品經理 Justin Garrett 表示，大多數受到 70% 以上全球高流量網站使用的頂尖 JavaScript 框架，如 jQuery、dojo、prototype、Modernizr，都有足夠資源進行定期測試，但如果你只是正在打造新框架的新創公司呢？測試或許就會是你最後（但必須）要做的事。我們希望減少在測試框架（以及使用到它們的網站）上花費的時間，好讓開發者有更多時間用在創新上。

這只是開始。因為 BrowserSwarm 採開放源碼，微軟正尋求社群協助，為其加入除 GitHub 外的更多代碼庫支援、更多專案、更多單元測試框架，以及更多測試案例。

◎本文翻譯自 The Next Web，原作者為 Emil Protalinski：
http://thenextweb.com/microsoft/2013/09/26/microsofts-open-source-browserswarm-tool-lets-developers-test-javascript-frameworks-across-all-major-browsers/
_______________________________________________________________

■ [源碼新聞] 自由出版基金會推出 Aaron Swartz 設計的告密工具 SecureDrop

謝良奇／編譯

自由出版基金會 (Freedom of The Press Foundation) 推出了用來讓消息來源與記者匿名通訊，由已逝的 Reddit 共同創辦人 Aaron Swartz 部分開發，有史以來最強大的揭秘工具。

在 2013 年 1 月去世之前，Swartz 正在開發一套工具，可讓消息來源在線上匿名送交文件給記者，而無需使用會被追蹤的電子郵件。

稱之為 SecureDrop 的這套工具，可以安裝在任何新聞機構網站上，作為「與我們聯絡」的表單頁面。但這些頁面通常會要求姓名與電子郵件位址。經過加密的 SecureDrop 系統是完全匿名的，系統會為告密者指派兩個獨一無二的識別碼，一個給記者，一個給告密者。這兩個識別碼在對話中會維持不變，以便在姓名不公開的前提下進行對話。

SecureDrop 的推出時機點，正巧是人們空前關注線上通訊不安全性的時刻。美國國家安全局告發者 Edward Snowden 的洩密，揭露了政府對於電子郵件與其他形式線上通訊的廣泛監控。

類似於維基解密 (Wikileaks) 提交系統的 SecureDrop，始於 Swartz 的 DeadDrop 專案，一種協助記者與消息來源匿名通訊的方法。今年 5 月 New Yorker 利用該工具的部分程式碼，建立了自己的系統，稱之為 StrongBox。

非營利的自由出版基金會如今取得了更名後的專案，並承諾為這套提交工具提供持續支援與改進。這套工具是以 Python 撰寫，採開放源碼，用戶可以修改以滿足自身需求。

該基金會確信，儘管沒有安全系統可以達到 100% 滴水不漏，SecureDrop 系統仍是媒體有史以來最強的揭祕工具，並宣稱數家未具名的大型新聞機構，已經註冊了這項服務。這些機構的名稱將在數週內公布。

基金會共同創辦人兼董事會成員 JP Barlow 表示，在美國，我們已經來到一個時刻，新聞媒體確保其來源匿名與安全的唯一方法，就是乾脆不知道對方是誰。SecureDrop 就像讓真實新聞悄悄從門縫下塞進來。

為了讓所有人都能使用這套系統，該基金會將協助新聞媒體在他們的網站上安裝該系統，對如何保障安全性提供指導，並提供長期的技術支援。小型組織在硬體取得上，像是儲存 SecureDrop 資料的伺服器等，可以向該基金會申請協助。

在推出之前，SecureDrop 經過華盛頓大學研究者團隊進行的詳細安全性稽核，團隊成員包括安全專家 Bruce Schneier 與匿名網路瀏覽器 Tor 的開發者 Jacob Appelbaum。

該基金會執行董事 Trevor Timm 指出，一個真正自由的新聞媒體，取決於調查記者與消息來源建立信任的能力。近來美國國家安全局的揭祕事件，以及當前政府創紀錄的告密者起訴案數量，顯示出這一層關係受到的嚴峻考驗，還有政府會對其加以破壞的程度。

Timm 表示該基金會將致力於為不同規模的新聞機構與記者，開創出新時代的安全性。

自從美國國家安全局與英國政府通信總部的數千份最高機密文件，被 Edward Snowden 泄露後，即使經過聲稱採用高度加密的服務，電子郵件還是可以被追蹤一事，已經受到廣泛報導。

Snowden 所使用且在今年 8 月關閉的 Lavabit，就是這樣的電子郵件服務。該服務所有者援引法律因素，無法對突然關閉作出解釋。所有人 Ladar Levison 表示，他寧願關閉他擁有 40 萬名用戶的公司，也不希望成為對付美國人民的犯罪同謀。

不過，從 10 月 14 日起，該服務又恢復了運作，並給用戶 72 小時更改密碼並回復儲存在他們帳號裡的資料。而一個設置用以協助支付 Levison 法律費用的法律基金，至今已募集超過 9 萬 3000 美元。

◎本文翻譯自 International Business Times，原作者為 Alistair Charlton：
http://www.ibtimes.co.uk/articles/514298/20131016/securedrop-aaron-swartz-wikileaks-style-anonymous-submission.htm
_______________________________________________________________

■ [源碼新聞] Raspberry Pi 產量將達百萬台

謝良奇／編譯

今年三月初 Raspberry Pi 與 Sony 簽訂協議，將大部份製造流程移至英國。這項決定乃是出自於英國與歐洲對該裝置的大量需求，以及英國生產流程的相對技術專業。

Sony 的 Pencoed 工廠總經理 Gerald Kelly 表示，6 月時我們預計每週生產 204 台裝置。到了 7 月數字攀升到了每週 1 萬台，這個月我們將達到每週 3 萬 8 千台，而這只是剛開始。

自從生產流程移至英國製造後，光是在英國製造的裝置數量就已經增加到 4 萬台。這表示從數量看來，英國如今的生產量已經超過中國工廠，實在令人印象深刻。因此，出貨量已經超過 50 萬大關，然而在產量如此急速上升的情況下，預料 7 月就能夠達成出貨 1 百萬台裝置的里程碑。

儘管如此，在許多地區與國家，額外的生產需求仍然大大地高於供應量。所以，可以預期在今年底，直到生產量大幅提升並超過百萬里程碑之前，需求還是會持續高於現有供應量。

◎本文翻譯自 eTeknix，原作者為 Ryan Martin：
http://www.eteknix.com/raspberry-pi-production-to-reach-1-million-soon/
_______________________________________________________________

■ [源碼新聞] Linux 的精神勝利

Kenneth Mak／文

◎本文原載 Linux Pilot，原文章連結：http://www.linuxpilot.com/blog/kiji/2013100403linux-spirit。

Windows XP 和 Microsoft Office 2003 的支援將於 2014 年 4 月 8 日正式完結，究竟 IT 業界將會如何應對？以往很多人都不會將這個當成問題，因為唯一的解決辦法便是將 Windows 和 MS Office 升級。但隨著美國政府的網路監控醜聞曝光，歐洲各國對升級 Windows 表現猶疑，就連一直對美國言聽計從的日本，其主流媒體中也出現「利用 Linux 取代 Windows」的言論，這是從來都未發生過的。

(http://www.openfoundry.org/images/131112/Linux/201310040201.jpg)

日本 IT 業界將這次的狀況比喻為 2000 年時的千年蟲問題，個人企業無不臨陣以待，全因為 Windows XP+MS Office 2003 正是目前日本最流行的組合。資訊安全當然是升級要點，但經濟不景也是重要考慮。升級無可避免地要花一筆開支，不升級就只有參加微軟在 2014 年後為 Windows XP 特設的支援服務，每台電腦得支付 200 美元年費。進退兩難下，有人開始提出利用 Ubuntu 取代 Windows XP，連帶筆者幾位非業界的日本朋友也問及相關細節，顯示 Linux 在日本民眾間的認知度大增。

(http://www.openfoundry.org/images/131112/Linux/201310040202.jpg)

事實上在 2012 年，日本一家公司就為了開拓 Linux 支援業務，「以身作則」的將內部 950 台電腦全部轉為 Ubuntu，並得到 Canonical 的支援。但過程並不容易，安裝 Linux 後舊有的電腦中小部分不能發聲、接上投影機後沒畫面、又或者觸控板沒反應，但新購入的電腦則沒問題。技術人員已經列出此等硬體並向 Canonical 報告，並在下一個版本的 Ubuntu 中作出改良。其次是以日文為檔名的檔案在 Windows 壓縮後，在 Ubuntu 下解壓時變成怪獸字，Canonical 於是在 Ubuntu 中加入了支援亞洲語系檔名的壓縮工具。

應用程式方面，公司一直使用 Becky! 作為郵件客戶端，但 Becky! 卻沒有 Linux 版本，結果採用 Thunderbird 代替，防毒軟體則使用開源的 ClamAV。問題較大的是一些只提供 Windows 版本客戶端的程式、和一些必須 ActiveX 或 IE 才能使用的「假 Web 程式」，暫時的對策是將此等 Windows 電腦虛擬化，並逐步開發跨平台方案代替。公司也設立了支援部門解答一般用戶的疑問，當中最多人詢問的是有關 Thunderbird 的操作和印表機的設定，對 Linux 的查詢卻不如想像的多，處理的個案也由開始時每天 20 宗減至 10 宗。

當然還有其他小問題，例如 Windows 和 Ubuntu 因為預設字體不同，同樣使用 OpenOffice.org 或 LibreOffice 製作的文件，在 Windows 和 Linux 下看上去會有差異，當中又以簡報軟體較為明顯，解決方法是改為以 PDF 方式存檔。至於當初被視為最大問題的 MS Office 文件兼容性，則可透過要求傳送文件的一方另存檔案為開放文件格式 (ODF) 解決，前提是對方使用的是 MS Office 2007 或以上版本。事實上早在 2007 年，該公司就已經將全部 MS Office 升級為 OpenOffice.org，三年間共節省了 1,700 萬日元。負責人坦言將 Windows XP 升級為 Linux，在成本效益上不及升級至 OpenOffice.org 般明顯，但對將來減少 Windows 伺服器 CAL 費用和對微軟的依賴，卻是重要的一步。
_______________________________________________________________

■ [源碼新聞] Bitcoin 的危與機

Kenneth Mak／文

◎本文原載 Linux Pilot，原文章連結：http://www.linuxpilot.com/blog/kiji/2013102801Bitcoin。

開源貨幣 Bitcoin 由小眾的玩意，一躍而成全球化電子貨幣，但危機也隨之而起。利用 Bitcoin 作為貨幣交易的毒品買賣網站 Silk Road，在 2013 年 10 月被美國聯邦調查局 (FBI) 查封，令 Bitcoin 兌換美元的匯率大跌，成為 Bitcoin 在面世以來的最大考驗。

(http://www.openfoundry.org/images/131112/201310280101.jpg)

粗略估計，單是用於支付 Silk Road 交易的手續費的 Bitcoin，已達八千萬美元，總交易金額達到 12 億美元。查封消息一出，Bitcoin 兌換美元的匯率一度由原來的 1 BTC 兌換 145 美元跌至 119 美元，但在本文截稿時已經達 188 美元了，反映 Bitcoin 安全渡過了作為「貨幣最大考驗」的信心危機。筆者在 2012 年 12 月時也曾在網誌中提及 Bitcoin，當時 1 BTC 只能兌換 13 美元，如果在那時候入貨的話，現在已經升值超過十倍了。

貨幣最重要是備受信任，當年美元能成為戰後全球的通用貨幣，理由亦是如此。美國在當年曾承諾每一美元都可以兌換等值的黃金，這也是「美金」一詞的由來。其後金本位雖被取消，但各國已經手持大量美元，只能眼睜睜的看著美國無止境地印鈔票，手頭上的美元不斷貶值。不管是沒錢還國債、還是出現外貿逆差，都可以通過印刷美鈔來解決，並透過美元在金球的流通性，將通貨膨脹等負面經濟效果轉嫁給其他國家。戰後美國雖經歷數十年的高額財政赤字、甚至觸及債務上限仍然能保持經濟穩定，原因就在這裡。

你印的鈔票大家都在用，那麼印多少我們總可以發表一點意見吧？對不起，這是美國的「家事」，怎可以讓你來管？ Bitcoin 就不同，生成（開採）貨幣的方法由公開的數式決定，任何人都可以下載一個開源的 Linux、Mac OS X 或 Windows 的程式進行「採礦」。系統會根據「礦工」的人數，自動調整可以開採的 Bitcoin 「礦脈」的數量，確保 Bitcoin 的稀有性，情況和開採黃金一樣，不必受任何個人、團體或國家的控制，價格由市場供求決定。Bitcoin 採用了 P2P 的分散式設計，每一台電腦都以匿名方式保留著部分交易記錄，縱使一部分的用戶不在線上，也可以重新計算出所有交易記錄，不需要由中央銀行作任何形式的干預。

Bitcoin 的出現對美元絕對是個威脅，美國自然不會坐視不理。但諷刺的是要管制 Bitcoin，就必須承認它是貨幣，否則所有限制貨幣的手段都會變得「出師無名」。在 Wiki 上 Bitcoin 原本被形容為加密貨幣 (Cryptocurrency)，但隨著 2013 年 8 月美國德州聯邦法院裁定 Bitcoin 是貨幣，今後它將會受到和美元同等的管制。可幸的是美國政府始終未能像控制美元般限制 Bitcoin 的發行量，開源的「採礦」設計保證了 Bitcoin 的未來。

Bitcoin 另一個好處是操作簡便，傳統跨國的銀行轉帳，縱使是同一銀行間的轉帳也必須經過第三者，令轉帳前永遠無法確認手續費金額。Bitcoin 則相對簡單，只要將轉帳內容以數位簽章加密送出，對方便可馬上收到。Internet Archive、WordPress、WikiLeaks 已經接受 Bitcoin 付款，部分企業甚至開始用 Bitcoin 發薪。Bitcoin 提供的是一個讓人類首次打破美元壟斷局面、在經濟上真正自立的機會，關鍵只在我們是否能夠把握。
_______________________________________________________________

■ [接案 / 工作] 自由軟體鑄造場電子報歡迎熱愛自由開放的您投稿！

ROCK／文

關於電子報

自由軟體鑄造場電子報是一份以自由軟體推廣為主旨的電子報，內容包括自由軟體的一般應用介紹、技術開發心得分享、商業應用與產業趨勢、開放式授權的法律議題、社群聚會與活動、以及世界各國的自由軟體策略等，提供最新國內外自由軟體相關的重要消息。自 2003 年 8 月起至今已發行達兩百多期，發刊的文章除特殊情形外，均採用符合自由開放精神的創用 CC「姓名標示－禁止改作－非商業性」授權方式來授權文章，讓有需要的讀者能夠自由閱讀、轉載。
電子報提供以下分類，讓讀者能夠精確地找到自己想閱讀的領域：


＊源碼新聞 (FOSS News)：提供最新及過往所有跟自由軟體相關的活動訊息、國內外新聞、採訪、工作坊、社群聚會等資訊。
＊技術專欄 (Tech Column)：針對擁有技術背景的專案開發者，分享自由軟體的開發心得、新技術的概況及其後續的發展、自由軟體在軟硬體上的技術應用等。
＊源碼秘技 (FOSS Programs)：發表自由軟體應用類的教學文章，或是作者提供自己使用自由軟體的心得，增加一般使用者或是入門者對於各種自由軟體的認識。
＊法律專欄 (Legal Column)：刊登不屬於新聞性且與自由軟體法律授權領域相關的專欄文章。
＊自由專欄 (FOSS Forum)：分享對於自由軟體領域的獨到見解、個人對於自由軟體的心得、親身轉換自由軟體的心路歷程、自由軟體應用類的教學文章，或是使用自由軟體的心得與評論、與自由文化、開放資料、開放硬體等等相關的文章。
＊企業應用 (Enterprise Application)：彙集企業運用自由軟體可能會遇到的問題與建議、現況及趨勢等文章。
＊源碼專案 (FOSS Projects)：OpenFoundry 上重要專案的介紹，或是自由軟體領域知名的專案。

寫稿方向

以下是近期募集的文章主題：OpenStack, OpenFlow, GNU Radio, PhoneGap, B2G, Khronos Group, DKAN, LOD2, 其他...。

投稿方式

您若有任何與自由軟體相關的主題，不論是嵌入式、資安、雲端運算等領域的技術分享；文書、多媒體、美工排版等一般應用軟體介紹；授權法律、自由軟體政策、市場趨勢觀察等（但不特別限定以上題目），皆非常歡迎投稿給本報與其他讀者分享。
詳細投稿方式請參考：http://www.openfoundry.org/tw/contribute-now
_______________________________________________________________


□ 關於本報 □__________________________________________________

◎ 主編︰洪華超
◎ 法律專欄編輯︰葛冬梅
◎ 技術編輯︰曾義峰
◎ 執行編輯︰王怡凱、陳蕙蓁
◎ 外稿編譯︰林誠夏、黃郁文、謝良奇

本電子報自行採訪、報導、編譯、撰寫文章之智慧財產權屬於中央研究院，採用創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版授權散布，歡迎在不變更內容的前提下，以任何形式重製與散布本報，但必須遵守下列義務︰(1) 不得為商業目的之利用；(2) 必須標明本電子報智慧財產權屬於中央研究院；(3) 完整引用本著作權說明。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用上述文章，請與自由軟體鑄造場編輯群(ossfepaper at openfoundry.org) 聯絡。

非自由軟體鑄造場自行撰寫的單篇文章，其智慧財產權利屬於原作者所有，其以非專屬的方式授權予自由軟體鑄造場運用，而與本電子報其他文章併以創用 CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版的方式進行散布。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用個別作者的文章，請自行與該作者聯繫，或透過自由軟體鑄造場編輯群 (ossfepaper at openfoundry.org) 來轉發聯絡訊息。

授權條款全文請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/legalcode
授權條款簡介請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/deed.zh_TW

若欲訂閱本電子報，請至以下網址︰
http://www.openfoundry.org/tw/news

如欲取消訂閱這份電子報，可透過自由軟體鑄造場新聞首頁左上方之自動退訂機制︰
http://www.openfoundry.org/tw/news

或寄發電子郵件至︰ossfepaper@openfoundry.org，以進行人工退訂。