________________________________________________________________

□■□ 自由軟體鑄造場電子報第 231 期 | 2013/11/26 □■□
________________________________________________________________

◎ 本期主題︰從開放源碼的理念到提供源碼的義務
◎ 訂閱網址︰http://www.openfoundry.org/tw/news/
◎ 下次發報時間︰2013/12/10

□ 本期標題 □__________________________________________________

■ [法律專欄] 從開放源碼的理念到提供源碼的義務

■ [源碼專案] 3D 顯示的地震資訊軟體－ EQuake

■ [自由專欄] 為什麼孩子即使未來不走 IT 產業，仍應該學寫程式

■ [自由專欄] 開放源碼專案臭蟲提交的用戶指引

■ [源碼新聞] 10 種協助開放源碼城市維持透明度的工具

■ [源碼新聞] 開放源碼投身多樣化，每個人都是贏家

■ [源碼新聞] Firefox 的 Lightbeam 讓您享有免於受網路監控的自由！

■ [源碼新聞] Facebook 與 Cisco 展開網通裝置開源之爭！

■ [源碼新聞] 工研院與清大、交大攜手合作培育自由開源軟體人才

■ [源碼新聞] PCLinuxOS 讓 Linux 系統在桌機與筆電上的運用更加便利！

■ [源碼新聞] ezgo11 發表會！用 ezgo 玩自由軟體真的 easy go！

■ [源碼新聞] 2013 年十二月份社群活動列表

□ 本期內容 □__________________________________________________

■ [法律專欄] 從開放源碼的理念到提供源碼的義務

葛冬梅／文

開放源碼 (Open Source) （註一）是現在許多人在接觸自由開源軟體時，第一個會接觸到的詞，不過有人將這個詞誤解為使用自由開源軟體所必須遵守的義務，認為一旦取得、持有自由開源軟體就必須主動公開手上所持有的程式源碼。其實開放源碼理念與提供源碼義務是兩個不同、但有所關聯的概念：開發者因為認同自由開源軟體理念，而主動公開其所撰寫的程式源碼，並授權給予他人來利用，所以他人才有機會來利用自由開源軟體，這是屬於實踐開放源碼理念的過程；而當使用者取得自由開源軟體的程式源碼時，其要在散布軟體的同時提供源碼給予後手，則是屬於履行授權義務的過程。本文以下將從自由軟體與四大自由談起，介紹相關的歷史背景與授權條款中提供源碼義務的內容，來說明開放源碼與提供源碼所代表的意義，以釐清兩個概念之間的關係。

【四大自由理念延伸出提供源碼的義務】

開發者之間分享、討論與修改彼此所撰寫的軟體程式碼並非是近代才有的現象，早在資訊科學發跡的年代，就已經有著這種分享討論的風氣。不過將這種風氣與背後所代表的精神彙整成為有系統的概念，則是肇始於自由軟體與四大自由的出現，因此要釐清開放源碼與提供源碼這兩個概念的關係，就必須要先說明這兩個概念的共同源頭－自由軟體 (Free Software) 與其所代表的四大自由理念。

自由軟體是由 Richard Stallman（註二）所創的名詞，其英文為 "Free Software"。而之所以稱為「自由 (free)」軟體，是為了凸顯這類軟體尊重使用者自由的特性，因此若是一位軟體使用者擁有下面所列的四大自由，那麼他所持有的軟體就是自由軟體（註三）：

【自由之零】為了任何目的執行程式的自由。
【自由之一】研究程式如何運作的自由，並且將程式修改符合本身的需求。源碼的近用 (access to the source code) 是實現這個自由的前提要件。
【自由之二】再次散布程式的自由，並用以幫助鄰居。
【自由之三】將自己修改的版本散布給他人的自由，而透過此舉，使用者可以讓整個社群均有機會因為他的修改內容而受益。源碼的近用 (access to the source code) 是實現這個自由的前提要件。

從四大自由的理念，可以看到自由之一與自由之三的前提要件都是「源碼的近用 (access to the source code) 」，因為程式源碼 (source code) 是軟體被撰寫出來的原始格式，也因此是最適合研究與修改的格式。而這邊所謂的近用是指軟體使用者必須可以「接近、取得與利用」程式源碼。因此可以了解到，自由軟體與四大自由的理念是建立在使用者取得程式源碼的基礎之上，依照這樣的理念與基礎，軟體使用者一旦取得了一個軟體，那麼他也就有自由來取得軟體的程式源碼，如此使用者才得以研究、修改、重製與散布程式源碼，進而實踐四大自由的理念。因此，當四大自由落實到實際的授權條款文字時，就出現了程式源碼必須要提供給予使用者的義務規定，也就是說，從軟體第一次被散布的時候開始，開發者或者著作權人就負有提供源碼給予使用者的義務。而這就是自由開源軟體領域中，提供源碼義務的的歷史緣由。當然開發者或著作權人可以主動將程式源碼「開放」或者「公開分享」出來，例如放在網路上供他人自由下載利用，只是這樣的作法是比四大自由所要求標準更高的方法，卻並非是四大自由所寄望一定要達到的作法。

【提供源碼義務在授權條款中有著嚴寬不同的規定】

除此之外，四大自由其實並沒有要求使用者再次散布軟體時，也必須要提供程式源碼給予後手使用者 (recipient)，因為只要開發者在散布軟體時將程式源碼給予使用者，並讓使用者可以使用、修改、重製與散布軟體，這樣的軟體就是符合四大自由理念的自由軟體。關於這點，可以從自由軟體基金會 (Free Software Foundation, FSF) 所羅列的自由軟體授權條表中觀察出來（註四）。

自由軟體基金會由 Stallman 所創立，顧名思義，創立目的在於宣揚自由軟體與四大自由的理念，因此該基金會收集符合四大自由的授權條款，並且將這些條款表列在其網站上，供開發者參考（註五）。這個表列中的授權條款，都有一個共通的基本特性，那就是開發者或著作權人必須將程式源碼提供給予使用者來自由利用，至於使用者再次散布軟體時是否提供程式源碼，不同授權條款就可能會有不同的規定。以著名的 GNU General Public License (GPL) 與 GNU Lesser/Library General Public License (LGPL) 為例（註六），不僅軟體開發者或著作權人本身負有提供程式源碼的義務，持有軟體的使用者再次散布軟體時，也一樣負有提供源碼給後手的義務。但是像由學術機構制定的 BSD、MIT 等授權條款，就沒有強制規定使用者有提供程式源碼的義務，使用者可以自由決定是否提供。而 Google 這幾年大力推廣的 Apache License Version 2.0 (Apache-2.0)，雖然授權條款的內容較 BSD、MIT 來得多，但在使用者是否提供程式源碼的規定上，也是與 BSD、MIT 有著相同的規定。此外，還有些介於這兩類中間的授權條款，這類的條款規定原則上使用者在散布軟體時必須要提供程式源碼，但是在軟體被修改過的情況下，只是符合授權條款所規定的要件，那麼使用者就可以自由決定是否提供修改部份的程式源碼給後手。Mozilla Public License (MPL) 以及 Eclipse Public License (EPL) 都是屬於這類中間型態的授權條款。

因此可以了解到，雖然自由軟體與四大自由理念強調使用者要可以近用程式源碼，但是在實際落實到授權條款的時候，卻沒有強調軟體使用者也必須有義務要將程式源碼提供給予後手。無論是對於提供程式源碼義務規定較嚴格的 GPL 與 LGPL，或較為寬鬆的 BSD、MIT、Apache-2.0，乃至於中間類型的 MPL 與 EPL，由於都規定開發者或著作權人在第一次被散布軟體就必須時提供程式源碼，並且讓使用者據此可以使用、修改、重製與散布軟體，所以都是屬於自符合四大自由的由軟體授權條款，至於這些軟體使用者是否提供程式源碼給予後手，則不是四大自由所追求的重點。

【開放源碼理念從促進商業應用的目的演變成為自由開源軟體的代表辭彙】

在上述各款授權條款被制定出來或者被廣泛利用的同時，「開放源碼 (Open Source)」這個主題被引發出來，同時與被熱烈地討論著。開放源碼這一個詞與其背後所蘊含的理念之所被熱烈地討論，主要是因為隨著自由軟體的散布與四大自由理念的開展，開始有公司利用自由軟體來作為商業營利的基礎，而四大自由所追求的軟體使用者自由理念與公司所追求的商業利益並不相同，甚至在某些觀點上產生衝突，因此「開放源碼 (Open Source)」一詞被創造了出來，推動開放源碼一詞的理念者，希望透過這個較為中性的辭彙，來重新詮釋承襲自自由軟體的概念與理想（註七）。而為了促進商業公司的利用，開放源碼這一詞背後還有一套認証與商標機制配合運作，來便利商業使用者與消費者了解與辨識出開源軟體：開放源碼的概念有一套「開放源碼定義 (Open Source Definition, OSD)」來加以界定，OSD 透過相對中性的文字描述來定義開放源碼，並沒有涉及到自由理念的闡釋，而一份授權條款是否符合開放源碼定義則由「開放源碼促進會 (Open Source Initiative, OSI) 」這個法人組織來進行審核，一旦審核通過，OSI 就會在其網站上公開宣告該條款為開放源碼授權條款 (Open Source License)，若有軟體採用開放源碼條款授權的話，就可以在軟體與相關的文件中印上 OSI 的商標，對於商業使用者或消費者而言，一旦看到 OSI 的商標出現，就可以了解到該商業產品中或該服務背後是有應用到開源軟體（註八）。

不過有趣的是，隨著開放源碼一詞逐漸被廣泛使用，有許多不清楚背後歷史緣由的人，開始直接以開放源碼來概括統稱自由軟體與開源軟體，並且直接以字面上的意思來理解，認為自由開源軟體的基本精神就是要將程式源碼主動公開釋出，這樣的理解不僅超越了開源軟體實際上的傳散機制，也超越了自由軟體所代表的四大自由理念。而隨著九０年代全球網際網路 (World Wide Web) 相關技術的快速發展，網路成為一個非常方便的散布媒介，開發者開始將自由開源軟體的程式源碼放到網路上來散布，雖然散布軟體程式碼的媒介不只一種，例如：可以將程式碼存在 USB 隨身碟中，然後再拷貝到他人的電腦裡；或者將程式碼燒在光碟中，寄送給他人等等，但是因為網路傳輸快速而便利，想要利用軟體之人可以直接從網站上面自行下載軟體，省卻了開發者一對一散布給個別使用者的瑣碎過程，因此愈來愈多的開發者都選擇了網路這個媒介來散布程式源碼。演變至今，當代幾乎所有自由開源軟體專案不僅透過網路散布程式碼，也將網路作為協同開發的基本工具，任何一位開發者只要能連上網路，就可以參與自由開源軟體專案的開發，而網路無國界的特性則反過來強化了自由開源軟體程式源碼公開給予不特定人利用的印象，影響所及，在許多人的心目中，開放源碼幾乎與自由開源軟體劃上等號，同時，也因而產生了一旦取得、持有自由開源軟體就有義務要主動將程式源碼公開出來的誤解。

【結語：開放源碼理念與提供源碼義務共同構成完整的散布生態系】

開放源碼是一個理念，這個理念傳承自自由軟體所代表的四大自由，但是卻又與四大自由有著不同的內涵，而提供源碼義務雖然也是源自於四大自由，但卻是一個落實在授權條款中的義務性規定，同時隨著授權條款的不同，而有著不同嚴寬程度的義務要求。因此，簡單來說，開放源碼理念主要影響的對象是軟體開發者與著作權人，開發者或著作權人在認同這樣的理念之後，就會將其軟體程式源碼授權給予使用者來利用，這是一個實踐理念的過程；而提供源碼義務影響的對象則較廣，除了開發者與著作權人之外，還包括了其他使用者，而這些使用者在實際上是否負有提供程式源碼的義務，會隨著授權條款的實際規定而有所不同，因此這是一個實踐授權義務的過程。開放源碼理念與提供源碼義務兩者相關、卻不能等同視之，這兩個概念在現行自由開源軟體散布的過程中，發揮著不同的作用，一同建構出了一個完整的自由開源軟體的散布生態系。

希望透過本文的說明，可以讓讀者對於開放源碼理念與提供源碼義務這兩個概念有較為清晰的理解，避免因為誤解這些辭彙的意義而在利用自由開源軟體的過程中產生困擾。

----

註一：這篇標題下得也許不是很理想，因為可能會有讀者以為，一旦談論到自由開源軟體理念的時候，應該要將重點放在實踐軟體「自由 (freedom)」的目標上，因為開放源碼只是一個在這個實踐過程中所產生的現象。筆者基本上認同這樣的看法，不過一方面本文有針對自由軟體與四大自由加以介紹，另外一方面本文所立論的事實基礎是在於使用者對「開放源碼」一詞的誤解，因此標題採用「開放源碼」，以明確點出本文所要談的問題焦點。

註二：Richard Stallman 的個人網站：http://stallman.org/。關於他的詳細介紹可以參見維基百科條目：http://en.wikipedia.org/wiki/Richard_Stallman。 

註三：關於自由軟體 (Free Software) 的歷史介紹，可以參見英文維基百科 "Free Software" 條目的說明內容：http://en.wikipedia.org/wiki/Free_software。關於自由軟體的定義闡釋與四大自由的原文內容，請參閱 Stallman 所撰寫的 "The Free Software Definition" 一文：http://www.gnu.org/philosophy/free-sw.html。在此則附上四大自由的英文原文供參考：

● The freedom to run the program, for any purpose (freedom 0).
● The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.
● The freedom to redistribute copies so you can help your neighbor (freedom 2).
● The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.

註四：不過這並不代表四大自由允許授權條款限制使用者決定是否提供程式源碼的自由，若是一份條款強制規定使用者雖然可以自由使用、修改軟體，卻不能自由決定是否可以散布軟體，這樣的軟體仍然不符合四大自由的理念，並非自由軟體。

註五：自由軟體授權條款列表請參見：http://www.gnu.org/licenses/license-list.html#SoftwareLicenses。

註六：GPL 與 LGPL 是 Stallman 制定出來授權軟體程式碼的條款，此外他還制訂出適用於軟體說明文件的 GNU Free Documentation License (GFDL)，並且將這些條款都用於他自己所發起的 GNU 計畫 (GNU Project) 中， Stallman 意欲透過 GNU 計畫與這些授權條款打造出一套完整的自由軟體作業系統。而由於授權條款最初就是用來授權 GNU 計畫的軟體，也因此這些條款的全名前面也都有冠有 GNU 一詞。GNU 計畫網站：http://www.gnu.org。

註七：關於開放源碼 (Open Source) 一詞的由來，請參見開放源碼促進會 (Open Source Initiative, OSI) 網站上的緣由說明：http://opensource.org/history。此外，Bruce Perens 也曾發表過一篇文章對此有詳盡的說明：The Open Source Definition, http://oreilly.com/openbook/opensources/book/perens.html, at book " Open Sources: Voices from the Open Source Revolution", 1st Edition January 1999。其中 Perens 在該文 "History" 段落的第一句就表示「自由軟體是一個舊的概念了 (The concept of free software is an old one.)」。

註八：OSD 的內容請見：http://opensource.org/osd。OSI 的商標政策請參見：http://opensource.org/trademark。
_______________________________________________________________

■ [源碼專案] 3D 顯示的地震資訊軟體－ EQuake

謝良奇／編譯

Riley Davis 與 David Souther 在 EQuake 上進行合作，這是他們歷經約一天時間開發出的 3D 地震視覺化工具。他們討論到他們的動機與做法。

我們的靈感來自這則 xkcd (http://xkcd.com/723/) 漫畫，在漫畫中和地震有關的推特跑得比地震波還快。我們兩個人都喜歡透過和人們早已熟悉的尺度相連接，讓複雜的科學資訊更易理解。我們覺得把實際地震的波動畫在地球上，看看這些波動實際上用多快速度通過地殼，會是一件有趣的事。這套工具能夠在其他地震發生時，輕易用來在地圖上繪製出推特（或其他地理資料）。為了加以實現，我們使用了來自美國地質調查局 (U.S. Geological Survey，USGS) 的資料，加上 Three.js 與 S3age。

我們從 USGS 的資料庫取得相當於一天的地震事件。這份 USGS 資料標注了經緯度、時間、震度，此外還有其他我們用不到的資料。我們在地球表面放置 3D 標記，基於地震震度更改標記的大小與顏色。

Three.js 負責處理專案的繪製與模型。不過，我們發現 Three.js 的 API 與範例程式碼比我們所需要更為複雜。David 之前做了 S3age 程式庫，這是一個簡化 Three.js 場景建構的 API 包裝。使用這個程式庫讓我們簡化了初始程式碼。

new S3age "#container",
    scene:
        lights: [ new THREE.AmbientLight 0xdddddd ]
        children: [ earth = new Earth() ]
    controls: S3age.Controls.Sphere


我們建立了一個 Globe 基本類別，其中提供下列方法：

addMarker(Marker::THREE.Object3D[, lat, lon])


該方法會在地球表面的指定地點放置一個標記。標記的本地 3D 空間定位將 Z 軸沿著半徑向外指出，Y 軸指向北極，X 軸則與上述兩軸垂直地指向東。

class window.Quake extends THREE.Object3D
    constructor: (quake)-＞
        THREE.Object3D.call @


在 JavaScript 中，Object.create 也會延伸 THREE.Object3D。這讓我們進一步延伸 Quake 類別，以便從 Three.js 基本操作中，建立更為複雜的幾何形狀與 3D 構件。S3age 還提供了一套物理機制，會對 S3age 場景中所有有 update 方法的物件，呼叫 update: (clock)-＞。

在此應用程式中，Earth 延伸了 Globe 類別，增加了用 NASA 地球紋理組成的球體表面。繪製的部分全都交給 S3age 處理，EQuake 應用程式只負責 3D 幾何與標記。S3age 還提供對場景的控制。一套能輕易且快速在地球表面導向的程式庫，對未來的視覺化專案會是一大幫助。

你可以在 GitHub (https://github.com/DavidSouther/equake/blob/master/index.html) 找到 EQuake 的程式碼。S3age 提供了文件。Three.js 儘管有 API 方面的問題，但還是很棒的程式庫。請來看看並貢獻這個專案吧！

◎本文翻譯自 The New York Times，原作者為 Riley Davis 和 David Souther：
http://open.blogs.nytimes.com/2013/09/30/equake/?_r=0
_______________________________________________________________

■ [自由專欄] 為什麼孩子即使未來不走 IT 產業，仍應該學寫程式

謝良奇／編譯

Red Hat 產品經理 Burr Sutter 每天的工作，是讓開發者在開放源碼工具、技術、技巧上，更加成功與富有成效。因此，他希望自己的孩子也有解決技術問題的知識，這並不令人訝異。今年暑假時，Sutter 就鼓勵他兒子完成 CodeAcademy 上的某些課程，並報名 iD Tech Camps。

在訪談中，Sutter 談到為何希望自己的孩子知道如何修理每天使用的技術工具，以及如何與其他孩子的活動間取得平衡等等。希望讓孩子學習寫程式、修理電腦或者了解線上社群運作的父母們，也許會在 Sutter 的經驗中獲益。

問：你為何認為讓兒童與青少年學寫程式很重要？

答：資訊科技在現代生活中已無所不在，我的孩子們全都想要且一直想要電腦、筆電、智慧型手機、平板。我一直強調這些東西不是玩具，而是需要用戶進行學習的工具。換一種說法就是，如果你不能好好地使用這個工具（例如，出問題時加以修復），那麼你就不應該擁有它。

有了基本的程式技能，即使只是 HTML，就可以讓年輕人一窺機器內部，看見讓這一切運作的魔法，讓他們瞭解得更多。我相信只要略微更深刻的理解，就能成功減少阻礙進一步探索的恐懼與不確定性。

問：你的孩子這個夏天完成了 CodeAcademy 上的 Python 與 JavaScript 課程，對他和對你而言，這個經驗如何？

答：我的主要動機是，每個夏天傳統學校的行事曆，讓孩子們大大減少了他們腦力活動的動能。為期十週的學術停機，在我看來是太長了。對於像我這樣不斷設定目標並監督目標實現的人而言，最大的挑戰是能夠實際衡量進度。像 CodeAcademy 這樣的地方，可以大幅簡化監督、追蹤、進度衡量。我只要說，嘿，孩子，讓我看看本週完成百分比與徽章。就能夠知道他是不是在積極前進。當該系統本身鼓勵工作完成、衡量進度、給予積極關注時，激勵效果也會更好。

只是為了嘗試看看，他最近也在 OpenShift.com 上設立某些 Wordpress 網站，現在他知道了他可以為任何組織，輕易地且快速地建立網站。

問：程式語言是誰決定的，原因是？

答：我建議 JavaScript，因為這是 Web 的基礎程式語言，需求也高。他在學校的朋友跟他講過 Python，所以他選了這個語言。他就讀的 Wakefield 高中提供電腦工程與電腦科學課程，那裡有一群孩子喜歡 IT。

問：為什麼學 Python 和 JavaScript 對你很重要？

答：Python 是自動化工作的重要命令列解決方案，在各種電腦上也是相對易學的語言。我不覺得有多少孩子會想花時間在命令列上，不過一般電腦用戶至少要知道有這麼個東西存在才好。

問：你覺得在學寫程式與孩子其他活動（戶內與戶外、運動、閱讀等）之間取得平衡重不重要？

答：當然重要。這個夏天他也收到了一個新的滑板，鼓勵他多花時間在戶外，效果之好以至於他現在左手腕斷骨上打上了石膏。

此外，由於他想更像一名電腦遊戲玩家，去年春天他用自己購買的零件，建造了自己的 PC 工作站。再次強調，我的目標是讓他了解更多這一切背後的魔法，而且如果他的玩具出了問題（像是中毒、燒壞記憶體、硬碟掛掉），他也更能有機會自己修好。

我也大力地提倡閱讀，不過問題在於監督。你可以知道孩子有沒有在翻書，不過如果沒有自己讀過，然後跟孩子對話，就很難知道他是不是真的有讀進去。

問：除了 CodeAcademy 之外，要讓孩子對學寫程式有興趣，有其他選擇嗎？

答：我的小孩很喜歡 iD Tech Camps，舉例來說，他和幾個孩子花了一星期打造他們基於 Objective-C 的 iOS 遊戲。在另一個課程他用 Unreal 開發套件製作 3D 遊戲。他們還用特效制作了自己的短片。每段課程結束都有一個展示會，孩子會把他們的成果展現給家長看。我很喜歡這個夏令營的現實層面，有限的資源、有限時間，以及展示給大家看的日期。我強烈推薦 iD Tech 給具技術或創造性傾向的孩子。

我們也在本地的 CocoaHeads 用戶群花了一些時間，那裡有幾位青少年參加。這些奇特的人十分關心本地開發社群。應該有更多本地用戶群鼓勵年輕人加入。

我希望他學到的重要一點是，社群是關鍵。知道如何透過 Google，找出隱藏在部落格中的問題解答很重要，知道如何參與線上社群論壇是不可或缺的，而能夠與其他嘗試探索技術問題的人群合作，則是關鍵。

即使他未來職涯不在 IT，在幾乎所有其他重要領域中，他也能應用同樣的社群導向技能（尋找答案、溝通、團隊合作、貢獻）。

◎本文翻譯自 Open Source.com，原作者為 Ginny Skalski：
http://opensource.com/education/13/10/burr-sutter-interview
_______________________________________________________________

■ [自由專欄] 開放源碼專案臭蟲提交的用戶指引

謝良奇／編譯

我最近在臉書上，號召舉行針對 Fedora 20 的 GNOME 3.10 測試日 (Test Day)。我所得到的回應，讓我對從一般大眾到開發者，如何為開放源碼專案提交並修復臭蟲，做了一番思考。

互動過程如下：

我：大伙們，讓我們明天對 GNOME 3.10 與 Fedora 20 做測試吧。

用戶：不確定是否有幫助，不過當我在筆電上登入並進入待機後，就沒辦法再登入回去了。我用的是 Fedora 19。

我：那提交個臭蟲吧。

用戶：我剛才已經告訴你了。而且我想臭蟲追蹤系統需要帳號才能使用吧。

為何要將臭蟲提交至 Bugzilla？

開發者與用戶的比例是 1:100，有時甚至更少，因此為了順利解決問題，讓臭蟲被發現而修復，必須使用像 Bugzilla 的追蹤系統。這同時也能確保其他用戶注意到這個問題。如果是各種硬體共同的問題，其他人可以提供更多資訊，協助更快速解決問題。

上列我和用戶間的互動也點出了，部分用戶不想為了提交問題或臭蟲，而建立 Bugzilla 帳號。不過，如果你發現問題卻沒有回報，問題可能拖上很長時間仍無法獲得解決。回報臭蟲也是一個為你所使用的開放源碼專案貢獻的機會。

現實情況是，對任何開放源碼專案來說，開發者與品質保證代理人都是稀少的資源。在推出新專案期間，他們得在時限前達成自己的計劃與目標。因此，雖然透過社群媒體、線上交談，甚至是面對面把問題告訴某人是比較省事，最好的做法還是在開放源碼專案使用的追蹤系統中，提交臭蟲。

開放源碼專案心態

Google 的開放源碼總監 Chris DiBona 對於開放源碼社群（包括開發者與用戶）的運作（以及為何有時看來殘酷），給了不錯的總結：

我認為那是因為開放源碼專案只有透過具生產力的成員，並忽略其他人，才得以運作。這種方式有時十分苛刻且排他，而它本來就是如此：殘酷地苛刻並排除無法貢獻的人。

因此，我猜我要說的是，開放源碼世界中實行的適者生存，是一種相當殘酷的機制，不過這對生產高品質軟體非常非常有用。雖然如此對新手而言並不好過...

開放源碼社群的每個成員在開發並推動專案上，大量投入自己的閒暇時間與資源。因此，將做事方式從始至終精簡化是非常重要的，且每個人都要遵守這些規則。

提交問題或臭蟲：

＊登入所使用的追蹤系統，像是 Bugzilla
＊建立測試案例
＊描述重現問題/臭蟲的步驟
＊加分：如果有的話，把它加到測試日的 wiki 頁面。之後，當其他人有時間時，他們可以在可能情況下進行測試。


開放源碼專案是有趣且富挑戰性的。而參與的最好方式，以及我們所盼望的，是你在可能時施以援手。每個貢獻都至關重要！

◎本文翻譯自 opensource.com，原作者為 Alexander Todorov：
http://opensource.com/business/13/10/user-guide-bugs-open-source-projects
_______________________________________________________________

■ [源碼新聞] 10 種協助開放源碼城市維持透明度的工具

謝良奇／編譯

今日，不論在政府的哪個領域，透明度都是一個關鍵課題。藉由網際網路，對於城市中所發生的大小事，市民們期待能知道得更多，同時也尋求更多能向政府代表問責的途徑。提供透明度並且讓市民更易取得所需城市服務的最佳方式之一，是成為一座開放源碼城市。開放源碼城市是一個能使用各種新的工具，包括手機應用程式，將資訊公開給市民並與之互動的城市。

以下是協助開放源碼城市維持透明度的 10 種工具。

＊CitySourced：這套重要工具是能協助市民舉報如環境與公眾安全等公民問題的手機應用程式。使用這套應用程式為市政府節省金錢與時間，並能提升政府問責的水準。
＊FixMyStreet：所有城市的最嚴重問題之一，就是路面狀況。不過，許多城市的市民並不了解如何舉報並尋求市府協助。透過這套強大的開放源碼應用程式，市民可以快速簡易地向有關單位舉報坑洞、塌陷的排水溝、受損的路牌等問題。
＊OpenPlans：OpenPlans 是一家致力於創造有用交通與規劃工具的公司，提供給有意願利用開放源碼技術的城市。儘管這個技術多半運用在大城市，OpenPlans 希望也能讓小城市使用他們的服務，以經濟的方式創造透明度，並降低市民與政府互動的門檻。
＊Electorate.Me：這個網站讓人們可以在各自地區的政治與社會議題上發聲。開放源碼城市可以鼓勵其市民使用這個網站，確保民眾問題可以及時地獲得正確政府部門的處理。
＊NationBuilder：NationBuilder 讓社區建立網站、社群網路與其它線上功能，好讓政府機構和市民緊密互動。組織化的工具包含了地圖、調查、問與答，以及社區內事件的即時更新。
＊OpenPublic：這是僅有能協助城市接觸大眾的開放源碼內容管理系統。城市可使用適應式設計 (responsive design) 建構網站並提供大眾資訊。安全且可客制化的網站，成本遠低於購買私有軟體。
＊Open311：Open311 為那些希望更有效追蹤民眾問題的城市，開啓了一道大門，同時也為市民向市府舉報問題，提供了更簡易的方法。這些開放的溝通頻道不但給了市民在城市問題上更多的主導權，也不需擔心政府忽視他們的意見。
＊Granicus：Granicus 提供市政府管理與透過線上及行動方案播放媒體所需的工具。藉由提供雲端媒體儲存，Granicus 協助政府無需支付大筆預算在個別儲存選項上，即可滿足市民需求。
＊SeeClickFix：SeeClickFix 是另一套應用程式，開放源碼城市可用以鼓勵市民舉報街區問題，以便讓合適的政府機構採取行動。除了提供市民舉報工具外，這套應用程式也可以針對特殊區域的民眾發送警示，以加強溝通與安全。
＊Open City：Open City 由一群志願工作者組成，以開放源碼形式建構手機應用與其他程式，促進市政府的透明度。城市可以請求各種用途的應用程式，並協助市民參與其中。


雖然最初的開放源碼城市也許是大城市，這些工具讓小城市在經濟上也能負擔得起實現開放源碼政策。

◎本文翻譯自 opensource.com，原作者為 Logan Harper：
http://opensource.com/government/13/10/tools-open-source-cities
_______________________________________________________________

■ [源碼新聞] 開放源碼投身多樣化，每個人都是贏家

謝良奇／編譯 

身為一名創業家、軟體工程師、開放源碼開發者，Jessica McKellar 協助組織 Boston Python 使用者群組，並在介紹並接納更多初學者與女性的多樣性擴展上，扮演了重要角色。參與度從 0-2% 增加到 15%，並且在過去 2 年內該使用者群組一直維持著這個數字。

這樣的結果讓 Jessica 確信，每個人都會因為開放源碼社群在多樣化擴展上的投入而受惠。由於舉辦初學者系列課程、進階工作坊、開放源碼衝刺 (sprints)，Boston Python 使用者群組的人數已經成長了 5 倍以上，從 700 名成員來到超過 4000 人。如今他們是全球最大的 Python 使用者群組。而這樣的成長應該是所有開放源碼社群都嚮往的。

問：妳在開放源碼社群待了多久？一開始有人帶領妳嗎？

答：我對開放源碼專案的第一份貢獻，是在 2009 年為 Twisted 專案寫了一些文件（Twisted 是用 Python 寫的事件驅動式網路引擎）。隨後我參與了這個專案，現在是核心成員之ㄧ，也很榮幸地寫了本關於 Twisted 的書。

我第一次貢獻 Twisted 的經驗很棒：該社群對新貢獻者有詳述的文件，當我首次跌跌撞撞地使用那些工具與流程時，該社群表現出支持與耐心。我並沒有一個特別的帶領者，不過 Twisted 社群的共同支持，以及來自首次貢獻審閱者的耐心回覆，讓我獲益許多。

問：妳如何看待妳參與社群之後，開放源碼軟體的演進？

答：在擁抱多元化與多樣化擴展上，特別是支持各種背景初學者上，可以看到清楚且美好的進展。技術研討會逐漸採行的行為守則 (Codes of Conduct)，如 GNOME 女性擴展計劃 (GNOME Outreach Program for Women)、Python 軟體基金會 (Python Software Foundation) 的擴展與教育計劃、PyCon 的新手程式員 (Young Coders) 等等，都是開放源碼社群致力使自身成為溫馨且富有支持性環境的若干範例。

問：妳對 Python 社群有著深入參與。為什麼是 Python？妳與這個語言的初次經驗為何？

答：我一開始是在學校裡使用 Python（我在麻省理工學院時，正逢核心 CS 課程從 Scheme 改用 Python），然後我的每個工作我都用 Python。它也是我大多數非正式專案所使用的語言。除了語言本身的開發樂趣之外，我對 Python 社群的投入，是因為該社群對於為各種背景的人培植支持性且溫馨環境的承諾。

問：妳和 Asheesh Laroia 在 PyCon 2012 上，針對 Boston Python 使用者群組擴展多元性，給了精彩的演說。妳能說說看妳們做了些什麼嗎？

答：過去 2 年，Boston Python 不斷地定期舉辦一連串著重讓更多女性加入本地 Python 社群的活動。其中第一步是為初次接觸程式設計者舉辦的動手做週末工作坊。該工作坊舉辦了 8 次，超過 400 名女性參加。

對於此一計劃我們的目標是：

＊讓更多女性參加當地程式設計社群，具體目標是讓所有 Boston Python 使用者群組的活動，都能有 15% 的女性參與者。
＊讓本地程式設計社群認識優秀女性程式設計者。
＊發展讓其他程式設計使用者群組也能自行舉辦多元化擴展活動的資源。


在舉行這些工作坊之前，Boston Python 使用者群組一般的活動只有 0-2% 的女性。自從舉辦之後，普通的使用者群組活動都能達到或超過 15% 女性參與者。由於這些都是招集 80 到 120 人的大型活動，因此不論是在比率上或是在與會的女性人數上，都代表了很大的進展。更值得一提的是，這些結果已經持續了 2 年之久。

這些擴展活動的一大秘密在於，即使妳只著重在特定的弱勢族群，所有人還是能因此受惠。舉辦這些入門工作坊，能迫使我們學習如何真正幫助初學者。在這些入門工作坊之後，我們開始每月固定舉行一次 Project Night，讓初學者與進階學習者有更多機會，透過個人指導來學習並練習這個語言。我們發展出全球各地使用的課程與實踐專案。我們舉辦進階工作坊與開放源碼衝刺。透過這些活動，該使用者群組人數已經成長超過 5 倍，從 700 名成員增加到 4000 人以上，成為了全球最大的 Python 使用者群組。

簡而言之，當你投身多樣化擴展時，每個人都是贏家。

◎本文翻譯自 Open Source.com，原作者為 Lynn Root：
http://opensource.com/life/13/10/interview-jessica-mckellar
_______________________________________________________________

■ [源碼新聞] Firefox 的 Lightbeam 讓您享有免於受網路監控的自由！

黃郁文／編譯

Mozilla 最近釋出一款新的開源工具 Lightbeam，以協助網路使用者偵測是否自己的網路活動，已在不知情之下受到第三者的監看！

Lightbeam 是一款開源且免費供人下載的瀏覽器附加元件 (add-on)，安裝之後，它可以即時向使用者顯示，哪家公司正在追蹤使用者的網路活動，這些監看者通常都是想要取得使用者個人資料的品牌或廣告商。Mozilla 表示這個工具的目的，是要曝露這些隱藏在網頁背後的監看行為，通常這些公司是偷偷置入一小段稱為 "tracking cookie" 的程式碼，在使用者的電腦裡，藉以監看紀錄使用者造訪了哪些網站。而 Lightbeam 就是要透過圖像方式，讓使用者輕易地了解，這些公司是如何監看紀錄使用者的網路活動。

實際操作該軟體時，點進圖表 (Graph) 選項，該視窗便會展示使用者與造訪網站的互動圖，以及不同監看公司間的關聯性。而在列表 (List) 選項下，Lightbeam 則會清楚顯示使用者在第三方網站第一次與最近一次的瀏覽紀錄，並指出使用者已造訪哪些網站，以及因此所連接上的第三方網站的數量。至於在時鐘 (Clock) 選項下，則可讓使用者檢視在過去 24 小時內，所連結上的網站數量與態樣。其次，Lightbeam 也可協助揭露瀏覽網站的過程中，哪些圖片、腳本或廣告是非自主性地由第三方伺服器被導入的，以幫助使用者判明哪些資訊其實是不需要或不受歡迎。另外，使用者還可以選擇與 Lightbeam 資料庫分享資料，以協助資料庫方析究竟這些監看與廣告網站之間，是如何互動。目前 Mozilla 已將 Lightbeam 的程式源碼，放置至 Github 上成為開放源碼專案，好讓對此專案有興趣的開發者，能透過群體共工的力量，協力將此專案改良、發揚的更臻完美。Lightbeam 最初的專案名稱叫作 Collusion，是由 Mozilla 開發人員 Atul Varma 於 2011 年所創建，當時主要是透過圖示化介面，顯示使用者瀏覽網路與線上資料的狀況。此專案之後復與 Emily Carr 大學藝術設計系的學生合作，以接續提升附加工具的視覺效果，同時 Lightbeam 還有獲得來自 Ford Foundation 與 Natural Sciences and Engineering Research Council 的資金援助。

一般說來，這些監看網路使用者活動的第三方網站，其牟利模式是在取得足夠的個人資料後，就可將個資賣給廣告商，之後廣告商就可以分析這些個資，來向使用者拋出其可能會感興趣的廣告；甚至將這些個資轉交政府機構，以協助政府掌控網民活動。Electronic Frontier Foundation 表示第三方網站所造成的潛在威脅，就是個資在使用者不知情的狀況下，便會在網路世界裡被任意散布，譬如有些第三方公司，便曾蒐集與分析使用者上網的行為模式，進而得出使用者不欲人知的隱私，更反向推銷使用者相關產品與訊息；甚至有些資料透過分析，還可得出使用者的政治傾向。Electronic Frontier Foundation 表示，在這個資訊時代，使用者應該要有權了解其個人資料在線上被利用的狀況，而身為了解此一生態的技術組織，他們也有責任主動確保使用者這些隱私權利。

而除了 Lightbeam 這個揭露第三方追蹤個資資訊的工具外，其實，還有一些瀏覽器內嵌的設計，便可以阻止 cookies 植入，以防止未經使用者同意便自動收集資訊的行為，像是 Ghostery (http://www.ghostery.com/)、Do Not Track Me (https://www.abine.com/dntdetail.php)，與 Disconnect (https://disconnect.me/) 都是在此概念上去發展出來的網站或專案。不過，要額外說明的是，並非所有的網路追蹤裝置都是隱私侵入的導向，有些 Cookies 的功能在於節省使用者時間以自動協助使用者填寫表格與個人資料，這些功能常見於購物網站的購物車，與社交網站的登入頁面等。只是，讓這些第三方追蹤行為透明化，對使用者如何抉擇其網路活動至為重要，再者，一個具有良善隱私權保護政策的網站，應該要讓使用者清楚理解到造訪該網站，不僅向網站本身透露行蹤而已，同時可能還有其他第三方公司接受相同資訊，如此一來，使用者將意識到所處的網路環境而謹慎操作，進而降低未來發生隱私權保護爭議的糾紛與風險。


相關網址：

1、Firefox 的 Lightbeam 讓網路追蹤者的監看行為無所遁逃
http://www.linuxinsider.com/story/79282.html

2、Lightbeam 讓使用者知道誰在追蹤其網路活動
http://www.technobuffalo.com/2013/10/30/lightbeam-for-firefox-shows-which-companies-track-you-online/

3、Lightbeam 讓網路活動追蹤公司曝光
http://www.theguardian.com/technology/2013/oct/28/mozilla-lightbeam-tracking-privacy-cookies

4、Lightbeam 專案程式源碼儲放頁面
https://github.com/mozilla/lightbeam/
_______________________________________________________________

■ [源碼新聞] Facebook 與 Cisco 展開網通裝置開源之爭！

黃郁文／編譯

過去十年可說是自由開源軟體 (Free and Open Source Software, FOSS) 與私有專屬軟體 (proprietary software) 的市場競爭，但如今，使用 FOSS 來進行產品開發幾乎已經成為時代的趨勢，從 Facebook 與 Cisco 近日開展的網通裝置之爭，可以觀察此股軟體專案的開發之爭，已不再僅是 FOSS 與私有軟體之爭，而慢慢已轉化為開源與開源之爭！

約 6 個月前 Facebook 支援其開發團隊，展開一個名為 Open Compute Project (OCP) 的開源軟體與開放硬體專案，期望藉此能開發一個機櫃頂端交換器 (top-of-rack switch)，使該交換器可主控啟動所有型態的網通軟體。而最近 Facebook 開始朝此目標，踏出實際建置的第一步，在 Intel、 Broadcom、Mellanox，以及 Cumulus Networks 紛紛貢獻轄下規格與工具軟體的狀況下，據說目前已至少有 30 家公司對 OCP 揭示的設計規格 (specification) 表示興趣，並漸以結盟的態式，推動相關產品的後續產銷。

OCP 的 Frank Frankovsky，表示該專案目前所從事的，正是藉「軟體定義網路 (software-defined networking)」的新式作法，來協助網通裝置邁入下一個世代的進化與茁壯，而開放源碼共享設計規格的作法，恰恰符合這樣的開發理念，因為只要設計規格相通相符，跨公司所研發出來的軟體程式，理論上都可以在同一系列的 OCP 網通裝置、交換器上進行使用。為了達到這樣的目標，Intel 貢獻了一個與 10/40G 交換器有關的網通規格與協定，此協定能用在交換器系統、中央處理器、週邊裝置，甚至電源上的互動優化。而由於採開源開放的態度揭露，Intel 此一規格亦毋須強制搭配 Intel 的硬體配件才能運作。此一奧援，對於 OCP 專案的未來發展至為重要，因此規格範圍含括大部份的網通裝置硬體架構，甚至包含部份網通軟體架構；Broadcom，則貢獻自身的網路交換規格 (Open Network Switch)；Mellanox 同樣也貢獻一個機櫃頂端交換器規格；至於 Cumulus Networks，更進一步貢獻出其廣為全球網路硬體商所採用的開放網絡安裝環境 (Open Network Install Environment, ONIE)，ONIE 能透過利用網路遙控開機的機制，直接遠端為消費者在其網路交換器上裝置與更新軟體，如此一來，管理人員便可方便地在不同但同一規格的網路交換裝置上，批次性地安裝與執行所需軟體，且在其開放安裝環境的架構下，所使用的裝置作業系統可以是 Cisco 的, 也可以是 Cumulus 或其他廠商的系統。

從上面這些描述可以看到，愈多貢獻者加入 OCP 的產銷合作關係，就表示相關裝置的研發與販售價格可以愈來愈低，而可互相交換軟體與開放元件，就表示處理程式臭蟲 (bug) 的時程也會更為縮短。Facebook 推動 OCP 專案的期望，就在於希望達到 Facebook 未來所有網路裝備的軟硬體架構，都可以在 OCP 的基礎上進行研發，如此一來，Facebook 便可利用這些設計，直接由 ODM 廠商 (original design manufacturers) 購入硬體，以量身打造因應 Facebook 所需的伺服器裝置。這樣的採購方式也跳過許多像是 HP 或 Dell 這些中間軟硬體商的介入，而能降低成本與提高效率。另外，OCP 專案的作法，也創造了在 Cisco、Arista Networks，以及 Dell Force 10 division 這些大型商販選項之外的選擇方案。因其提供的規格與相關的軟體開發工具組是以開放、開源的方式來提供，故理論上未來願意加入研發與產銷的廠商，將有機會可以繞過前述這些廠商的既成技術，而不會受限於傳統上的閉鎖規格。所以儘管 Facebook 看來會是 OCP 專案的最大受惠者，但據報導目前在開放網路技術領域中，已有約 7-10 家廠商已宣示加入檢視這些規格的行列，像是 Fidelity 與高盛集團 (Goldman Sachs) 這些大型的跨國公司皆有表態，故有論者認為，在 Intel 及 Broadcom 等眾多大廠的支持下，OCP 專案所支持的開源軟體與開放硬體格式，未來也許將能與 Cisco、Juniper 與 Brocade 等大廠匹敵，產生一股彼此抗衡的新局勢。

Cisco 對前揭 OCP 專案的進展則表示，目前這樣的發展對 Cisco 並未真正造成威脅，因為 Cisco 早已加入由 Linux Foundatoin 協力主導的 - OpenDaylight 這樣的開放源碼與開放網絡專案，其並強調在此開源應用的脈絡下，Cisco 將會提供可與 OCP 良性競爭的衡平方案，而不會讓自家產品盡處於劣勢的局面。與此配合，Cisco 更在近期宣布其網通裝置應用程式的相關架構資訊，以讓其他廠商可以在此 API 的基礎下，加速對 Cisco 相關產品在管理、編程、監控、虛擬化、網路服務，以及遠端儲存方面的應用，並讓網通裝置運作架構能夠迅速回應應用程式所需。對於 Facebook 透過 OCP 帶領各家廠商進行開源軟體、開放硬體佈局的相關動作，Cisco 則表示固然 Facebook 所領軍的 OCP 在技術、資源上看似完善，不過最後誰能勝出，還是有賴所推方案是否具備可程式性與彈性 (programmability and flexibility)，同時能夠達到節省成本，並兼顧規模性、效能與安全性的目標。

看來 FACEBOOK 藉 OCP，已開啟了與 Cisco 支持 OpenDaylight 專案的對決，鹿死誰手仍不明朗。不過此一明例讓大家看到，在資訊系統上，開源原力與商用趨性密切交流與互動的年代已經來臨，不論 OCP 或 OpenDaylight，都蘊含未來資訊專案在開發上，必須兼具彈性化與模組化的向性，以讓使用者更容易量身訂做軟硬體裝置，並擁有更高的主控權，我們樂見此種開源自由系統的進展與成功！


相關網址：

1、Facebook、Intel，與 Broadcom 聯手打造 open switch 以對抗 Cisco
http://arstechnica.com/information-technology/2013/11/cisco-threatening-open-switch-coming-from-facebook-intel-and-broadcom/

2、Facebook 對 Cisco 亮出 open network 利刃
http://www.theregister.co.uk/2013/11/12/facebook_cisco_killer_ocp_networking/

3、Open Compute Project 官方網址
http://opencompute.org/blog/progress-in-opening-up-the-network-/

4、Facebook 貢獻主機板設計架構予開放硬體推動團隊
http://www.openfoundry.org/tw/foss-news/8924-facebook-

5、Google 轉換至 OpenFlow 網路，下一個挑戰是用戶 SDN
http://www.openfoundry.org/en/news/8692?task=view
_______________________________________________________________

■ [源碼新聞] 工研院與清大、交大攜手合作培育自由開源軟體人才

ROCK／文

台灣的 Open Source 領域又向前一步！

近年來手持裝置的風潮影響甚鉅，Linux、Android、Firefox 等等成功的開源專案也從開發者們的世界逐漸被帶往一般大眾，變得更廣為人知。

使用這些科技裝置的人增加，相對也提升了自由開源軟體的開發風氣。有鑑於此，國內的自由開源軟體開發人才培育再度受到重視，2013 年 11 月 22 日，工研院院長徐爵民、清華大學副校長鄭建鴻、交通大學副校長林一平共同啟動了連續三年的「自由開源軟體人才培育計畫」，將在三方的共同努力下，讓自由開源的開發風氣從學校開始紮根，透過參與國際開源專案來增加產業界、學術界與國際開源趨勢的接軌，並期許能為台灣未來的軟體開發界種下新的希望。

工研院的資訊與通訊研究所所長吳誠文也對外表示，Software Defined Networking (SDN) 技術正在國際間開始起步，工研院是第一次以 SDN 為主題，邀請張韻詩教授 (http://www.iis.sinica.edu.tw/pages/janeliu/index_zh.html)、高嘉良 (clako, http://blog.clkao.org/) 及黃敬群 (jserv, http://blog.linux.org.tw/jserv/) 兩位自由開源軟體的專家來指導，配合清大、交大在課堂或是專題中引導學生鑽研 SDN 相關技術，將虛擬化網路應用到雲端、資料中心，以提升運作效率，並帶動未來 SDN 在產業界的發展。該計畫每年將提供 150 萬元的獎學金。

另外、參與國際的 Open Source Projects 也是自由開源軟體界的必需課程，從參與開源專案中學習自由開源軟體的開發模式，除了學到技術也可以學到國際間的軟體共工模式及開發方法。該計畫也沒有忽略掉這一點，除了會持續鼓勵學生們參與國際開源專案之外，也已經選出了 30 多位的優秀學生，並將進行一年的自由開源軟體培訓。
_______________________________________________________________

■ [源碼新聞] PCLinuxOS 讓 Linux 系統在桌機與筆電上的運用更加便利！

黃郁文／編譯

將 Linux 作業系統安裝在一般桌機與筆電下進行運用，一直以來或多或少會給人有介面不夠平易近人的感覺，而且初入門者更會擔心安裝的過程過於繁複而卻步，不過事實上安裝 Linux 作業系統進行一般操作的好處其實不少，因為如果單純對電腦的需求僅為上網、查資料，以及文件處理，那麼目前 Linux 作業系統下，被感染電腦病毒或木馬惡意程式的可能性遠低於其他作業系統，且其安裝過程也日漸簡便，例如由國內「教育部校園自由軟體數位資源推廣服務中心 (OSS APPLICATION CONSULTING CENTRE, OSSACC)」協力推動，且廣為國內中小學教育環境所選用的 ezgo 作業系統，即為著例；另外，本文下列介紹的 PCLinuxOS，也可以讓試用者對於 Linux 作業系統的應用環境，在可用性與便利性方面產生改觀！

PCLinuxOS 這個作業系統，可以搭配多種特色各異的桌面來進行應用，包括 KDE、LXDE、FullMonty，以及 Mate。就初學者而言，可以選用客製化較完整的全功能桌面環境，安裝時不需再經歷太多煩瑣設定，但對於 Linux 的進階玩家來說，又可依個人喜好來進行細部的設定。PCLinuxOS 是由 Bill Reynolds 於 2003 年 10 月 24 日首次釋出，迄今已有 10 年的發展期間，最新版本則是 2013 年 10 月版，除了可以搭配 KDE、LXDE、FullMonty，以及 Mate 這些著名的桌面環境外，其並另外釋出有 KDE MiniMe 的特別版，而最新版本的 Linux Kernel，則是含括 3.4.64 到 3.4.55。

使用者若是想在系統安裝完畢後，便有個完整的 PCLinuxOS 體驗，則建議下載安裝 KDE Full Monty desktop ISO 的映像檔，此一檔案具備獨特的 KDE shell，並結合了 PCLinuxOS KDE 安裝程式，以及特殊的桌面布局與內建的驅動程式、應用程式，可以在自動化安裝之後，就讓使用者充分瞭解 PCLinuxOS 的各項功能；而若是想要按喜好設定，則可選擇 KDE MiniMe 版本，該版本可讓進階玩家，在基本的 KDE 桌面上更改其他設定，這個輕簡版的安裝映像檔，預設是未搭配印表機驅動程式，不過玩家仍可視需要，透過網路來安裝所需的各式元件；至於 KDE Full Version ISO 映像檔，則是搭配標準 KDE 桌面及許多預載的應用程式，初學者不需額外安裝其他程式，即可立刻享用 PCLinuxOS 提供的全功能，一般來說，KDE 桌面因其可操控介面較為華麗，對於初試 Linux 的試用者而言，並非皆為最佳選擇，但 PCLinuxOS 所提供的 KDE 環境，已經其巧手調製，變得讓新手更容易上手，且能讓新手在熟悉環境後，即可自行調整相關設定。

但如果使用者對於 Linux 桌面的應用環境，真的很不熟悉，那則是建議您可以試用 MATE 的桌面環境版本。MATE 是 GNOME 2 的分支專案，其較為傳統的操控介面，以及沒有過於繁複的側邊工具列（side panel），有時反而是最吸引忠實使用者的特點，其在質樸的同時，也能讓使用者同時享受所有 Linux OS 在功能上的優點。而倘若 KDE 和 MATE 版本，皆無法合乎需求，那使用者還可試試 LXDE 的桌面環境！LXDE 版本不會佔用太大的系統資源 (hardware-friendly)，所以若是要在較老舊的硬體上享受高速運作的話，Lightweight X11 Desktop Environment 是使用者不二的選擇，另外，LXDE 還整合了標準鍵盤捷徑與標籤檔案瀏覽的功能，值得一提的是，LXDE 此套功效卓越的桌面環境，其創立的主要開發者為國內著名的自由開源軟體開發社群成員洪任諭 (PCMan)、黃敬群 (jserv)、錢逢祥 (Fred Chien)、劉穎駿 (Paul Liu)，以及李健秋 (Andrew Lee) 等，不同於 Linux 的其他桌面環境，LXDE 的元件相依性極少。取而代之的是各元件可以獨立運作，大多數的元件都不須倚賴其它套件而可以獨自執行。

此外，使用者在 PCLinuxOS 可以使用 RPM、Yum 等已在 Red Hat Linux 與 SUSELinux 上運作順暢的套件管理軟體，以之來輕鬆安裝、管理或移除程式。並且，PCLinuxOS 的開發團隊，亦照著 Synaptic Package Manager 專案的框架，做出通用於 Debian Linux 下的套件管理程式，讓部份使用者本來唯有透過 apt 及 apt-get 等指令列，才能下載安裝的軟體套件，一樣能夠透過圖形化的介面，安裝在 PCLinuxOS 上進行使用。而不論使用者使用哪一個應用桌面的 PCLinuxOS 作業系統，其安裝套件庫裡，都預設有 Firefox 瀏覽器、GIMP 影像編輯軟體，或是 LibreOffice 4.1 等常用軟體的安裝配置。另一個 PCLinuxOS 令人讚賞之處，在於這套整合桌面環境已配備一般使用者所需的多媒體影音播放解碼器 (codecs)，並已妥善處理好程式元件相依性 (dependencies) 的問題。不論哪一個桌面環境的 PCLinuxOS，都配有所需的解碼器工具，如此一來，使用者便毋須再為所安裝的音樂與錄影播放器，搜尋缺失的解碼格式或元件，而能順暢觀賞 YouTube 或其他以壓縮格式存錄的影片與多媒體檔案。

總體而言，PCLinuxOS 是一個不論對初階新手或進階玩家都好用的 Linux 作業系統，不管是上網、一般文書，或執行較繁複的工作需求，都能讓使用者得心應手，簡單來說，若想要使用特殊功能與效果，就選擇 KDE 版本，而若想要享受快速及賞心悅目的視覺效果，那就嘗試 LXDE 或 MATE 版本吧！


相關網址：

1、PCLinuxOS 讓桌面 Linux 變好看 
http://www.linuxinsider.com/story/79418.html

2、PCLinuxOS
http://www.pclinuxos.com/

3、ezgo 下載與版本說明頁面：
http://ezgo.westart.tw/ezgoX/download.php
_______________________________________________________________

■ [源碼新聞] ezgo11 發表會！用 ezgo 玩自由軟體真的 easy go！

ROCK／文

如果您受夠了自用的系統被商業公司停止支援更新、或是被病毒攻擊您的系統，常常要重灌電腦、想省錢還要想辦法找各個軟體的 CDKEY，那麼、您可以考慮玩玩看自由、開放原始碼、又免費的軟體，而國內應用範圍最廣，最能夠讓爸爸媽媽、爺爺奶奶快速上手玩自由、開源軟體的，首推 ezgo 視窗環境作業系統了。

ezgo (http://ezgo.westart.tw/ezgoX/about.php) 是由教育部的自由軟體推動計畫「校園自由軟體數位資源推廣服務中心」(OSSACC, http://ossacc.moe.edu.tw/) 所負責推動的開放原始碼的視窗環境作業系統。由 ezgo 軍師團 (https://www.facebook.com/ezgotw) 的熱血志工們一點一滴所打造的 ezgo，是一套基於 Kubuntu、使用 KDE 桌面環境，結合各種教育、科技、文書處理及繪圖影音等等 100 多種常用的自由開源軟體，並製作動畫教材，成為 ezgo 這套全中文的 X Window 作業系統。至於 ezgo 裡面有哪些豐富的資源呢？可以參考這裡 (http://ezgo.westart.tw/ezgoX/software.php?page=1)。

2013 年 11 月 23 日，ezgo 的歷史已經十年了，軍師團的成員們在國家教育研究院台北院區的 ezgo 11 發表會 (http://ossacc.moe.edu.tw/modules/eguide/event.php?eid=41) 上公告了 ezgo11 完成的好消息，並且在該發表會上展現 ezgo 11 的強大火力以及功能特色，從現場的 DEMO 中，我們也看到了這些年來負責開發、打包及中文化團隊辛苦的結晶。ezgo11 將會在 12 月初正式開放讓民眾可以下載使用。

如果您不小心錯過了台北的這場精彩的發表會，也請密切注意 ezgo 軍師團 (https://groups.google.com/forum/#!forum/ezgo-tw) 的消息，因為他們已經表示，將會繼續在中南部也舉辦發表會哦！
_______________________________________________________________

■ [源碼新聞] 2013 年十二月份社群活動列表

作者是 OSSF電子報團隊／整理

十二份的活動列表出爐囉！有興趣的朋友們請多多邀請您的朋友一同前往參與！另外，由於活動列表出來的時間比較早，若後續有活動希望也能一起做宣傳的朋友們，記得來信告訴我們喔！信箱： ossfepaper@openfoundry.org 。


MozTW 連續聚: Mozilla Summit 2013 分享會（12/1）
時間：13:00~17:00
地點：台北市大同區南京西路18巷8-2號3樓
社群網址：https://kktix.com/events/moztw-gathering-mozsummit13

SA@Tainan 二連發- 微軟雲端入門（12/1）
時間：14:00~17:00
地點：成功大學成功校區資訊大樓2F的75201電腦教室
社群網址：http://phorum.study-area.org/index.php/topic,69219.0.html

台中自由軟體愛好者固定聚會（雙週一，12/2、12/16）
地點：台中市中港路二段 60-3 號（默契咖啡）
時間：19:00~21:00
活動資訊：https://groups.google.com/forum/#!forum/taichung-foss-fans-meeting

MozTW + Arch Linux Lab（雙週一，12/2、12/16、12/30）
地點：新竹市北區勝利路195號新橋b3
時間：19:30~22:00
活動資訊：https://etherpad.mozilla.org/moztw-lab-hc

TOSSUG BoF（每週二，12/3、12/10、12/17、12/24、12/31）
地點：台北市中正區南昌路二段 200 號（Mix Coffee & Tea）
時間：18:00~21:00
活動資訊：http://www.tossug.org/

MozTW Lab @ 基隆（每週三，12/4、12/11、12/18、12/25）
地點：基隆市仁愛區港西街 4 號 1 樓（1915 海洋咖啡館）
時間：19:00~21:00
活動資訊：https://groups.google.com/group/moztw-general

KSDG 高雄開發者社群 (Kaohsiung Software Developer Group) meetup（12/5）
地點：高雄軟體園區 B 棟 708 室（高雄市前鎮區復興四路 2 號 7 樓之 5）
時間：19:00~21:00
社群網址：https://www.facebook.com/groups/KSDGroup

Hacking Thursday（每週四，12/5、12/12、12/19、12/26）
地點：台北市重慶南路一段 1 號 2 樓（MarketPlace）
時間：19:30~22:30
活動資訊：http://www.hackingthursday.org/

MozTW Lab @ TP（每週五，12/6、12/13、12/20、12/27）
地點：Thé6 6号茶（台北市中正區新生南路一段6號2樓 ）
時間：19:00~23:00
活動資訊：https://groups.google.com/group/moztw-general

Taipei Wikipedian Weekly Meetup: Community Operation 維基台北定期聚 — 社群經營工作雙週聚（12/10）
地點：台北市松山區民生東路三段 140 巷 11 號
時間：19:00~21:00
活動資訊：http://zhwp.org/zh-tw/WP:WPTP-S

Cocoaheads - Kaohsiung（12/12）
地點：高雄軟體園區 B 棟 708 室（高雄市前鎮區復興四路 2 號 7 樓之 5）
時間：19:00~21:00
社群網址：https://www.facebook.com/groups/cocoaheads.kaohsiung/

Taipei Wikipedia Monthly Meetup: Writing Day 維基台北定期聚—假日寫作月聚（12/14）
地點：台北市松山區南京東路二段一號 （伯朗咖啡 南京二店二樓）
時間：14:00~16:00
活動資訊：https://zh.wikipedia.org/wiki/Wikipedia:WPTP-W

KSDG web course（12/21）
地點：高雄軟體園區 B 棟 708 室（高雄市前鎮區復興四路 2 號 7 樓之 5）
社群網址：https://www.facebook.com/groups/KSDGroup
_______________________________________________________________

□ 關於本報 □__________________________________________________

◎ 主編︰洪華超
◎ 法律專欄編輯︰葛冬梅
◎ 執行編輯︰王怡凱、陳蕙蓁
◎ 外稿編譯︰林誠夏、黃郁文、謝良奇

本電子報自行採訪、報導、編譯、撰寫文章之智慧財產權屬於中央研究院，採用創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版授權散布，歡迎在不變更內容的前提下，以任何形式重製與散布本報，但必須遵守下列義務︰(1) 不得為商業目的之利用；(2) 必須標明本電子報智慧財產權屬於中央研究院；(3) 完整引用本著作權說明。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用上述文章，請與自由軟體鑄造場編輯群(ossfepaper at openfoundry.org) 聯絡。

非自由軟體鑄造場自行撰寫的單篇文章，其智慧財產權利屬於原作者所有，其以非專屬的方式授權予自由軟體鑄造場運用，而與本電子報其他文章併以創用 CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版的方式進行散布。

若欲以創用CC「姓名標示－禁止改作－非商業性」授權條款臺灣 3.0 版以外的方式利用個別作者的文章，請自行與該作者聯繫，或透過自由軟體鑄造場編輯群 (ossfepaper at openfoundry.org) 來轉發聯絡訊息。

授權條款全文請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/legalcode
授權條款簡介請見︰
http://creativecommons.org/licenses/by-sa/3.0/tw/deed.zh_TW

若欲訂閱本電子報，請至以下網址︰
http://www.openfoundry.org/tw/news

如欲取消訂閱這份電子報，可透過自由軟體鑄造場新聞首頁左上方之自動退訂機制︰
http://www.openfoundry.org/tw/news

或寄發電子郵件至︰ossfepaper@openfoundry.org，以進行人工退訂。